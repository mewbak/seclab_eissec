
;; Function main (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a0 (r62,l0) best AREG, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred FLOAT_REGS, alternative NO_REGS, cover FLOAT_REGS
    a4 (r59,l0) best FLOAT_REGS, cover FLOAT_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r62,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r59,l0) costs: AD_REGS:21,21 CLOBBERED_REGS:21,21 Q_REGS:21,21 NON_Q_REGS:21,21 GENERAL_REGS:21,21 FP_TOP_REG:0,0 FP_SECOND_REG:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_REGS:0,0 MEM:14
  a5(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 FP_TOP_REG:0,0 FP_SECOND_REG:0,0 FP_TOP_SSE_REGS:0,0 FP_SECOND_SSE_REGS:0,0 FLOAT_REGS:0,0 MEM:8

   Insn 26(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
   Insn 5(l0): point = 32
 a0(r62): [3..4]
 a1(r61): [5..6]
 a2(r60): [11..20]
 a3(r64): [13..14]
 a4(r59): [17..22]
 a5(r58): [19..24]
 a6(r63): [29..30]
Compressing live ranges: from 35 to 14 - 40%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r61): [2..3]
 a2(r60): [4..9]
 a3(r64): [5..6]
 a4(r59): [7..10]
 a5(r58): [8..11]
 a6(r63): [12..13]
  regions=1, blocks=3, points=14
    allocnos=7, copies=0, conflicts=0, ranges=7
Disposition:
    5:r58  l0     1    4:r59  l0     8    2:r60  l0     0    1:r61  l0     0
    0:r62  l0     0    6:r63  l0     0    3:r64  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 63
insn=7, live_throughout: 7, dead_or_set: 63
insn=8, live_throughout: 7, dead_or_set: 
insn=9, live_throughout: 7, dead_or_set: 58
insn=10, live_throughout: 7, 58, dead_or_set: 59
insn=11, live_throughout: 7, 58, 59, dead_or_set: 60
insn=12, live_throughout: 7, 59, 60, dead_or_set: 58
insn=13, live_throughout: 7, 60, dead_or_set: 59
insn=14, live_throughout: 7, 60, dead_or_set: 64
insn=15, live_throughout: 7, 60, dead_or_set: 64
insn=16, live_throughout: 7, dead_or_set: 60
insn=17, live_throughout: 7, dead_or_set: 0
insn=18, live_throughout: 7, dead_or_set: 61
insn=19, live_throughout: 7, dead_or_set: 61, 62
insn=23, live_throughout: 7, dead_or_set: 0, 62
insn=26, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 9
changing reg in insn 12
changing reg in insn 10
changing reg in insn 13
changing reg in insn 11
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
changing reg in insn 6
changing reg in insn 7
changing reg in insn 14
changing reg in insn 15
deleting insn with uid = 19.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 float.c:7 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 i+0 S4 A32])
        (const_int 100 [0x64])) 44 {*movsi_1} (nil))

(insn 6 5 7 2 float.c:8 (set (reg:SF 0 ax [63])
        (mem/u/c/i:SF (symbol_ref/u:SI ("*.LC0") [flags 0x2]) [0 S4 A32])) 70 {*movsf_1} (nil))

(insn 7 6 8 2 float.c:8 (set (mem/c/i:SF (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 j+0 S4 A32])
        (reg:SF 0 ax [63])) 70 {*movsf_1} (nil))

(insn 8 7 9 2 float.c:9 (set (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 39 [0x27])) [0 c+0 S1 A8])
        (const_int 99 [0x63])) 53 {*movqi_1} (nil))

(insn 9 8 10 2 float.c:11 (set (reg:SI 1 dx [orig:58 D.3783 ] [58])
        (sign_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 39 [0x27])) [0 c+0 S1 A8]))) 96 {extendqisi2} (nil))

(insn 10 9 11 2 float.c:11 (set (reg:DF 8 st [orig:59 D.3784 ] [59])
        (float_extend:DF (mem/c/i:SF (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [0 j+0 S4 A32]))) 99 {*extendsfdf2_i387} (nil))

(insn 11 10 12 2 float.c:11 (set (reg/f:SI 0 ax [orig:60 D.3785 ] [60])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7663f60>)) 44 {*movsi_1} (nil))

(insn 12 11 13 2 float.c:11 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1 dx [orig:58 D.3783 ] [58])) 44 {*movsi_1} (nil))

(insn 13 12 14 2 float.c:11 (set (mem:DF (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S8 A32])
        (reg:DF 8 st [orig:59 D.3784 ] [59])) 74 {*movdf_nointeger} (nil))

(insn 14 13 15 2 float.c:11 (set (reg:SI 1 dx [64])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 i+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 15 14 16 2 float.c:11 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [64])) 44 {*movsi_1} (nil))

(insn 16 15 17 2 float.c:11 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 D.3785 ] [60])) 44 {*movsi_1} (nil))

(call_insn 17 16 18 2 float.c:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb76a2f00 printf>) [0 S1 A8])
            (const_int 20 [0x14]))) 697 {*call_value_0} (nil)
    (nil))

(insn 18 17 26 2 float.c:12 (set (reg:SI 0 ax [orig:61 D.3786 ] [61])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 26 18 29 2 float.c:13 (use (reg/i:SI 0 ax)) -1 (nil))

(note 29 26 0 NOTE_INSN_DELETED)
