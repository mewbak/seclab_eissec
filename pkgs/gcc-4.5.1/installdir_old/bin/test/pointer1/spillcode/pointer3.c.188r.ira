
;; Function main (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r132,l0) best GENERAL_REGS, cover GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r131,l0) best GENERAL_REGS, cover GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r130,l0) best GENERAL_REGS, cover GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r129,l0) best GENERAL_REGS, cover GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a32 (r128,l0) best GENERAL_REGS, cover GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a43 (r127,l0) best GENERAL_REGS, cover GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a54 (r126,l0) best GENERAL_REGS, cover GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a56 (r125,l0) best GENERAL_REGS, cover GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a58 (r124,l0) best GENERAL_REGS, cover GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a60 (r123,l0) best GENERAL_REGS, cover GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a62 (r122,l0) best GENERAL_REGS, cover GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a64 (r121,l0) best GENERAL_REGS, cover GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a66 (r120,l0) best GENERAL_REGS, cover GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a68 (r119,l0) best GENERAL_REGS, cover GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a70 (r118,l0) best GENERAL_REGS, cover GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a72 (r117,l0) best GENERAL_REGS, cover GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a74 (r116,l0) best GENERAL_REGS, cover GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a76 (r115,l0) best GENERAL_REGS, cover GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a0 (r114,l0) best AREG, cover GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, cover GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r112,l0) best GENERAL_REGS, cover GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r111,l0) best GENERAL_REGS, cover GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r110,l0) best GENERAL_REGS, cover GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r109,l0) best GENERAL_REGS, cover GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r108,l0) best GENERAL_REGS, cover GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r107,l0) best GENERAL_REGS, cover GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r106,l0) best GENERAL_REGS, cover GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r105,l0) best GENERAL_REGS, cover GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r104,l0) best GENERAL_REGS, cover GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r103,l0) best GENERAL_REGS, cover GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r102,l0) best GENERAL_REGS, cover GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r101,l0) best GENERAL_REGS, cover GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r100,l0) best GENERAL_REGS, cover GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r99,l0) best GENERAL_REGS, cover GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r98,l0) best GENERAL_REGS, cover GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r97,l0) best GENERAL_REGS, cover GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r96,l0) best GENERAL_REGS, cover GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r95,l0) best GENERAL_REGS, cover GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r94,l0) best GENERAL_REGS, cover GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, cover GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r92,l0) best GENERAL_REGS, cover GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r91,l0) best GENERAL_REGS, cover GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r90,l0) best GENERAL_REGS, cover GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r89,l0) best GENERAL_REGS, cover GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a33 (r88,l0) best GENERAL_REGS, cover GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a35 (r87,l0) best GENERAL_REGS, cover GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a37 (r86,l0) best GENERAL_REGS, cover GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a39 (r85,l0) best GENERAL_REGS, cover GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a41 (r84,l0) best GENERAL_REGS, cover GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a42 (r83,l0) best GENERAL_REGS, cover GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a44 (r82,l0) best GENERAL_REGS, cover GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a45 (r81,l0) best GENERAL_REGS, cover GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a40 (r80,l0) best GENERAL_REGS, cover GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a46 (r79,l0) best GENERAL_REGS, cover GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a47 (r78,l0) best GENERAL_REGS, cover GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a38 (r77,l0) best GENERAL_REGS, cover GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a48 (r76,l0) best GENERAL_REGS, cover GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a49 (r75,l0) best GENERAL_REGS, cover GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a36 (r74,l0) best GENERAL_REGS, cover GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a50 (r73,l0) best GENERAL_REGS, cover GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a51 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a34 (r71,l0) best GENERAL_REGS, cover GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a52 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a53 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a55 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a57 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a59 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a61 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a63 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a65 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a67 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a69 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a71 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a73 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a75 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r114,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r134,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a7(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a8(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a9(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a10(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a11(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a12(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a13(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a14(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a15(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a16(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a17(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a18(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a19(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a20(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a21(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a22(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a23(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a24(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a25(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a26(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a27(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a28(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a29(r130,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a30(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a31(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a32(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a33(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a34(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a35(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a36(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a37(r86,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a38(r77,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a39(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a40(r80,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a41(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a42(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a43(r127,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a44(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a45(r81,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a46(r79,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a47(r78,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a48(r76,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a49(r75,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a50(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a51(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a52(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a53(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a54(r126,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a55(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a56(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a57(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a58(r124,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a59(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a60(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a61(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a62(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a63(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a64(r121,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a65(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a66(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a67(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a68(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a69(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a70(r118,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a71(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a72(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a73(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a74(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a75(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a76(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 132(l0): point = 0
   Insn 129(l0): point = 2
   Insn 125(l0): point = 4
   Insn 124(l0): point = 6
   Insn 123(l0): point = 8
   Insn 122(l0): point = 10
   Insn 121(l0): point = 12
   Insn 120(l0): point = 14
   Insn 119(l0): point = 16
   Insn 118(l0): point = 18
   Insn 117(l0): point = 20
   Insn 116(l0): point = 22
   Insn 115(l0): point = 24
   Insn 114(l0): point = 26
   Insn 113(l0): point = 28
   Insn 112(l0): point = 30
   Insn 111(l0): point = 32
   Insn 110(l0): point = 34
   Insn 109(l0): point = 36
   Insn 108(l0): point = 38
   Insn 107(l0): point = 40
   Insn 106(l0): point = 42
   Insn 105(l0): point = 44
   Insn 104(l0): point = 46
   Insn 103(l0): point = 48
   Insn 102(l0): point = 50
   Insn 101(l0): point = 52
   Insn 100(l0): point = 54
   Insn 99(l0): point = 56
   Insn 98(l0): point = 58
   Insn 97(l0): point = 60
   Insn 96(l0): point = 62
   Insn 95(l0): point = 64
   Insn 94(l0): point = 66
   Insn 93(l0): point = 68
   Insn 92(l0): point = 70
   Insn 91(l0): point = 72
   Insn 90(l0): point = 74
   Insn 89(l0): point = 76
   Insn 88(l0): point = 78
   Insn 87(l0): point = 80
   Insn 86(l0): point = 82
   Insn 85(l0): point = 84
   Insn 84(l0): point = 86
   Insn 83(l0): point = 88
   Insn 82(l0): point = 90
   Insn 81(l0): point = 92
   Insn 80(l0): point = 94
   Insn 79(l0): point = 96
   Insn 78(l0): point = 98
   Insn 77(l0): point = 100
   Insn 76(l0): point = 102
   Insn 75(l0): point = 104
   Insn 74(l0): point = 106
   Insn 73(l0): point = 108
   Insn 72(l0): point = 110
   Insn 71(l0): point = 112
   Insn 70(l0): point = 114
   Insn 69(l0): point = 116
   Insn 68(l0): point = 118
   Insn 67(l0): point = 120
   Insn 66(l0): point = 122
   Insn 65(l0): point = 124
   Insn 64(l0): point = 126
   Insn 63(l0): point = 128
   Insn 62(l0): point = 130
   Insn 61(l0): point = 132
   Insn 60(l0): point = 134
   Insn 59(l0): point = 136
   Insn 58(l0): point = 138
   Insn 57(l0): point = 140
   Insn 56(l0): point = 142
   Insn 55(l0): point = 144
   Insn 54(l0): point = 146
   Insn 53(l0): point = 148
   Insn 52(l0): point = 150
   Insn 51(l0): point = 152
   Insn 50(l0): point = 154
   Insn 49(l0): point = 156
   Insn 48(l0): point = 158
   Insn 47(l0): point = 160
   Insn 46(l0): point = 162
   Insn 45(l0): point = 164
   Insn 44(l0): point = 166
   Insn 43(l0): point = 168
   Insn 42(l0): point = 170
   Insn 41(l0): point = 172
   Insn 40(l0): point = 174
   Insn 39(l0): point = 176
   Insn 38(l0): point = 178
   Insn 37(l0): point = 180
   Insn 36(l0): point = 182
   Insn 35(l0): point = 184
   Insn 34(l0): point = 186
   Insn 33(l0): point = 188
   Insn 32(l0): point = 190
   Insn 31(l0): point = 192
   Insn 30(l0): point = 194
   Insn 29(l0): point = 196
   Insn 28(l0): point = 198
   Insn 27(l0): point = 200
   Insn 26(l0): point = 202
   Insn 25(l0): point = 204
   Insn 24(l0): point = 206
   Insn 23(l0): point = 208
   Insn 22(l0): point = 210
   Insn 21(l0): point = 212
   Insn 20(l0): point = 214
   Insn 19(l0): point = 216
   Insn 18(l0): point = 218
   Insn 17(l0): point = 220
   Insn 16(l0): point = 222
   Insn 15(l0): point = 224
   Insn 14(l0): point = 226
   Insn 13(l0): point = 228
   Insn 12(l0): point = 230
   Insn 11(l0): point = 232
   Insn 10(l0): point = 234
   Insn 9(l0): point = 236
   Insn 8(l0): point = 238
   Insn 7(l0): point = 240
   Insn 6(l0): point = 242
   Insn 5(l0): point = 244
 a0(r114): [3..4]
 a1(r113): [5..6]
 a2(r112): [11..18]
 a3(r134): [13..14]
 a4(r111): [17..20]
 a5(r133): [21..22]
 a6(r132): [25..26]
 a7(r110): [27..28]
 a8(r93): [27..64]
 a9(r109): [29..30]
 a10(r106): [29..36]
 a11(r108): [31..32]
 a12(r107): [31..34]
 a13(r105): [37..38]
 a14(r96): [37..58]
 a15(r104): [39..40]
 a16(r101): [39..46]
 a17(r103): [41..42]
 a18(r102): [41..44]
 a19(r100): [47..48]
 a20(r99): [47..52]
 a21(r131): [49..50]
 a22(r98): [53..54]
 a23(r97): [53..56]
 a24(r95): [59..60]
 a25(r94): [59..62]
 a26(r92): [65..66]
 a27(r91): [65..68]
 a28(r90): [73..80]
 a29(r130): [75..76]
 a30(r89): [79..82]
 a31(r129): [83..84]
 a32(r128): [87..88]
 a33(r88): [89..90]
 a34(r71): [89..126]
 a35(r87): [91..92]
 a36(r74): [91..120]
 a37(r86): [93..94]
 a38(r77): [93..114]
 a39(r85): [95..96]
 a40(r80): [95..108]
 a41(r84): [97..98]
 a42(r83): [97..102]
 a43(r127): [99..100]
 a44(r82): [103..104]
 a45(r81): [103..106]
 a46(r79): [109..110]
 a47(r78): [109..112]
 a48(r76): [115..116]
 a49(r75): [115..118]
 a50(r73): [121..122]
 a51(r72): [121..124]
 a52(r70): [127..128]
 a53(r69): [127..130]
 a54(r126): [133..134]
 a55(r68): [139..144]
 a56(r125): [141..142]
 a57(r67): [149..154]
 a58(r124): [151..152]
 a59(r66): [159..164]
 a60(r123): [161..162]
 a61(r65): [169..174]
 a62(r122): [171..172]
 a63(r64): [179..184]
 a64(r121): [181..182]
 a65(r63): [189..194]
 a66(r120): [191..192]
 a67(r62): [199..204]
 a68(r119): [201..202]
 a69(r61): [209..214]
 a70(r118): [211..212]
 a71(r60): [219..224]
 a72(r117): [221..222]
 a73(r59): [229..234]
 a74(r116): [231..232]
 a75(r58): [239..244]
 a76(r115): [241..242]
Compressing live ranges: from 247 to 134 - 54%
Ranges after the compression:
 a0(r114): [0..1]
 a1(r113): [2..3]
 a2(r112): [4..8]
 a3(r134): [5..6]
 a4(r111): [7..9]
 a5(r133): [10..11]
 a6(r132): [12..13]
 a7(r110): [14..15]
 a8(r93): [14..42]
 a9(r109): [16..17]
 a10(r106): [16..21]
 a11(r108): [18..19]
 a12(r107): [18..20]
 a13(r105): [22..23]
 a14(r96): [22..38]
 a15(r104): [24..25]
 a16(r101): [24..29]
 a17(r103): [26..27]
 a18(r102): [26..28]
 a19(r100): [30..31]
 a20(r99): [30..34]
 a21(r131): [32..33]
 a22(r98): [35..36]
 a23(r97): [35..37]
 a24(r95): [39..40]
 a25(r94): [39..41]
 a26(r92): [43..44]
 a27(r91): [43..45]
 a28(r90): [46..50]
 a29(r130): [47..48]
 a30(r89): [49..51]
 a31(r129): [52..53]
 a32(r128): [54..55]
 a33(r88): [56..57]
 a34(r71): [56..84]
 a35(r87): [58..59]
 a36(r74): [58..80]
 a37(r86): [60..61]
 a38(r77): [60..76]
 a39(r85): [62..63]
 a40(r80): [62..72]
 a41(r84): [64..65]
 a42(r83): [64..68]
 a43(r127): [66..67]
 a44(r82): [69..70]
 a45(r81): [69..71]
 a46(r79): [73..74]
 a47(r78): [73..75]
 a48(r76): [77..78]
 a49(r75): [77..79]
 a50(r73): [81..82]
 a51(r72): [81..83]
 a52(r70): [85..86]
 a53(r69): [85..87]
 a54(r126): [88..89]
 a55(r68): [90..93]
 a56(r125): [91..92]
 a57(r67): [94..97]
 a58(r124): [95..96]
 a59(r66): [98..101]
 a60(r123): [99..100]
 a61(r65): [102..105]
 a62(r122): [103..104]
 a63(r64): [106..109]
 a64(r121): [107..108]
 a65(r63): [110..113]
 a66(r120): [111..112]
 a67(r62): [114..117]
 a68(r119): [115..116]
 a69(r61): [118..121]
 a70(r118): [119..120]
 a71(r60): [122..125]
 a72(r117): [123..124]
 a73(r59): [126..129]
 a74(r116): [127..128]
 a75(r58): [130..133]
 a76(r115): [131..132]
  regions=1, blocks=3, points=134
    allocnos=77, copies=0, conflicts=0, ranges=77
Disposition:
   75:r58  l0     0   73:r59  l0     0   71:r60  l0     0   69:r61  l0     0
   67:r62  l0     0   65:r63  l0     0   63:r64  l0     0   61:r65  l0     0
   59:r66  l0     0   57:r67  l0     0   55:r68  l0     0   53:r69  l0     1
   52:r70  l0     0   34:r71  l0     2   51:r72  l0     1   50:r73  l0     0
   36:r74  l0     3   49:r75  l0     1   48:r76  l0     0   38:r77  l0     4
   47:r78  l0     1   46:r79  l0     0   40:r80  l0     5   45:r81  l0     1
   44:r82  l0     0   42:r83  l0     1   41:r84  l0     0   39:r85  l0     0
   37:r86  l0     0   35:r87  l0     0   33:r88  l0     0   30:r89  l0     1
   28:r90  l0     0   27:r91  l0     1   26:r92  l0     0    8:r93  l0     2
   25:r94  l0     1   24:r95  l0     0   14:r96  l0     3   23:r97  l0     1
   22:r98  l0     0   20:r99  l0     1   19:r100 l0     0   16:r101 l0     4
   18:r102 l0     1   17:r103 l0     0   15:r104 l0     0   13:r105 l0     0
   10:r106 l0     3   12:r107 l0     1   11:r108 l0     0    9:r109 l0     0
    7:r110 l0     0    4:r111 l0     1    2:r112 l0     0    1:r113 l0     0
    0:r114 l0     0   76:r115 l0     1   74:r116 l0     1   72:r117 l0     1
   70:r118 l0     1   68:r119 l0     1   66:r120 l0     1   64:r121 l0     1
   62:r122 l0     1   60:r123 l0     1   58:r124 l0     1   56:r125 l0     1
   54:r126 l0     0   43:r127 l0     0   32:r128 l0     0   31:r129 l0     0
   29:r130 l0     1   21:r131 l0     0    6:r132 l0     0    5:r133 l0     0
    3:r134 l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 58
insn=6, live_throughout: 7, 58, dead_or_set: 115
insn=7, live_throughout: 7, 58, dead_or_set: 115
insn=8, live_throughout: 7, dead_or_set: 58
insn=9, live_throughout: 7, dead_or_set: 0
insn=10, live_throughout: 7, dead_or_set: 59
insn=11, live_throughout: 7, 59, dead_or_set: 116
insn=12, live_throughout: 7, 59, dead_or_set: 116
insn=13, live_throughout: 7, dead_or_set: 59
insn=14, live_throughout: 7, dead_or_set: 0
insn=15, live_throughout: 7, dead_or_set: 60
insn=16, live_throughout: 7, 60, dead_or_set: 117
insn=17, live_throughout: 7, 60, dead_or_set: 117
insn=18, live_throughout: 7, dead_or_set: 60
insn=19, live_throughout: 7, dead_or_set: 0
insn=20, live_throughout: 7, dead_or_set: 61
insn=21, live_throughout: 7, 61, dead_or_set: 118
insn=22, live_throughout: 7, 61, dead_or_set: 118
insn=23, live_throughout: 7, dead_or_set: 61
insn=24, live_throughout: 7, dead_or_set: 0
insn=25, live_throughout: 7, dead_or_set: 62
insn=26, live_throughout: 7, 62, dead_or_set: 119
insn=27, live_throughout: 7, 62, dead_or_set: 119
insn=28, live_throughout: 7, dead_or_set: 62
insn=29, live_throughout: 7, dead_or_set: 0
insn=30, live_throughout: 7, dead_or_set: 63
insn=31, live_throughout: 7, 63, dead_or_set: 120
insn=32, live_throughout: 7, 63, dead_or_set: 120
insn=33, live_throughout: 7, dead_or_set: 63
insn=34, live_throughout: 7, dead_or_set: 0
insn=35, live_throughout: 7, dead_or_set: 64
insn=36, live_throughout: 7, 64, dead_or_set: 121
insn=37, live_throughout: 7, 64, dead_or_set: 121
insn=38, live_throughout: 7, dead_or_set: 64
insn=39, live_throughout: 7, dead_or_set: 0
insn=40, live_throughout: 7, dead_or_set: 65
insn=41, live_throughout: 7, 65, dead_or_set: 122
insn=42, live_throughout: 7, 65, dead_or_set: 122
insn=43, live_throughout: 7, dead_or_set: 65
insn=44, live_throughout: 7, dead_or_set: 0
insn=45, live_throughout: 7, dead_or_set: 66
insn=46, live_throughout: 7, 66, dead_or_set: 123
insn=47, live_throughout: 7, 66, dead_or_set: 123
insn=48, live_throughout: 7, dead_or_set: 66
insn=49, live_throughout: 7, dead_or_set: 0
insn=50, live_throughout: 7, dead_or_set: 67
insn=51, live_throughout: 7, 67, dead_or_set: 124
insn=52, live_throughout: 7, 67, dead_or_set: 124
insn=53, live_throughout: 7, dead_or_set: 67
insn=54, live_throughout: 7, dead_or_set: 0
insn=55, live_throughout: 7, dead_or_set: 68
insn=56, live_throughout: 7, 68, dead_or_set: 125
insn=57, live_throughout: 7, 68, dead_or_set: 125
insn=58, live_throughout: 7, dead_or_set: 68
insn=59, live_throughout: 7, dead_or_set: 0
insn=60, live_throughout: 7, dead_or_set: 126
insn=61, live_throughout: 7, dead_or_set: 126
insn=62, live_throughout: 7, dead_or_set: 69
insn=63, live_throughout: 7, 69, dead_or_set: 70
insn=64, live_throughout: 7, dead_or_set: 69, 70, 71
insn=65, live_throughout: 7, 71, dead_or_set: 72
insn=66, live_throughout: 7, 71, 72, dead_or_set: 73
insn=67, live_throughout: 7, 71, dead_or_set: 72, 73, 74
insn=68, live_throughout: 7, 71, 74, dead_or_set: 75
insn=69, live_throughout: 7, 71, 74, 75, dead_or_set: 76
insn=70, live_throughout: 7, 71, 74, dead_or_set: 75, 76, 77
insn=71, live_throughout: 7, 71, 74, 77, dead_or_set: 78
insn=72, live_throughout: 7, 71, 74, 77, 78, dead_or_set: 79
insn=73, live_throughout: 7, 71, 74, 77, dead_or_set: 78, 79, 80
insn=74, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 81
insn=75, live_throughout: 7, 71, 74, 77, 80, 81, dead_or_set: 82
insn=76, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 81, 82, 83
insn=77, live_throughout: 7, 71, 74, 77, 80, 83, dead_or_set: 127
insn=78, live_throughout: 7, 71, 74, 77, 80, 83, dead_or_set: 84, 127
insn=79, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 83, 84, 85
insn=80, live_throughout: 7, 71, 74, 77, dead_or_set: 80, 85, 86
insn=81, live_throughout: 7, 71, 74, dead_or_set: 77, 86, 87
insn=82, live_throughout: 7, 71, dead_or_set: 74, 87, 88
insn=83, live_throughout: 7, dead_or_set: 71, 88, 128
insn=84, live_throughout: 7, dead_or_set: 128
insn=85, live_throughout: 7, dead_or_set: 129
insn=86, live_throughout: 7, dead_or_set: 89, 129
insn=87, live_throughout: 7, 89, dead_or_set: 90
insn=88, live_throughout: 7, 90, dead_or_set: 89
insn=89, live_throughout: 7, 90, dead_or_set: 130
insn=90, live_throughout: 7, 90, dead_or_set: 130
insn=91, live_throughout: 7, dead_or_set: 90
insn=92, live_throughout: 7, dead_or_set: 0
insn=93, live_throughout: 7, dead_or_set: 91
insn=94, live_throughout: 7, 91, dead_or_set: 92
insn=95, live_throughout: 7, dead_or_set: 91, 92, 93
insn=96, live_throughout: 7, 93, dead_or_set: 94
insn=97, live_throughout: 7, 93, 94, dead_or_set: 95
insn=98, live_throughout: 7, 93, dead_or_set: 94, 95, 96
insn=99, live_throughout: 7, 93, 96, dead_or_set: 97
insn=100, live_throughout: 7, 93, 96, 97, dead_or_set: 98
insn=101, live_throughout: 7, 93, 96, dead_or_set: 97, 98, 99
insn=102, live_throughout: 7, 93, 96, 99, dead_or_set: 131
insn=103, live_throughout: 7, 93, 96, 99, dead_or_set: 100, 131
insn=104, live_throughout: 7, 93, 96, dead_or_set: 99, 100, 101
insn=105, live_throughout: 7, 93, 96, 101, dead_or_set: 102
insn=106, live_throughout: 7, 93, 96, 101, 102, dead_or_set: 103
insn=107, live_throughout: 7, 93, 96, 101, dead_or_set: 102, 103, 104
insn=108, live_throughout: 7, 93, 96, dead_or_set: 101, 104, 105
insn=109, live_throughout: 7, 93, dead_or_set: 96, 105, 106
insn=110, live_throughout: 7, 93, 106, dead_or_set: 107
insn=111, live_throughout: 7, 93, 106, 107, dead_or_set: 108
insn=112, live_throughout: 7, 93, 106, dead_or_set: 107, 108, 109
insn=113, live_throughout: 7, 93, dead_or_set: 106, 109, 110
insn=114, live_throughout: 7, dead_or_set: 93, 110, 132
insn=115, live_throughout: 7, dead_or_set: 132
insn=116, live_throughout: 7, dead_or_set: 133
insn=117, live_throughout: 7, dead_or_set: 111, 133
insn=118, live_throughout: 7, 111, dead_or_set: 112
insn=119, live_throughout: 7, 112, dead_or_set: 111
insn=120, live_throughout: 7, 112, dead_or_set: 134
insn=121, live_throughout: 7, 112, dead_or_set: 134
insn=122, live_throughout: 7, dead_or_set: 112
insn=123, live_throughout: 7, dead_or_set: 0
insn=124, live_throughout: 7, dead_or_set: 113
insn=125, live_throughout: 7, dead_or_set: 113, 114
insn=129, live_throughout: 7, dead_or_set: 0, 114
insn=132, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 5
changing reg in insn 8
changing reg in insn 10
changing reg in insn 13
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 23
changing reg in insn 25
changing reg in insn 28
changing reg in insn 30
changing reg in insn 33
changing reg in insn 35
changing reg in insn 38
changing reg in insn 40
changing reg in insn 43
changing reg in insn 45
changing reg in insn 48
changing reg in insn 50
changing reg in insn 53
changing reg in insn 55
changing reg in insn 58
changing reg in insn 62
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 83
changing reg in insn 84
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 82
changing reg in insn 68
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 81
changing reg in insn 71
changing reg in insn 73
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 80
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 79
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 82
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 88
changing reg in insn 87
changing reg in insn 91
changing reg in insn 93
changing reg in insn 95
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 114
changing reg in insn 115
changing reg in insn 96
changing reg in insn 98
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 109
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 104
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 108
changing reg in insn 105
changing reg in insn 107
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 113
changing reg in insn 110
changing reg in insn 112
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 117
changing reg in insn 119
changing reg in insn 118
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 129
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 27
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 51
changing reg in insn 52
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 77
changing reg in insn 78
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 90
changing reg in insn 102
changing reg in insn 103
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 120
changing reg in insn 121
Spilling for insn 95.
Spilling for insn 98.
Spilling for insn 104.
Spilling for insn 107.
Using reg 5 for reload 0
Spilling for insn 112.
Using reg 4 for reload 0

Reloads for insn # 95
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:91 i.10 ] [91])
	reload_out (SI) = (reg:SI 2 cx [orig:93 D.3830 ] [93])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:91 i.10 ] [91])
	reload_out_reg: (reg:SI 2 cx [orig:93 D.3830 ] [93])
	reload_reg_rtx: (reg:SI 2 cx [orig:93 D.3830 ] [93])

Reloads for insn # 98
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:94 m.12 ] [94])
	reload_out (SI) = (reg:SI 3 bx [orig:96 D.3833 ] [96])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:94 m.12 ] [94])
	reload_out_reg: (reg:SI 3 bx [orig:96 D.3833 ] [96])
	reload_reg_rtx: (reg:SI 3 bx [orig:96 D.3833 ] [96])

Reloads for insn # 104
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:99 D.3836 ] [99])
	reload_out (SI) = (reg:SI 4 si [orig:101 D.3838 ] [101])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:99 D.3836 ] [99])
	reload_out_reg: (reg:SI 4 si [orig:101 D.3838 ] [101])
	reload_reg_rtx: (reg:SI 4 si [orig:101 D.3838 ] [101])

Reloads for insn # 107
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:102 p.16 ] [102])
	reload_out (SI) = (reg:SI 0 ax [orig:104 D.3841 ] [104])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:102 p.16 ] [102])
	reload_out_reg: (reg:SI 0 ax [orig:104 D.3841 ] [104])
	reload_reg_rtx: (reg:SI 5 di)

Reloads for insn # 112
Reload 0: reload_in (SI) = (reg:SI 1 dx [orig:107 l.18 ] [107])
	reload_out (SI) = (reg:SI 0 ax [orig:109 D.3846 ] [109])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 1 dx [orig:107 l.18 ] [107])
	reload_out_reg: (reg:SI 0 ax [orig:109 D.3846 ] [109])
	reload_reg_rtx: (reg:SI 4 si)
deleting insn with uid = 125.
deleting insn with uid = 129.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 123.
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 pointer3.c:9 (set (reg/f:SI 0 ax [orig:58 D.3795 ] [58])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 6 5 7 2 pointer3.c:9 (parallel [
            (set (reg:SI 1 dx [115])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 68 [0x44])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 7 6 8 2 pointer3.c:9 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [115])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -12 [0xfffffff4]))
        (nil)))

(insn 8 7 9 2 pointer3.c:9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.3795 ] [58])) 44 {*movsi_1} (nil))

(call_insn 9 8 10 2 pointer3.c:9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 10 9 11 2 pointer3.c:10 (set (reg/f:SI 0 ax [orig:59 D.3796 ] [59])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 11 10 12 2 pointer3.c:10 (parallel [
            (set (reg:SI 1 dx [116])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 12 11 13 2 pointer3.c:10 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [116])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -16 [0xfffffff0]))
        (nil)))

(insn 13 12 14 2 pointer3.c:10 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:59 D.3796 ] [59])) 44 {*movsi_1} (nil))

(call_insn 14 13 15 2 pointer3.c:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 15 14 16 2 pointer3.c:11 (set (reg/f:SI 0 ax [orig:60 D.3797 ] [60])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 16 15 17 2 pointer3.c:11 (parallel [
            (set (reg:SI 1 dx [117])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 17 16 18 2 pointer3.c:11 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [117])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -20 [0xffffffec]))
        (nil)))

(insn 18 17 19 2 pointer3.c:11 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 D.3797 ] [60])) 44 {*movsi_1} (nil))

(call_insn 19 18 20 2 pointer3.c:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 20 19 21 2 pointer3.c:12 (set (reg/f:SI 0 ax [orig:61 D.3798 ] [61])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 21 20 22 2 pointer3.c:12 (parallel [
            (set (reg:SI 1 dx [118])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 22 21 23 2 pointer3.c:12 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [118])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -24 [0xffffffe8]))
        (nil)))

(insn 23 22 24 2 pointer3.c:12 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:61 D.3798 ] [61])) 44 {*movsi_1} (nil))

(call_insn 24 23 25 2 pointer3.c:12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 25 24 26 2 pointer3.c:14 (set (reg/f:SI 0 ax [orig:62 D.3799 ] [62])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 26 25 27 2 pointer3.c:14 (parallel [
            (set (reg:SI 1 dx [119])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 27 26 28 2 pointer3.c:14 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [119])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -28 [0xffffffe4]))
        (nil)))

(insn 28 27 29 2 pointer3.c:14 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:62 D.3799 ] [62])) 44 {*movsi_1} (nil))

(call_insn 29 28 30 2 pointer3.c:14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 30 29 31 2 pointer3.c:15 (set (reg/f:SI 0 ax [orig:63 D.3800 ] [63])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 31 30 32 2 pointer3.c:15 (parallel [
            (set (reg:SI 1 dx [120])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 32 31 33 2 pointer3.c:15 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [120])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -32 [0xffffffe0]))
        (nil)))

(insn 33 32 34 2 pointer3.c:15 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:63 D.3800 ] [63])) 44 {*movsi_1} (nil))

(call_insn 34 33 35 2 pointer3.c:15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 35 34 36 2 pointer3.c:16 (set (reg/f:SI 0 ax [orig:64 D.3801 ] [64])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 36 35 37 2 pointer3.c:16 (parallel [
            (set (reg:SI 1 dx [121])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 37 36 38 2 pointer3.c:16 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [121])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -36 [0xffffffdc]))
        (nil)))

(insn 38 37 39 2 pointer3.c:16 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:64 D.3801 ] [64])) 44 {*movsi_1} (nil))

(call_insn 39 38 40 2 pointer3.c:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 40 39 41 2 pointer3.c:17 (set (reg/f:SI 0 ax [orig:65 D.3802 ] [65])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 41 40 42 2 pointer3.c:17 (parallel [
            (set (reg:SI 1 dx [122])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 42 41 43 2 pointer3.c:17 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [122])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -40 [0xffffffd8]))
        (nil)))

(insn 43 42 44 2 pointer3.c:17 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:65 D.3802 ] [65])) 44 {*movsi_1} (nil))

(call_insn 44 43 45 2 pointer3.c:17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 45 44 46 2 pointer3.c:19 (set (reg/f:SI 0 ax [orig:66 D.3803 ] [66])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 46 45 47 2 pointer3.c:19 (parallel [
            (set (reg:SI 1 dx [123])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 47 46 48 2 pointer3.c:19 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [123])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -44 [0xffffffd4]))
        (nil)))

(insn 48 47 49 2 pointer3.c:19 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:66 D.3803 ] [66])) 44 {*movsi_1} (nil))

(call_insn 49 48 50 2 pointer3.c:19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 50 49 51 2 pointer3.c:20 (set (reg/f:SI 0 ax [orig:67 D.3804 ] [67])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 51 50 52 2 pointer3.c:20 (parallel [
            (set (reg:SI 1 dx [124])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 52 51 53 2 pointer3.c:20 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [124])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -48 [0xffffffd0]))
        (nil)))

(insn 53 52 54 2 pointer3.c:20 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:67 D.3804 ] [67])) 44 {*movsi_1} (nil))

(call_insn 54 53 55 2 pointer3.c:20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 55 54 56 2 pointer3.c:21 (set (reg/f:SI 0 ax [orig:68 D.3805 ] [68])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 56 55 57 2 pointer3.c:21 (parallel [
            (set (reg:SI 1 dx [125])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 57 56 58 2 pointer3.c:21 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [125])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -52 [0xffffffcc]))
        (nil)))

(insn 58 57 59 2 pointer3.c:21 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:68 D.3805 ] [68])) 44 {*movsi_1} (nil))

(call_insn 59 58 60 2 pointer3.c:21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 60 59 61 2 pointer3.c:23 (parallel [
            (set (reg:SI 0 ax [126])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 61 60 62 2 pointer3.c:23 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])
        (reg:SI 0 ax [126])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 7 sp)
            (const_int 28 [0x1c]))
        (nil)))

(insn 62 61 63 2 pointer3.c:26 (set (reg:SI 1 dx [orig:69 i.0 ] [69])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 i+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 63 62 64 2 pointer3.c:26 (set (reg:SI 0 ax [orig:70 j.1 ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 j+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 64 63 65 2 pointer3.c:26 (parallel [
            (set (reg:SI 2 cx [orig:71 D.3808 ] [71])
                (plus:SI (reg:SI 1 dx [orig:69 i.0 ] [69])
                    (reg:SI 0 ax [orig:70 j.1 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 65 64 66 2 pointer3.c:27 (set (reg:SI 1 dx [orig:72 k.2 ] [72])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 k+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 66 65 67 2 pointer3.c:27 (set (reg:SI 0 ax [orig:73 l.3 ] [73])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 l+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 67 66 68 2 pointer3.c:27 (parallel [
            (set (reg:SI 3 bx [orig:74 D.3811 ] [74])
                (plus:SI (reg:SI 1 dx [orig:72 k.2 ] [72])
                    (reg:SI 0 ax [orig:73 l.3 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 68 67 69 2 pointer3.c:28 (set (reg:SI 1 dx [orig:75 m.4 ] [75])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [0 m+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 69 68 70 2 pointer3.c:28 (set (reg:SI 0 ax [orig:76 n.5 ] [76])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [0 n+0 S4 A256])) 44 {*movsi_1} (nil))

(insn 70 69 71 2 pointer3.c:28 (parallel [
            (set (reg:SI 4 si [orig:77 D.3814 ] [77])
                (plus:SI (reg:SI 1 dx [orig:75 m.4 ] [75])
                    (reg:SI 0 ax [orig:76 n.5 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 71 70 72 2 pointer3.c:29 (set (reg:SI 1 dx [orig:78 o.6 ] [78])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 o+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 72 71 73 2 pointer3.c:29 (set (reg:SI 0 ax [orig:79 p.7 ] [79])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 p+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 73 72 74 2 pointer3.c:29 (parallel [
            (set (reg:SI 5 di [orig:80 D.3817 ] [80])
                (plus:SI (reg:SI 1 dx [orig:78 o.6 ] [78])
                    (reg:SI 0 ax [orig:79 p.7 ] [79])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 74 73 75 2 pointer3.c:30 (set (reg:SI 1 dx [orig:81 q.8 ] [81])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [0 q+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 75 74 76 2 pointer3.c:30 (set (reg:SI 0 ax [orig:82 r.9 ] [82])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [0 r+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 76 75 77 2 pointer3.c:30 (parallel [
            (set (reg:SI 1 dx [orig:83 D.3820 ] [83])
                (plus:SI (reg:SI 1 dx [orig:81 q.8 ] [81])
                    (reg:SI 0 ax [orig:82 r.9 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 77 76 78 2 pointer3.c:31 (set (reg/f:SI 0 ax [127])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 78 77 79 2 pointer3.c:31 (set (reg:SI 0 ax [orig:84 D.3821 ] [84])
        (mem:SI (reg/f:SI 0 ax [127]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 79 78 80 2 pointer3.c:30 (parallel [
            (set (reg:SI 0 ax [orig:85 D.3822 ] [85])
                (plus:SI (reg:SI 1 dx [orig:83 D.3820 ] [83])
                    (reg:SI 0 ax [orig:84 D.3821 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 80 79 81 2 pointer3.c:29 (parallel [
            (set (reg:SI 0 ax [orig:86 D.3823 ] [86])
                (plus:SI (reg:SI 5 di [orig:80 D.3817 ] [80])
                    (reg:SI 0 ax [orig:85 D.3822 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 81 80 82 2 pointer3.c:28 (parallel [
            (set (reg:SI 0 ax [orig:87 D.3824 ] [87])
                (plus:SI (reg:SI 4 si [orig:77 D.3814 ] [77])
                    (reg:SI 0 ax [orig:86 D.3823 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 82 81 83 2 pointer3.c:27 (parallel [
            (set (reg:SI 0 ax [orig:88 D.3825 ] [88])
                (plus:SI (reg:SI 3 bx [orig:74 D.3811 ] [74])
                    (reg:SI 0 ax [orig:87 D.3824 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 83 82 84 2 pointer3.c:25 (parallel [
            (set (reg:SI 0 ax [128])
                (plus:SI (reg:SI 2 cx [orig:71 D.3808 ] [71])
                    (reg:SI 0 ax [orig:88 D.3825 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 84 83 85 2 pointer3.c:25 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])
        (reg:SI 0 ax [128])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:71 D.3808 ] [71])
            (reg:SI 0 ax [orig:88 D.3825 ] [88]))
        (nil)))

(insn 85 84 86 2 pointer3.c:38 (set (reg/f:SI 0 ax [129])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 86 85 87 2 pointer3.c:38 (set (reg:SI 1 dx [orig:89 D.3826 ] [89])
        (mem:SI (reg/f:SI 0 ax [129]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 87 86 88 2 pointer3.c:38 (set (reg/f:SI 0 ax [orig:90 D.3827 ] [90])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7832738>)) 44 {*movsi_1} (nil))

(insn 88 87 89 2 pointer3.c:38 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 dx [orig:89 D.3826 ] [89])) 44 {*movsi_1} (nil))

(insn 89 88 90 2 pointer3.c:38 (set (reg:SI 1 dx [130])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 90 89 91 2 pointer3.c:38 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [130])) 44 {*movsi_1} (nil))

(insn 91 90 92 2 pointer3.c:38 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:90 D.3827 ] [90])) 44 {*movsi_1} (nil))

(call_insn 92 91 93 2 pointer3.c:38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb773ef00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) 697 {*call_value_0} (nil)
    (nil))

(insn 93 92 94 2 pointer3.c:41 (set (reg:SI 1 dx [orig:91 i.10 ] [91])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 i+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 94 93 136 2 pointer3.c:41 (set (reg:SI 0 ax [orig:92 j.11 ] [92])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 j+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 136 94 95 2 pointer3.c:41 (set (reg:SI 2 cx [orig:93 D.3830 ] [93])
        (reg:SI 1 dx [orig:91 i.10 ] [91])) 44 {*movsi_1} (nil))

(insn 95 136 96 2 pointer3.c:41 (parallel [
            (set (reg:SI 2 cx [orig:93 D.3830 ] [93])
                (minus:SI (reg:SI 2 cx [orig:93 D.3830 ] [93])
                    (reg:SI 0 ax [orig:92 j.11 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 96 95 97 2 pointer3.c:43 (set (reg:SI 1 dx [orig:94 m.12 ] [94])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [0 m+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 97 96 137 2 pointer3.c:43 (set (reg:SI 0 ax [orig:95 n.13 ] [95])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [0 n+0 S4 A256])) 44 {*movsi_1} (nil))

(insn 137 97 98 2 pointer3.c:43 (set (reg:SI 3 bx [orig:96 D.3833 ] [96])
        (reg:SI 1 dx [orig:94 m.12 ] [94])) 44 {*movsi_1} (nil))

(insn 98 137 99 2 pointer3.c:43 (parallel [
            (set (reg:SI 3 bx [orig:96 D.3833 ] [96])
                (minus:SI (reg:SI 3 bx [orig:96 D.3833 ] [96])
                    (reg:SI 0 ax [orig:95 n.13 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 99 98 100 2 pointer3.c:45 (set (reg:SI 1 dx [orig:97 q.14 ] [97])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [0 q+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 100 99 101 2 pointer3.c:45 (set (reg:SI 0 ax [orig:98 r.15 ] [98])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [0 r+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 101 100 102 2 pointer3.c:45 (parallel [
            (set (reg:SI 1 dx [orig:99 D.3836 ] [99])
                (minus:SI (reg:SI 1 dx [orig:97 q.14 ] [97])
                    (reg:SI 0 ax [orig:98 r.15 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 102 101 103 2 pointer3.c:46 (set (reg/f:SI 0 ax [131])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 103 102 138 2 pointer3.c:46 (set (reg:SI 0 ax [orig:100 D.3837 ] [100])
        (mem:SI (reg/f:SI 0 ax [131]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 138 103 104 2 pointer3.c:45 (set (reg:SI 4 si [orig:101 D.3838 ] [101])
        (reg:SI 1 dx [orig:99 D.3836 ] [99])) 44 {*movsi_1} (nil))

(insn 104 138 105 2 pointer3.c:45 (parallel [
            (set (reg:SI 4 si [orig:101 D.3838 ] [101])
                (minus:SI (reg:SI 4 si [orig:101 D.3838 ] [101])
                    (reg:SI 0 ax [orig:100 D.3837 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 105 104 106 2 pointer3.c:44 (set (reg:SI 1 dx [orig:102 p.16 ] [102])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 p+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 106 105 139 2 pointer3.c:44 (set (reg:SI 0 ax [orig:103 o.17 ] [103])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 o+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 139 106 107 2 pointer3.c:44 (set (reg:SI 5 di)
        (reg:SI 1 dx [orig:102 p.16 ] [102])) 44 {*movsi_1} (nil))

(insn 107 139 140 2 pointer3.c:44 (parallel [
            (set (reg:SI 5 di)
                (minus:SI (reg:SI 5 di)
                    (reg:SI 0 ax [orig:103 o.17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 140 107 108 2 pointer3.c:44 (set (reg:SI 0 ax [orig:104 D.3841 ] [104])
        (reg:SI 5 di)) 44 {*movsi_1} (nil))

(insn 108 140 109 2 pointer3.c:44 (parallel [
            (set (reg:SI 0 ax [orig:105 D.3842 ] [105])
                (plus:SI (reg:SI 4 si [orig:101 D.3838 ] [101])
                    (reg:SI 0 ax [orig:104 D.3841 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 109 108 110 2 pointer3.c:43 (parallel [
            (set (reg:SI 3 bx [orig:106 D.3843 ] [106])
                (plus:SI (reg:SI 3 bx [orig:96 D.3833 ] [96])
                    (reg:SI 0 ax [orig:105 D.3842 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 110 109 111 2 pointer3.c:42 (set (reg:SI 1 dx [orig:107 l.18 ] [107])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 l+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 111 110 141 2 pointer3.c:42 (set (reg:SI 0 ax [orig:108 k.19 ] [108])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 k+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 141 111 112 2 pointer3.c:42 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:107 l.18 ] [107])) 44 {*movsi_1} (nil))

(insn 112 141 142 2 pointer3.c:42 (parallel [
            (set (reg:SI 4 si)
                (minus:SI (reg:SI 4 si)
                    (reg:SI 0 ax [orig:108 k.19 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 142 112 113 2 pointer3.c:42 (set (reg:SI 0 ax [orig:109 D.3846 ] [109])
        (reg:SI 4 si)) 44 {*movsi_1} (nil))

(insn 113 142 114 2 pointer3.c:42 (parallel [
            (set (reg:SI 0 ax [orig:110 D.3847 ] [110])
                (plus:SI (reg:SI 3 bx [orig:106 D.3843 ] [106])
                    (reg:SI 0 ax [orig:109 D.3846 ] [109])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 114 113 115 2 pointer3.c:40 (parallel [
            (set (reg:SI 0 ax [132])
                (plus:SI (reg:SI 2 cx [orig:93 D.3830 ] [93])
                    (reg:SI 0 ax [orig:110 D.3847 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 115 114 116 2 pointer3.c:40 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])
        (reg:SI 0 ax [132])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:93 D.3830 ] [93])
            (reg:SI 0 ax [orig:110 D.3847 ] [110]))
        (nil)))

(insn 116 115 117 2 pointer3.c:53 (set (reg/f:SI 0 ax [133])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 117 116 118 2 pointer3.c:53 (set (reg:SI 1 dx [orig:111 D.3848 ] [111])
        (mem:SI (reg/f:SI 0 ax [133]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 118 117 119 2 pointer3.c:53 (set (reg/f:SI 0 ax [orig:112 D.3849 ] [112])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7832738>)) 44 {*movsi_1} (nil))

(insn 119 118 120 2 pointer3.c:53 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 dx [orig:111 D.3848 ] [111])) 44 {*movsi_1} (nil))

(insn 120 119 121 2 pointer3.c:53 (set (reg:SI 1 dx [134])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 121 120 122 2 pointer3.c:53 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [134])) 44 {*movsi_1} (nil))

(insn 122 121 123 2 pointer3.c:53 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:112 D.3849 ] [112])) 44 {*movsi_1} (nil))

(call_insn 123 122 124 2 pointer3.c:53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb773ef00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) 697 {*call_value_0} (nil)
    (nil))

(insn 124 123 132 2 pointer3.c:55 (set (reg:SI 0 ax [orig:113 D.3850 ] [113])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 132 124 135 2 pointer3.c:56 (use (reg/i:SI 0 ax)) -1 (nil))

(note 135 132 0 NOTE_INSN_DELETED)

;; Function main (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 10 count 12 (  1.1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r155: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a8 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a25 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a26 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a27 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a28 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a29 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a40 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a41 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a42 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a43 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a44 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a57 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a58 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a59 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a60 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a61 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a9 (r132,l0) best GENERAL_REGS, cover GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a24 (r131,l0) best GENERAL_REGS, cover GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a37 (r130,l0) best GENERAL_REGS, cover GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a39 (r129,l0) best GENERAL_REGS, cover GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a45 (r128,l0) best GENERAL_REGS, cover GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a56 (r127,l0) best GENERAL_REGS, cover GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a72 (r126,l0) best GENERAL_REGS, cover GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a74 (r125,l0) best GENERAL_REGS, cover GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a76 (r124,l0) best GENERAL_REGS, cover GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a78 (r123,l0) best GENERAL_REGS, cover GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a80 (r122,l0) best GENERAL_REGS, cover GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a82 (r121,l0) best GENERAL_REGS, cover GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a84 (r120,l0) best GENERAL_REGS, cover GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a86 (r119,l0) best GENERAL_REGS, cover GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a88 (r118,l0) best GENERAL_REGS, cover GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a90 (r117,l0) best GENERAL_REGS, cover GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a92 (r116,l0) best GENERAL_REGS, cover GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a94 (r115,l0) best GENERAL_REGS, cover GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a0 (r112,l0) best GENERAL_REGS, cover GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r111,l0) best GENERAL_REGS, cover GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a10 (r110,l0) best GENERAL_REGS, cover GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r109,l0) best GENERAL_REGS, cover GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a14 (r108,l0) best GENERAL_REGS, cover GENERAL_REGS
    r107: preferred SIREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a15 (r107,l0) best SIREG, cover GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r106,l0) best GENERAL_REGS, cover GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a16 (r105,l0) best GENERAL_REGS, cover GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r104,l0) best GENERAL_REGS, cover GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r103,l0) best GENERAL_REGS, cover GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a21 (r102,l0) best DIREG, cover GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a19 (r101,l0) best GENERAL_REGS, cover GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a22 (r100,l0) best GENERAL_REGS, cover GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a23 (r99,l0) best GENERAL_REGS, cover GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a30 (r98,l0) best GENERAL_REGS, cover GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a31 (r97,l0) best GENERAL_REGS, cover GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, cover GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a32 (r95,l0) best GENERAL_REGS, cover GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a33 (r94,l0) best GENERAL_REGS, cover GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r93,l0) best GENERAL_REGS, cover GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a34 (r92,l0) best GENERAL_REGS, cover GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a35 (r91,l0) best GENERAL_REGS, cover GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a36 (r90,l0) best GENERAL_REGS, cover GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a38 (r89,l0) best GENERAL_REGS, cover GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a46 (r88,l0) best GENERAL_REGS, cover GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a48 (r87,l0) best GENERAL_REGS, cover GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a50 (r86,l0) best GENERAL_REGS, cover GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a52 (r85,l0) best GENERAL_REGS, cover GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a54 (r84,l0) best GENERAL_REGS, cover GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a55 (r83,l0) best GENERAL_REGS, cover GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a62 (r82,l0) best GENERAL_REGS, cover GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a63 (r81,l0) best GENERAL_REGS, cover GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a53 (r80,l0) best GENERAL_REGS, cover GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a64 (r79,l0) best GENERAL_REGS, cover GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a65 (r78,l0) best GENERAL_REGS, cover GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a51 (r77,l0) best GENERAL_REGS, cover GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a66 (r76,l0) best GENERAL_REGS, cover GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a67 (r75,l0) best GENERAL_REGS, cover GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a49 (r74,l0) best GENERAL_REGS, cover GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a68 (r73,l0) best GENERAL_REGS, cover GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a69 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a47 (r71,l0) best GENERAL_REGS, cover GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a70 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a71 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a73 (r68,l0) best GENERAL_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a75 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a77 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a79 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a81 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a83 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a85 (r62,l0) best GENERAL_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a87 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a89 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a91 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a93 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a1(r134,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a2(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11
  a4(r155,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r154,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a6(r153,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a7(r152,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a8(r151,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a9(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a10(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a11(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:14
  a12(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a13(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a14(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a15(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a16(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a17(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:13
  a18(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a19(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:14
  a20(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a21(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a22(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a23(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a24(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11
  a25(r150,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a26(r149,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a27(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a28(r147,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a29(r146,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a30(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a31(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a32(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a33(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a34(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a35(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a36(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a37(r130,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a38(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a39(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11
  a40(r145,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a41(r144,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a42(r143,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a43(r142,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a44(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a45(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a46(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a47(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a48(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a49(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a50(r86,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a51(r77,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a52(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a53(r80,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a54(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a55(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a56(r127,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11
  a57(r140,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a58(r139,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a59(r138,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a60(r137,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a61(r136,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a62(r82,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a63(r81,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a64(r79,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a65(r78,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a66(r76,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a67(r75,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a68(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a69(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a70(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a71(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a72(r126,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a73(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a74(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a75(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a76(r124,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a77(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a78(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a79(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a80(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a81(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a82(r121,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a83(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a84(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a85(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a86(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a87(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a88(r118,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a89(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a90(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a91(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a92(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a93(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a94(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 182(l0): point = 0
   Insn 132(l0): point = 2
   Insn 123(l0): point = 4
   Insn 122(l0): point = 6
   Insn 121(l0): point = 8
   Insn 120(l0): point = 10
   Insn 119(l0): point = 12
   Insn 118(l0): point = 14
   Insn 117(l0): point = 16
   Insn 221(l0): point = 19
   Insn 220(l0): point = 22
   Insn 219(l0): point = 24
   Insn 218(l0): point = 26
   Insn 217(l0): point = 28
   Insn 216(l0): point = 30
   Insn 215(l0): point = 32
   Insn 214(l0): point = 34
   Insn 116(l0): point = 36
   Insn 115(l0): point = 38
   Insn 166(l0): point = 40
   Insn 165(l0): point = 42
   Insn 142(l0): point = 44
   Insn 112(l0): point = 46
   Insn 141(l0): point = 48
   Insn 111(l0): point = 50
   Insn 110(l0): point = 52
   Insn 109(l0): point = 54
   Insn 164(l0): point = 56
   Insn 140(l0): point = 58
   Insn 107(l0): point = 60
   Insn 139(l0): point = 62
   Insn 106(l0): point = 64
   Insn 105(l0): point = 66
   Insn 104(l0): point = 68
   Insn 138(l0): point = 70
   Insn 103(l0): point = 72
   Insn 211(l0): point = 75
   Insn 210(l0): point = 78
   Insn 209(l0): point = 80
   Insn 208(l0): point = 82
   Insn 207(l0): point = 84
   Insn 206(l0): point = 86
   Insn 205(l0): point = 88
   Insn 204(l0): point = 90
   Insn 102(l0): point = 92
   Insn 101(l0): point = 94
   Insn 100(l0): point = 96
   Insn 99(l0): point = 98
   Insn 98(l0): point = 100
   Insn 137(l0): point = 102
   Insn 97(l0): point = 104
   Insn 96(l0): point = 106
   Insn 95(l0): point = 108
   Insn 136(l0): point = 110
   Insn 94(l0): point = 112
   Insn 93(l0): point = 114
   Insn 92(l0): point = 116
   Insn 91(l0): point = 118
   Insn 90(l0): point = 120
   Insn 89(l0): point = 122
   Insn 88(l0): point = 124
   Insn 87(l0): point = 126
   Insn 86(l0): point = 128
   Insn 201(l0): point = 131
   Insn 200(l0): point = 134
   Insn 199(l0): point = 136
   Insn 198(l0): point = 138
   Insn 197(l0): point = 140
   Insn 196(l0): point = 142
   Insn 195(l0): point = 144
   Insn 194(l0): point = 146
   Insn 85(l0): point = 148
   Insn 84(l0): point = 150
   Insn 163(l0): point = 152
   Insn 162(l0): point = 154
   Insn 161(l0): point = 156
   Insn 160(l0): point = 158
   Insn 159(l0): point = 160
   Insn 78(l0): point = 162
   Insn 191(l0): point = 165
   Insn 190(l0): point = 168
   Insn 189(l0): point = 170
   Insn 188(l0): point = 172
   Insn 187(l0): point = 174
   Insn 186(l0): point = 176
   Insn 185(l0): point = 178
   Insn 184(l0): point = 180
   Insn 77(l0): point = 182
   Insn 76(l0): point = 184
   Insn 75(l0): point = 186
   Insn 74(l0): point = 188
   Insn 158(l0): point = 190
   Insn 72(l0): point = 192
   Insn 71(l0): point = 194
   Insn 157(l0): point = 196
   Insn 69(l0): point = 198
   Insn 68(l0): point = 200
   Insn 156(l0): point = 202
   Insn 66(l0): point = 204
   Insn 65(l0): point = 206
   Insn 155(l0): point = 208
   Insn 63(l0): point = 210
   Insn 62(l0): point = 212
   Insn 61(l0): point = 214
   Insn 154(l0): point = 216
   Insn 59(l0): point = 218
   Insn 58(l0): point = 220
   Insn 57(l0): point = 222
   Insn 153(l0): point = 224
   Insn 55(l0): point = 226
   Insn 54(l0): point = 228
   Insn 53(l0): point = 230
   Insn 52(l0): point = 232
   Insn 152(l0): point = 234
   Insn 50(l0): point = 236
   Insn 49(l0): point = 238
   Insn 48(l0): point = 240
   Insn 47(l0): point = 242
   Insn 151(l0): point = 244
   Insn 45(l0): point = 246
   Insn 44(l0): point = 248
   Insn 43(l0): point = 250
   Insn 42(l0): point = 252
   Insn 150(l0): point = 254
   Insn 40(l0): point = 256
   Insn 39(l0): point = 258
   Insn 38(l0): point = 260
   Insn 37(l0): point = 262
   Insn 149(l0): point = 264
   Insn 35(l0): point = 266
   Insn 34(l0): point = 268
   Insn 33(l0): point = 270
   Insn 32(l0): point = 272
   Insn 148(l0): point = 274
   Insn 30(l0): point = 276
   Insn 29(l0): point = 278
   Insn 28(l0): point = 280
   Insn 27(l0): point = 282
   Insn 147(l0): point = 284
   Insn 25(l0): point = 286
   Insn 24(l0): point = 288
   Insn 23(l0): point = 290
   Insn 22(l0): point = 292
   Insn 146(l0): point = 294
   Insn 20(l0): point = 296
   Insn 19(l0): point = 298
   Insn 18(l0): point = 300
   Insn 17(l0): point = 302
   Insn 145(l0): point = 304
   Insn 15(l0): point = 306
   Insn 14(l0): point = 308
   Insn 13(l0): point = 310
   Insn 12(l0): point = 312
   Insn 144(l0): point = 314
   Insn 10(l0): point = 316
   Insn 9(l0): point = 318
   Insn 8(l0): point = 320
   Insn 7(l0): point = 322
   Insn 143(l0): point = 324
   Insn 5(l0): point = 326
 a0(r112): [7..14]
 a1(r134): [9..10]
 a2(r111): [13..16]
 a3(r133): [22..36] [17..18]
 a4(r155): [25..26]
 a5(r154): [27..28]
 a6(r153): [29..30]
 a7(r152): [31..32]
 a8(r151): [33..34]
 a9(r132): [39..40]
 a10(r110): [41..42]
 a11(r93): [78..110] [41..74]
 a12(r109): [43..44]
 a13(r106): [43..54]
 a14(r108): [47..50]
 a15(r107): [49..52]
 a16(r105): [55..56]
 a17(r96): [78..102] [55..74]
 a18(r104): [57..58]
 a19(r101): [57..70]
 a20(r103): [61..64]
 a21(r102): [63..66]
 a22(r100): [69..72]
 a23(r99): [78..94] [71..74]
 a24(r131): [78..92] [73..74]
 a25(r150): [81..82]
 a26(r149): [83..84]
 a27(r148): [85..86]
 a28(r147): [87..88]
 a29(r146): [89..90]
 a30(r98): [95..96]
 a31(r97): [95..98]
 a32(r95): [101..104]
 a33(r94): [103..106]
 a34(r92): [109..112]
 a35(r91): [111..114]
 a36(r90): [119..126]
 a37(r130): [121..122]
 a38(r89): [125..128]
 a39(r129): [134..148] [129..130]
 a40(r145): [137..138]
 a41(r144): [139..140]
 a42(r143): [141..142]
 a43(r142): [143..144]
 a44(r141): [145..146]
 a45(r128): [151..152]
 a46(r88): [153..154]
 a47(r71): [168..208] [153..164]
 a48(r87): [155..156]
 a49(r74): [168..202] [155..164]
 a50(r86): [157..158]
 a51(r77): [168..196] [157..164]
 a52(r85): [159..160]
 a53(r80): [168..190] [159..164]
 a54(r84): [161..162]
 a55(r83): [168..184] [161..164]
 a56(r127): [168..182] [163..164]
 a57(r140): [171..172]
 a58(r139): [173..174]
 a59(r138): [175..176]
 a60(r137): [177..178]
 a61(r136): [179..180]
 a62(r82): [185..186]
 a63(r81): [185..188]
 a64(r79): [191..192]
 a65(r78): [191..194]
 a66(r76): [197..198]
 a67(r75): [197..200]
 a68(r73): [203..204]
 a69(r72): [203..206]
 a70(r70): [209..210]
 a71(r69): [209..212]
 a72(r126): [215..216]
 a73(r68): [221..226]
 a74(r125): [223..224]
 a75(r67): [231..236]
 a76(r124): [233..234]
 a77(r66): [241..246]
 a78(r123): [243..244]
 a79(r65): [251..256]
 a80(r122): [253..254]
 a81(r64): [261..266]
 a82(r121): [263..264]
 a83(r63): [271..276]
 a84(r120): [273..274]
 a85(r62): [281..286]
 a86(r119): [283..284]
 a87(r61): [291..296]
 a88(r118): [293..294]
 a89(r60): [301..306]
 a90(r117): [303..304]
 a91(r59): [311..316]
 a92(r116): [313..314]
 a93(r58): [321..326]
 a94(r115): [323..324]
Compressing live ranges: from 329 to 183 - 55%
Ranges after the compression:
 a0(r112): [0..4]
 a1(r134): [1..2]
 a2(r111): [3..5]
 a3(r133): [8..19] [6..7]
 a4(r155): [9..10]
 a5(r154): [11..12]
 a6(r153): [13..14]
 a7(r152): [15..16]
 a8(r151): [17..18]
 a9(r132): [20..21]
 a10(r110): [22..23]
 a11(r93): [45..67] [22..44]
 a12(r109): [24..25]
 a13(r106): [24..30]
 a14(r108): [26..28]
 a15(r107): [27..29]
 a16(r105): [31..32]
 a17(r96): [45..62] [31..44]
 a18(r104): [33..34]
 a19(r101): [33..40]
 a20(r103): [35..37]
 a21(r102): [36..38]
 a22(r100): [39..42]
 a23(r99): [45..57] [41..44]
 a24(r131): [45..56] [43..44]
 a25(r150): [46..47]
 a26(r149): [48..49]
 a27(r148): [50..51]
 a28(r147): [52..53]
 a29(r146): [54..55]
 a30(r98): [58..59]
 a31(r97): [58..60]
 a32(r95): [61..64]
 a33(r94): [63..65]
 a34(r92): [66..69]
 a35(r91): [68..70]
 a36(r90): [71..75]
 a37(r130): [72..73]
 a38(r89): [74..76]
 a39(r129): [79..90] [77..78]
 a40(r145): [80..81]
 a41(r144): [82..83]
 a42(r143): [84..85]
 a43(r142): [86..87]
 a44(r141): [88..89]
 a45(r128): [91..92]
 a46(r88): [93..94]
 a47(r71): [105..133] [93..104]
 a48(r87): [95..96]
 a49(r74): [105..129] [95..104]
 a50(r86): [97..98]
 a51(r77): [105..125] [97..104]
 a52(r85): [99..100]
 a53(r80): [105..121] [99..104]
 a54(r84): [101..102]
 a55(r83): [105..117] [101..104]
 a56(r127): [105..116] [103..104]
 a57(r140): [106..107]
 a58(r139): [108..109]
 a59(r138): [110..111]
 a60(r137): [112..113]
 a61(r136): [114..115]
 a62(r82): [118..119]
 a63(r81): [118..120]
 a64(r79): [122..123]
 a65(r78): [122..124]
 a66(r76): [126..127]
 a67(r75): [126..128]
 a68(r73): [130..131]
 a69(r72): [130..132]
 a70(r70): [134..135]
 a71(r69): [134..136]
 a72(r126): [137..138]
 a73(r68): [139..142]
 a74(r125): [140..141]
 a75(r67): [143..146]
 a76(r124): [144..145]
 a77(r66): [147..150]
 a78(r123): [148..149]
 a79(r65): [151..154]
 a80(r122): [152..153]
 a81(r64): [155..158]
 a82(r121): [156..157]
 a83(r63): [159..162]
 a84(r120): [160..161]
 a85(r62): [163..166]
 a86(r119): [164..165]
 a87(r61): [167..170]
 a88(r118): [168..169]
 a89(r60): [171..174]
 a90(r117): [172..173]
 a91(r59): [175..178]
 a92(r116): [176..177]
 a93(r58): [179..182]
 a94(r115): [180..181]
  regions=1, blocks=11, points=183
    allocnos=95, copies=0, conflicts=0, ranges=107
Disposition:
   93:r58  l0     0   91:r59  l0     0   89:r60  l0     0   87:r61  l0     0
   85:r62  l0     0   83:r63  l0     0   81:r64  l0     0   79:r65  l0     0
   77:r66  l0     0   75:r67  l0     0   73:r68  l0     0   71:r69  l0     1
   70:r70  l0     0   47:r71  l0     2   69:r72  l0     1   68:r73  l0     0
   49:r74  l0     3   67:r75  l0     1   66:r76  l0     0   51:r77  l0     4
   65:r78  l0     1   64:r79  l0     0   53:r80  l0     5   63:r81  l0     1
   62:r82  l0     0   55:r83  l0   mem   54:r84  l0     0   52:r85  l0     0
   50:r86  l0     0   48:r87  l0     0   46:r88  l0     0   38:r89  l0     1
   36:r90  l0     0   35:r91  l0     0   34:r92  l0     1   11:r93  l0     0
   33:r94  l0     2   32:r95  l0     1   17:r96  l0     2   31:r97  l0     3
   30:r98  l0     1   23:r99  l0     4   22:r100 l0     3   19:r101 l0     1
   21:r102 l0     3   20:r103 l0     4   18:r104 l0     3   16:r105 l0     1
   13:r106 l0     2   15:r107 l0     1   14:r108 l0     3   12:r109 l0     1
   10:r110 l0     1    2:r111 l0     1    0:r112 l0     0   94:r115 l0     1
   92:r116 l0     1   90:r117 l0     1   88:r118 l0     1   86:r119 l0     1
   84:r120 l0     1   82:r121 l0     1   80:r122 l0     1   78:r123 l0     1
   76:r124 l0     1   74:r125 l0     1   72:r126 l0     0   56:r127 l0     1
   45:r128 l0     0   39:r129 l0     0   37:r130 l0     1   24:r131 l0     1
    9:r132 l0     0    3:r133 l0     0    1:r134 l0     1   61:r136 l0     0
   60:r137 l0     0   59:r138 l0     0   58:r139 l0     0   57:r140 l0     0
   44:r141 l0     1   43:r142 l0     1   42:r143 l0     1   41:r144 l0     1
   40:r145 l0     1   29:r146 l0     3   28:r147 l0     3   27:r148 l0     3
   26:r149 l0     3   25:r150 l0     3    8:r151 l0     1    7:r152 l0     1
    6:r153 l0     1    5:r154 l0     1    4:r155 l0     1
+++Costs: overall 5, reg -2, mem 7, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 58
insn=143, live_throughout: 7, 58, dead_or_set: 115
insn=7, live_throughout: 7, 58, dead_or_set: 115
insn=8, live_throughout: 7, dead_or_set: 58
insn=9, live_throughout: 7, dead_or_set: 0
insn=10, live_throughout: 7, dead_or_set: 59
insn=144, live_throughout: 7, 59, dead_or_set: 116
insn=12, live_throughout: 7, 59, dead_or_set: 116
insn=13, live_throughout: 7, dead_or_set: 59
insn=14, live_throughout: 7, dead_or_set: 0
insn=15, live_throughout: 7, dead_or_set: 60
insn=145, live_throughout: 7, 60, dead_or_set: 117
insn=17, live_throughout: 7, 60, dead_or_set: 117
insn=18, live_throughout: 7, dead_or_set: 60
insn=19, live_throughout: 7, dead_or_set: 0
insn=20, live_throughout: 7, dead_or_set: 61
insn=146, live_throughout: 7, 61, dead_or_set: 118
insn=22, live_throughout: 7, 61, dead_or_set: 118
insn=23, live_throughout: 7, dead_or_set: 61
insn=24, live_throughout: 7, dead_or_set: 0
insn=25, live_throughout: 7, dead_or_set: 62
insn=147, live_throughout: 7, 62, dead_or_set: 119
insn=27, live_throughout: 7, 62, dead_or_set: 119
insn=28, live_throughout: 7, dead_or_set: 62
insn=29, live_throughout: 7, dead_or_set: 0
insn=30, live_throughout: 7, dead_or_set: 63
insn=148, live_throughout: 7, 63, dead_or_set: 120
insn=32, live_throughout: 7, 63, dead_or_set: 120
insn=33, live_throughout: 7, dead_or_set: 63
insn=34, live_throughout: 7, dead_or_set: 0
insn=35, live_throughout: 7, dead_or_set: 64
insn=149, live_throughout: 7, 64, dead_or_set: 121
insn=37, live_throughout: 7, 64, dead_or_set: 121
insn=38, live_throughout: 7, dead_or_set: 64
insn=39, live_throughout: 7, dead_or_set: 0
insn=40, live_throughout: 7, dead_or_set: 65
insn=150, live_throughout: 7, 65, dead_or_set: 122
insn=42, live_throughout: 7, 65, dead_or_set: 122
insn=43, live_throughout: 7, dead_or_set: 65
insn=44, live_throughout: 7, dead_or_set: 0
insn=45, live_throughout: 7, dead_or_set: 66
insn=151, live_throughout: 7, 66, dead_or_set: 123
insn=47, live_throughout: 7, 66, dead_or_set: 123
insn=48, live_throughout: 7, dead_or_set: 66
insn=49, live_throughout: 7, dead_or_set: 0
insn=50, live_throughout: 7, dead_or_set: 67
insn=152, live_throughout: 7, 67, dead_or_set: 124
insn=52, live_throughout: 7, 67, dead_or_set: 124
insn=53, live_throughout: 7, dead_or_set: 67
insn=54, live_throughout: 7, dead_or_set: 0
insn=55, live_throughout: 7, dead_or_set: 68
insn=153, live_throughout: 7, 68, dead_or_set: 125
insn=57, live_throughout: 7, 68, dead_or_set: 125
insn=58, live_throughout: 7, dead_or_set: 68
insn=59, live_throughout: 7, dead_or_set: 0
insn=154, live_throughout: 7, dead_or_set: 126
insn=61, live_throughout: 7, dead_or_set: 126
insn=62, live_throughout: 7, dead_or_set: 69
insn=63, live_throughout: 7, 69, dead_or_set: 70
insn=155, live_throughout: 7, dead_or_set: 69, 70, 71
insn=65, live_throughout: 7, 71, dead_or_set: 72
insn=66, live_throughout: 7, 71, 72, dead_or_set: 73
insn=156, live_throughout: 7, 71, dead_or_set: 72, 73, 74
insn=68, live_throughout: 7, 71, 74, dead_or_set: 75
insn=69, live_throughout: 7, 71, 74, 75, dead_or_set: 76
insn=157, live_throughout: 7, 71, 74, dead_or_set: 75, 76, 77
insn=71, live_throughout: 7, 71, 74, 77, dead_or_set: 78
insn=72, live_throughout: 7, 71, 74, 77, 78, dead_or_set: 79
insn=158, live_throughout: 7, 71, 74, 77, dead_or_set: 78, 79, 80
insn=74, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 81
insn=75, live_throughout: 7, 71, 74, 77, 80, 81, dead_or_set: 82
insn=76, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 81, 82
insn=77, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 127
insn=184, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 136
insn=185, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 136, 137
insn=186, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 137, 138
insn=187, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 138, 139
insn=188, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 139, 140
insn=189, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 140
insn=190, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 
insn=191, live_throughout: 7, dead_or_set: 
insn=193, live_throughout: 7, 71, 74, 77, 80, 127, dead_or_set: 
insn=78, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 84, 127
insn=159, live_throughout: 7, 71, 74, 77, 80, dead_or_set: 84, 85
insn=160, live_throughout: 7, 71, 74, 77, dead_or_set: 80, 85, 86
insn=161, live_throughout: 7, 71, 74, dead_or_set: 77, 86, 87
insn=162, live_throughout: 7, 71, dead_or_set: 74, 87, 88
insn=163, live_throughout: 7, dead_or_set: 71, 88, 128
insn=84, live_throughout: 7, dead_or_set: 128
insn=85, live_throughout: 7, dead_or_set: 129
insn=194, live_throughout: 7, 129, dead_or_set: 141
insn=195, live_throughout: 7, 129, dead_or_set: 141, 142
insn=196, live_throughout: 7, 129, dead_or_set: 142, 143
insn=197, live_throughout: 7, 129, dead_or_set: 143, 144
insn=198, live_throughout: 7, 129, dead_or_set: 144, 145
insn=199, live_throughout: 7, 129, dead_or_set: 145
insn=200, live_throughout: 7, 129, dead_or_set: 
insn=201, live_throughout: 7, dead_or_set: 
insn=203, live_throughout: 7, 129, dead_or_set: 
insn=86, live_throughout: 7, dead_or_set: 89, 129
insn=87, live_throughout: 7, 89, dead_or_set: 90
insn=88, live_throughout: 7, 90, dead_or_set: 89
insn=89, live_throughout: 7, 90, dead_or_set: 130
insn=90, live_throughout: 7, 90, dead_or_set: 130
insn=91, live_throughout: 7, dead_or_set: 90
insn=92, live_throughout: 7, dead_or_set: 0
insn=93, live_throughout: 7, dead_or_set: 91
insn=94, live_throughout: 7, 91, dead_or_set: 92
insn=136, live_throughout: 7, 92, dead_or_set: 91, 93
insn=95, live_throughout: 7, dead_or_set: 92, 93
insn=96, live_throughout: 7, 93, dead_or_set: 94
insn=97, live_throughout: 7, 93, 94, dead_or_set: 95
insn=137, live_throughout: 7, 93, 95, dead_or_set: 94, 96
insn=98, live_throughout: 7, 93, dead_or_set: 95, 96
insn=99, live_throughout: 7, 93, 96, dead_or_set: 97
insn=100, live_throughout: 7, 93, 96, 97, dead_or_set: 98
insn=101, live_throughout: 7, 93, 96, dead_or_set: 97, 98, 99
insn=102, live_throughout: 7, 93, 96, 99, dead_or_set: 131
insn=204, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 146
insn=205, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 146, 147
insn=206, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 147, 148
insn=207, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 148, 149
insn=208, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 149, 150
insn=209, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 150
insn=210, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 
insn=211, live_throughout: 7, dead_or_set: 
insn=213, live_throughout: 7, 93, 96, 99, 131, dead_or_set: 
insn=103, live_throughout: 7, 93, 96, 99, dead_or_set: 100, 131
insn=138, live_throughout: 7, 93, 96, 100, dead_or_set: 99, 101
insn=104, live_throughout: 7, 93, 96, dead_or_set: 100, 101
insn=105, live_throughout: 7, 93, 96, 101, dead_or_set: 102
insn=106, live_throughout: 7, 93, 96, 101, 102, dead_or_set: 103
insn=139, live_throughout: 7, 93, 96, 101, 103, dead_or_set: 5, 102
insn=107, live_throughout: 7, 93, 96, 101, dead_or_set: 5, 103
insn=140, live_throughout: 5, 7, 93, 96, 101, dead_or_set: 104
insn=164, live_throughout: 5, 7, 93, 96, dead_or_set: 101, 104, 105
insn=109, live_throughout: 5, 7, 93, dead_or_set: 96, 105, 106
insn=110, live_throughout: 5, 7, 93, 106, dead_or_set: 107
insn=111, live_throughout: 5, 7, 93, 106, 107, dead_or_set: 108
insn=141, live_throughout: 5, 7, 93, 106, 108, dead_or_set: 4, 107
insn=112, live_throughout: 5, 7, 93, 106, dead_or_set: 4, 108
insn=142, live_throughout: 4, 5, 7, 93, 106, dead_or_set: 109
insn=165, live_throughout: 4, 5, 7, 93, dead_or_set: 106, 109, 110
insn=166, live_throughout: 4, 5, 7, dead_or_set: 93, 110, 132
insn=115, live_throughout: 4, 5, 7, dead_or_set: 132
insn=116, live_throughout: 4, 5, 7, dead_or_set: 133
insn=214, live_throughout: 4, 5, 7, 133, dead_or_set: 151
insn=215, live_throughout: 4, 5, 7, 133, dead_or_set: 151, 152
insn=216, live_throughout: 4, 5, 7, 133, dead_or_set: 152, 153
insn=217, live_throughout: 4, 5, 7, 133, dead_or_set: 153, 154
insn=218, live_throughout: 4, 5, 7, 133, dead_or_set: 154, 155
insn=219, live_throughout: 4, 5, 7, 133, dead_or_set: 155
insn=220, live_throughout: 4, 5, 7, 133, dead_or_set: 
insn=221, live_throughout: 7, dead_or_set: 
insn=223, live_throughout: 4, 5, 7, 133, dead_or_set: 
insn=117, live_throughout: 4, 5, 7, dead_or_set: 111, 133
insn=118, live_throughout: 4, 5, 7, 111, dead_or_set: 112
insn=119, live_throughout: 4, 5, 7, 112, dead_or_set: 111
insn=120, live_throughout: 4, 5, 7, 112, dead_or_set: 134
insn=121, live_throughout: 4, 5, 7, 112, dead_or_set: 134
insn=122, live_throughout: 4, 5, 7, dead_or_set: 112
insn=123, live_throughout: 4, 5, 7, dead_or_set: 0
insn=132, live_throughout: 0, 4, 5, 7, dead_or_set: 
insn=182, live_throughout: 0, 4, 5, 7, dead_or_set: 
changing reg in insn 5
changing reg in insn 8
changing reg in insn 10
changing reg in insn 13
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 23
changing reg in insn 25
changing reg in insn 28
changing reg in insn 30
changing reg in insn 33
changing reg in insn 35
changing reg in insn 38
changing reg in insn 40
changing reg in insn 43
changing reg in insn 45
changing reg in insn 48
changing reg in insn 50
changing reg in insn 53
changing reg in insn 55
changing reg in insn 58
changing reg in insn 62
changing reg in insn 155
changing reg in insn 63
changing reg in insn 155
changing reg in insn 155
changing reg in insn 163
changing reg in insn 84
changing reg in insn 65
changing reg in insn 156
changing reg in insn 66
changing reg in insn 156
changing reg in insn 156
changing reg in insn 162
changing reg in insn 68
changing reg in insn 157
changing reg in insn 69
changing reg in insn 157
changing reg in insn 157
changing reg in insn 161
changing reg in insn 71
changing reg in insn 158
changing reg in insn 72
changing reg in insn 158
changing reg in insn 158
changing reg in insn 160
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 78
changing reg in insn 159
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 163
changing reg in insn 84
changing reg in insn 86
changing reg in insn 88
changing reg in insn 87
changing reg in insn 91
changing reg in insn 93
changing reg in insn 136
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 136
changing reg in insn 166
changing reg in insn 95
changing reg in insn 115
changing reg in insn 96
changing reg in insn 137
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 137
changing reg in insn 109
changing reg in insn 98
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 138
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 138
changing reg in insn 164
changing reg in insn 104
changing reg in insn 105
changing reg in insn 139
changing reg in insn 106
changing reg in insn 107
changing reg in insn 140
changing reg in insn 164
changing reg in insn 164
changing reg in insn 109
changing reg in insn 109
changing reg in insn 165
changing reg in insn 110
changing reg in insn 141
changing reg in insn 111
changing reg in insn 112
changing reg in insn 142
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 115
changing reg in insn 117
changing reg in insn 119
changing reg in insn 118
changing reg in insn 122
changing reg in insn 143
changing reg in insn 7
changing reg in insn 144
changing reg in insn 12
changing reg in insn 145
changing reg in insn 17
changing reg in insn 146
changing reg in insn 22
changing reg in insn 147
changing reg in insn 27
changing reg in insn 148
changing reg in insn 32
changing reg in insn 149
changing reg in insn 37
changing reg in insn 150
changing reg in insn 42
changing reg in insn 151
changing reg in insn 47
changing reg in insn 152
changing reg in insn 52
changing reg in insn 153
changing reg in insn 57
changing reg in insn 154
changing reg in insn 61
changing reg in insn 77
changing reg in insn 78
changing reg in insn 184
changing reg in insn 163
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 194
changing reg in insn 89
changing reg in insn 90
changing reg in insn 102
changing reg in insn 103
changing reg in insn 204
changing reg in insn 166
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 214
changing reg in insn 120
changing reg in insn 121
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 189
changing reg in insn 194
changing reg in insn 195
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 197
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 199
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 206
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 208
changing reg in insn 208
changing reg in insn 209
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 218
changing reg in insn 218
changing reg in insn 219
Spilling for insn 76.
Spilling for insn 159.
Using reg 1 for reload 0
Spilling for insn 101.

Reloads for insn # 76
Reload 0: reload_out (SI) = (reg:SI 83 [ D.3820 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 83 [ D.3820 ])
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 159
Reload 0: reload_in (SI) = (reg:SI 83 [ D.3820 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg:SI 83 [ D.3820 ])
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 101
Reload 0: reload_in (SI) = (reg:SI 3 bx [orig:97 q.14 ] [97])
	reload_out (SI) = (reg:SI 4 si [orig:99 D.3836 ] [99])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 3 bx [orig:97 q.14 ] [97])
	reload_out_reg: (reg:SI 4 si [orig:99 D.3836 ] [99])
	reload_reg_rtx: (reg:SI 4 si [orig:99 D.3836 ] [99])
deleting insn with uid = 185.
deleting insn with uid = 186.
deleting insn with uid = 187.
deleting insn with uid = 188.
deleting insn with uid = 195.
deleting insn with uid = 196.
deleting insn with uid = 197.
deleting insn with uid = 198.
deleting insn with uid = 136.
deleting insn with uid = 137.
deleting insn with uid = 205.
deleting insn with uid = 206.
deleting insn with uid = 207.
deleting insn with uid = 208.
deleting insn with uid = 215.
deleting insn with uid = 216.
deleting insn with uid = 217.
deleting insn with uid = 218.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 201.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 123.
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 143 2 pointer3.c:9 (set (reg/f:SI 0 ax [orig:58 D.3795 ] [58])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 143 5 7 2 pointer3.c:9 (set (reg:SI 1 dx [115])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 68 [0x44]))) 196 {*lea_1} (nil))

(insn 7 143 8 2 pointer3.c:9 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [115])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -12 [0xfffffff4]))
        (nil)))

(insn 8 7 9 2 pointer3.c:9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.3795 ] [58])) 44 {*movsi_1} (nil))

(call_insn 9 8 10 2 pointer3.c:9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 10 9 144 2 pointer3.c:10 (set (reg/f:SI 0 ax [orig:59 D.3796 ] [59])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 144 10 12 2 pointer3.c:10 (set (reg:SI 1 dx [116])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 64 [0x40]))) 196 {*lea_1} (nil))

(insn 12 144 13 2 pointer3.c:10 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [116])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -16 [0xfffffff0]))
        (nil)))

(insn 13 12 14 2 pointer3.c:10 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:59 D.3796 ] [59])) 44 {*movsi_1} (nil))

(call_insn 14 13 15 2 pointer3.c:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 15 14 145 2 pointer3.c:11 (set (reg/f:SI 0 ax [orig:60 D.3797 ] [60])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 145 15 17 2 pointer3.c:11 (set (reg:SI 1 dx [117])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 60 [0x3c]))) 196 {*lea_1} (nil))

(insn 17 145 18 2 pointer3.c:11 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [117])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -20 [0xffffffec]))
        (nil)))

(insn 18 17 19 2 pointer3.c:11 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 D.3797 ] [60])) 44 {*movsi_1} (nil))

(call_insn 19 18 20 2 pointer3.c:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 20 19 146 2 pointer3.c:12 (set (reg/f:SI 0 ax [orig:61 D.3798 ] [61])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 146 20 22 2 pointer3.c:12 (set (reg:SI 1 dx [118])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 56 [0x38]))) 196 {*lea_1} (nil))

(insn 22 146 23 2 pointer3.c:12 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [118])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -24 [0xffffffe8]))
        (nil)))

(insn 23 22 24 2 pointer3.c:12 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:61 D.3798 ] [61])) 44 {*movsi_1} (nil))

(call_insn 24 23 25 2 pointer3.c:12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 25 24 147 2 pointer3.c:14 (set (reg/f:SI 0 ax [orig:62 D.3799 ] [62])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 147 25 27 2 pointer3.c:14 (set (reg:SI 1 dx [119])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 52 [0x34]))) 196 {*lea_1} (nil))

(insn 27 147 28 2 pointer3.c:14 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [119])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -28 [0xffffffe4]))
        (nil)))

(insn 28 27 29 2 pointer3.c:14 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:62 D.3799 ] [62])) 44 {*movsi_1} (nil))

(call_insn 29 28 30 2 pointer3.c:14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 30 29 148 2 pointer3.c:15 (set (reg/f:SI 0 ax [orig:63 D.3800 ] [63])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 148 30 32 2 pointer3.c:15 (set (reg:SI 1 dx [120])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 48 [0x30]))) 196 {*lea_1} (nil))

(insn 32 148 33 2 pointer3.c:15 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [120])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -32 [0xffffffe0]))
        (nil)))

(insn 33 32 34 2 pointer3.c:15 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:63 D.3800 ] [63])) 44 {*movsi_1} (nil))

(call_insn 34 33 35 2 pointer3.c:15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 35 34 149 2 pointer3.c:16 (set (reg/f:SI 0 ax [orig:64 D.3801 ] [64])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 149 35 37 2 pointer3.c:16 (set (reg:SI 1 dx [121])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 44 [0x2c]))) 196 {*lea_1} (nil))

(insn 37 149 38 2 pointer3.c:16 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [121])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -36 [0xffffffdc]))
        (nil)))

(insn 38 37 39 2 pointer3.c:16 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:64 D.3801 ] [64])) 44 {*movsi_1} (nil))

(call_insn 39 38 40 2 pointer3.c:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 40 39 150 2 pointer3.c:17 (set (reg/f:SI 0 ax [orig:65 D.3802 ] [65])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 150 40 42 2 pointer3.c:17 (set (reg:SI 1 dx [122])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 40 [0x28]))) 196 {*lea_1} (nil))

(insn 42 150 43 2 pointer3.c:17 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [122])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -40 [0xffffffd8]))
        (nil)))

(insn 43 42 44 2 pointer3.c:17 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:65 D.3802 ] [65])) 44 {*movsi_1} (nil))

(call_insn 44 43 45 2 pointer3.c:17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 45 44 151 2 pointer3.c:19 (set (reg/f:SI 0 ax [orig:66 D.3803 ] [66])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 151 45 47 2 pointer3.c:19 (set (reg:SI 1 dx [123])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 36 [0x24]))) 196 {*lea_1} (nil))

(insn 47 151 48 2 pointer3.c:19 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [123])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -44 [0xffffffd4]))
        (nil)))

(insn 48 47 49 2 pointer3.c:19 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:66 D.3803 ] [66])) 44 {*movsi_1} (nil))

(call_insn 49 48 50 2 pointer3.c:19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 50 49 152 2 pointer3.c:20 (set (reg/f:SI 0 ax [orig:67 D.3804 ] [67])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 152 50 52 2 pointer3.c:20 (set (reg:SI 1 dx [124])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 32 [0x20]))) 196 {*lea_1} (nil))

(insn 52 152 53 2 pointer3.c:20 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [124])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -48 [0xffffffd0]))
        (nil)))

(insn 53 52 54 2 pointer3.c:20 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:67 D.3804 ] [67])) 44 {*movsi_1} (nil))

(call_insn 54 53 55 2 pointer3.c:20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 55 54 153 2 pointer3.c:21 (set (reg/f:SI 0 ax [orig:68 D.3805 ] [68])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb761f828>)) 44 {*movsi_1} (nil))

(insn 153 55 57 2 pointer3.c:21 (set (reg:SI 1 dx [125])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 28 [0x1c]))) 196 {*lea_1} (nil))

(insn 57 153 58 2 pointer3.c:21 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [125])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -52 [0xffffffcc]))
        (nil)))

(insn 58 57 59 2 pointer3.c:21 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:68 D.3805 ] [68])) 44 {*movsi_1} (nil))

(call_insn 59 58 154 2 pointer3.c:21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb7742500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 154 59 61 2 pointer3.c:23 (set (reg:SI 0 ax [126])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 28 [0x1c]))) 196 {*lea_1} (nil))

(insn 61 154 62 2 pointer3.c:23 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])
        (reg:SI 0 ax [126])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 7 sp)
            (const_int 28 [0x1c]))
        (nil)))

(insn 62 61 63 2 pointer3.c:26 (set (reg:SI 1 dx [orig:69 i.0 ] [69])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 i+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 63 62 155 2 pointer3.c:26 (set (reg:SI 0 ax [orig:70 j.1 ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 j+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 155 63 65 2 pointer3.c:26 (set (reg:SI 2 cx [orig:71 D.3808 ] [71])
        (plus:SI (reg:SI 1 dx [orig:69 i.0 ] [69])
            (reg:SI 0 ax [orig:70 j.1 ] [70]))) 196 {*lea_1} (nil))

(insn 65 155 66 2 pointer3.c:27 (set (reg:SI 1 dx [orig:72 k.2 ] [72])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 k+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 66 65 156 2 pointer3.c:27 (set (reg:SI 0 ax [orig:73 l.3 ] [73])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 l+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 156 66 68 2 pointer3.c:27 (set (reg:SI 3 bx [orig:74 D.3811 ] [74])
        (plus:SI (reg:SI 1 dx [orig:72 k.2 ] [72])
            (reg:SI 0 ax [orig:73 l.3 ] [73]))) 196 {*lea_1} (nil))

(insn 68 156 69 2 pointer3.c:28 (set (reg:SI 1 dx [orig:75 m.4 ] [75])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [0 m+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 69 68 157 2 pointer3.c:28 (set (reg:SI 0 ax [orig:76 n.5 ] [76])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [0 n+0 S4 A256])) 44 {*movsi_1} (nil))

(insn 157 69 71 2 pointer3.c:28 (set (reg:SI 4 si [orig:77 D.3814 ] [77])
        (plus:SI (reg:SI 1 dx [orig:75 m.4 ] [75])
            (reg:SI 0 ax [orig:76 n.5 ] [76]))) 196 {*lea_1} (nil))

(insn 71 157 72 2 pointer3.c:29 (set (reg:SI 1 dx [orig:78 o.6 ] [78])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 o+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 72 71 158 2 pointer3.c:29 (set (reg:SI 0 ax [orig:79 p.7 ] [79])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 p+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 158 72 74 2 pointer3.c:29 (set (reg:SI 5 di [orig:80 D.3817 ] [80])
        (plus:SI (reg:SI 1 dx [orig:78 o.6 ] [78])
            (reg:SI 0 ax [orig:79 p.7 ] [79]))) 196 {*lea_1} (nil))

(insn 74 158 75 2 pointer3.c:30 (set (reg:SI 1 dx [orig:81 q.8 ] [81])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [0 q+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 75 74 76 2 pointer3.c:30 (set (reg:SI 0 ax [orig:82 r.9 ] [82])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [0 r+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 76 75 233 2 pointer3.c:30 (parallel [
            (set (reg:SI 0 ax)
                (plus:SI (reg:SI 1 dx [orig:81 q.8 ] [81])
                    (reg:SI 0 ax [orig:82 r.9 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 233 76 77 2 pointer3.c:30 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [0 %sfp+-68 S4 A32])
        (reg:SI 0 ax)) 44 {*movsi_1} (nil))

(insn 77 233 184 2 pointer3.c:31 (set (reg/f:SI 1 dx [127])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 184 77 189 2 (set:SI (reg:SI 0 ax [136])
        (reg/f:SI 1 dx [127])) 44 {*movsi_1} (nil))

(insn 189 184 190 2 (set (reg:CCZ 17 flags [0])
        (compare:CCZ (reg:SI 0 ax [140])
            (const_int 0 [0x0]))) 2 {*cmpsi_ccno_1} (nil))

(jump_insn 190 189 224 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags [0])
                (const_int 0 [0x0]))
            (label_ref 193)
            (pc))) 465 {*jcc_1} (nil)
 -> 193)

(note 224 190 191 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 191 224 192 3 pointer3.c:31 (call (mem:QI (symbol_ref:SI ("abort")) [0 S1 A8])
        (const_int 0 [0x0])) 484 {*call_0} (nil)
    (nil))

(barrier 192 191 193)

(code_label 193 192 225 4 2 "" [1 uses])

(note 225 193 78 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 78 225 234 4 pointer3.c:31 (set (reg:SI 0 ax [orig:84 D.3821 ] [84])
        (mem:SI (reg/f:SI 1 dx [127]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 234 78 159 4 pointer3.c:30 (set (reg:SI 1 dx)
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [0 %sfp+-68 S4 A32])) 44 {*movsi_1} (nil))

(insn 159 234 160 4 pointer3.c:30 (set (reg:SI 0 ax [orig:85 D.3822 ] [85])
        (plus:SI (reg:SI 1 dx)
            (reg:SI 0 ax [orig:84 D.3821 ] [84]))) 196 {*lea_1} (nil))

(insn 160 159 161 4 pointer3.c:29 (set (reg:SI 0 ax [orig:86 D.3823 ] [86])
        (plus:SI (reg:SI 5 di [orig:80 D.3817 ] [80])
            (reg:SI 0 ax [orig:85 D.3822 ] [85]))) 196 {*lea_1} (nil))

(insn 161 160 162 4 pointer3.c:28 (set (reg:SI 0 ax [orig:87 D.3824 ] [87])
        (plus:SI (reg:SI 4 si [orig:77 D.3814 ] [77])
            (reg:SI 0 ax [orig:86 D.3823 ] [86]))) 196 {*lea_1} (nil))

(insn 162 161 163 4 pointer3.c:27 (set (reg:SI 0 ax [orig:88 D.3825 ] [88])
        (plus:SI (reg:SI 3 bx [orig:74 D.3811 ] [74])
            (reg:SI 0 ax [orig:87 D.3824 ] [87]))) 196 {*lea_1} (nil))

(insn 163 162 84 4 pointer3.c:25 (set (reg:SI 0 ax [128])
        (plus:SI (reg:SI 2 cx [orig:71 D.3808 ] [71])
            (reg:SI 0 ax [orig:88 D.3825 ] [88]))) 196 {*lea_1} (nil))

(insn 84 163 85 4 pointer3.c:25 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])
        (reg:SI 0 ax [128])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:71 D.3808 ] [71])
            (reg:SI 0 ax [orig:88 D.3825 ] [88]))
        (nil)))

(insn 85 84 194 4 pointer3.c:38 (set (reg/f:SI 0 ax [129])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 194 85 199 4 (set:SI (reg:SI 1 dx [141])
        (reg/f:SI 0 ax [129])) 44 {*movsi_1} (nil))

(insn 199 194 200 4 (set (reg:CCZ 17 flags [0])
        (compare:CCZ (reg:SI 1 dx [145])
            (const_int 0 [0x0]))) 2 {*cmpsi_ccno_1} (nil))

(jump_insn 200 199 226 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags [0])
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 465 {*jcc_1} (nil)
 -> 203)

(note 226 200 201 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 201 226 202 5 pointer3.c:38 (call (mem:QI (symbol_ref:SI ("abort")) [0 S1 A8])
        (const_int 0 [0x0])) 484 {*call_0} (nil)
    (nil))

(barrier 202 201 203)

(code_label 203 202 227 6 3 "" [1 uses])

(note 227 203 86 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 86 227 87 6 pointer3.c:38 (set (reg:SI 1 dx [orig:89 D.3826 ] [89])
        (mem:SI (reg/f:SI 0 ax [129]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 87 86 88 6 pointer3.c:38 (set (reg/f:SI 0 ax [orig:90 D.3827 ] [90])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7832738>)) 44 {*movsi_1} (nil))

(insn 88 87 89 6 pointer3.c:38 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 dx [orig:89 D.3826 ] [89])) 44 {*movsi_1} (nil))

(insn 89 88 90 6 pointer3.c:38 (set (reg:SI 1 dx [130])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 90 89 91 6 pointer3.c:38 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [130])) 44 {*movsi_1} (nil))

(insn 91 90 92 6 pointer3.c:38 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:90 D.3827 ] [90])) 44 {*movsi_1} (nil))

(call_insn 92 91 93 6 pointer3.c:38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb773ef00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) 697 {*call_value_0} (nil)
    (nil))

(insn 93 92 94 6 pointer3.c:41 (set (reg:SI 0 ax [orig:91 i.10 ] [91])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [0 i+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 94 93 95 6 pointer3.c:41 (set (reg:SI 1 dx [orig:92 j.11 ] [92])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [0 j+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 95 94 96 6 pointer3.c:41 (parallel [
            (set (reg:SI 0 ax [orig:93 D.3830 ] [93])
                (minus:SI (reg:SI 0 ax [orig:93 D.3830 ] [93])
                    (reg:SI 1 dx [orig:92 j.11 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 96 95 97 6 pointer3.c:43 (set (reg:SI 2 cx [orig:94 m.12 ] [94])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [0 m+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 97 96 98 6 pointer3.c:43 (set (reg:SI 1 dx [orig:95 n.13 ] [95])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [0 n+0 S4 A256])) 44 {*movsi_1} (nil))

(insn 98 97 99 6 pointer3.c:43 (parallel [
            (set (reg:SI 2 cx [orig:96 D.3833 ] [96])
                (minus:SI (reg:SI 2 cx [orig:96 D.3833 ] [96])
                    (reg:SI 1 dx [orig:95 n.13 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 99 98 100 6 pointer3.c:45 (set (reg:SI 3 bx [orig:97 q.14 ] [97])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [0 q+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 100 99 235 6 pointer3.c:45 (set (reg:SI 1 dx [orig:98 r.15 ] [98])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [0 r+0 S4 A128])) 44 {*movsi_1} (nil))

(insn 235 100 101 6 pointer3.c:45 (set (reg:SI 4 si [orig:99 D.3836 ] [99])
        (reg:SI 3 bx [orig:97 q.14 ] [97])) 44 {*movsi_1} (nil))

(insn 101 235 102 6 pointer3.c:45 (parallel [
            (set (reg:SI 4 si [orig:99 D.3836 ] [99])
                (minus:SI (reg:SI 4 si [orig:99 D.3836 ] [99])
                    (reg:SI 1 dx [orig:98 r.15 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 102 101 204 6 pointer3.c:46 (set (reg/f:SI 1 dx [131])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 204 102 209 6 (set:SI (reg:SI 3 bx [146])
        (reg/f:SI 1 dx [131])) 44 {*movsi_1} (nil))

(insn 209 204 210 6 (set (reg:CCZ 17 flags [0])
        (compare:CCZ (reg:SI 3 bx [150])
            (const_int 0 [0x0]))) 2 {*cmpsi_ccno_1} (nil))

(jump_insn 210 209 228 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags [0])
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 465 {*jcc_1} (nil)
 -> 213)

(note 228 210 211 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 211 228 212 7 pointer3.c:46 (call (mem:QI (symbol_ref:SI ("abort")) [0 S1 A8])
        (const_int 0 [0x0])) 484 {*call_0} (nil)
    (nil))

(barrier 212 211 213)

(code_label 213 212 229 8 4 "" [1 uses])

(note 229 213 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 103 229 138 8 pointer3.c:46 (set (reg:SI 3 bx [orig:100 D.3837 ] [100])
        (mem:SI (reg/f:SI 1 dx [131]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 138 103 104 8 pointer3.c:45 (set (reg:SI 1 dx [orig:101 D.3838 ] [101])
        (reg:SI 4 si [orig:99 D.3836 ] [99])) 44 {*movsi_1} (nil))

(insn 104 138 105 8 pointer3.c:45 (parallel [
            (set (reg:SI 1 dx [orig:101 D.3838 ] [101])
                (minus:SI (reg:SI 1 dx [orig:101 D.3838 ] [101])
                    (reg:SI 3 bx [orig:100 D.3837 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 105 104 106 8 pointer3.c:44 (set (reg:SI 3 bx [orig:102 p.16 ] [102])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 p+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 106 105 139 8 pointer3.c:44 (set (reg:SI 4 si [orig:103 o.17 ] [103])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [0 o+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 139 106 107 8 pointer3.c:44 (set (reg:SI 5 di)
        (reg:SI 3 bx [orig:102 p.16 ] [102])) 44 {*movsi_1} (nil))

(insn 107 139 140 8 pointer3.c:44 (parallel [
            (set (reg:SI 5 di)
                (minus:SI (reg:SI 5 di)
                    (reg:SI 4 si [orig:103 o.17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 140 107 164 8 pointer3.c:44 (set (reg:SI 3 bx [orig:104 D.3841 ] [104])
        (reg:SI 5 di)) 44 {*movsi_1} (nil))

(insn 164 140 109 8 pointer3.c:44 (set (reg:SI 1 dx [orig:105 D.3842 ] [105])
        (plus:SI (reg:SI 1 dx [orig:101 D.3838 ] [101])
            (reg:SI 3 bx [orig:104 D.3841 ] [104]))) 196 {*lea_1} (nil))

(insn 109 164 110 8 pointer3.c:43 (parallel [
            (set (reg:SI 2 cx [orig:106 D.3843 ] [106])
                (plus:SI (reg:SI 2 cx [orig:96 D.3833 ] [96])
                    (reg:SI 1 dx [orig:105 D.3842 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 110 109 111 8 pointer3.c:42 (set (reg:SI 1 dx [orig:107 l.18 ] [107])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [0 l+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 111 110 141 8 pointer3.c:42 (set (reg:SI 3 bx [orig:108 k.19 ] [108])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [0 k+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 141 111 112 8 pointer3.c:42 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:107 l.18 ] [107])) 44 {*movsi_1} (nil))

(insn 112 141 142 8 pointer3.c:42 (parallel [
            (set (reg:SI 4 si)
                (minus:SI (reg:SI 4 si)
                    (reg:SI 3 bx [orig:108 k.19 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) 228 {*subsi_1} (nil))

(insn 142 112 165 8 pointer3.c:42 (set (reg:SI 1 dx [orig:109 D.3846 ] [109])
        (reg:SI 4 si)) 44 {*movsi_1} (nil))

(insn 165 142 166 8 pointer3.c:42 (set (reg:SI 1 dx [orig:110 D.3847 ] [110])
        (plus:SI (reg:SI 2 cx [orig:106 D.3843 ] [106])
            (reg:SI 1 dx [orig:109 D.3846 ] [109]))) 196 {*lea_1} (nil))

(insn 166 165 115 8 pointer3.c:40 (set (reg:SI 0 ax [132])
        (plus:SI (reg:SI 0 ax [orig:93 D.3830 ] [93])
            (reg:SI 1 dx [orig:110 D.3847 ] [110]))) 196 {*lea_1} (nil))

(insn 115 166 116 8 pointer3.c:40 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])
        (reg:SI 0 ax [132])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg:SI 0 ax [orig:93 D.3830 ] [93])
            (reg:SI 1 dx [orig:110 D.3847 ] [110]))
        (nil)))

(insn 116 115 214 8 pointer3.c:53 (set (reg/f:SI 0 ax [133])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [0 t+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 214 116 219 8 (set:SI (reg:SI 1 dx [151])
        (reg/f:SI 0 ax [133])) 44 {*movsi_1} (nil))

(insn 219 214 220 8 (set (reg:CCZ 17 flags [0])
        (compare:CCZ (reg:SI 1 dx [155])
            (const_int 0 [0x0]))) 2 {*cmpsi_ccno_1} (nil))

(jump_insn 220 219 230 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags [0])
                (const_int 0 [0x0]))
            (label_ref 223)
            (pc))) 465 {*jcc_1} (nil)
 -> 223)

(note 230 220 221 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(call_insn 221 230 222 9 pointer3.c:53 (call (mem:QI (symbol_ref:SI ("abort")) [0 S1 A8])
        (const_int 0 [0x0])) 484 {*call_0} (nil)
    (nil))

(barrier 222 221 223)

(code_label 223 222 231 10 5 "" [1 uses])

(note 231 223 117 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 117 231 118 10 pointer3.c:53 (set (reg:SI 1 dx [orig:111 D.3848 ] [111])
        (mem:SI (reg/f:SI 0 ax [133]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 118 117 119 10 pointer3.c:53 (set (reg/f:SI 0 ax [orig:112 D.3849 ] [112])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7832738>)) 44 {*movsi_1} (nil))

(insn 119 118 120 10 pointer3.c:53 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 dx [orig:111 D.3848 ] [111])) 44 {*movsi_1} (nil))

(insn 120 119 121 10 pointer3.c:53 (set (reg:SI 1 dx [134])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [0 res+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 121 120 122 10 pointer3.c:53 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [134])) 44 {*movsi_1} (nil))

(insn 122 121 123 10 pointer3.c:53 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:112 D.3849 ] [112])) 44 {*movsi_1} (nil))

(call_insn 123 122 132 10 pointer3.c:53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb773ef00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) 697 {*call_value_0} (nil)
    (nil))

(insn 132 123 182 10 pointer3.c:56 (use (reg/i:SI 0 ax)) -1 (nil))

(jump_insn 182 132 183 10 pointer3.c:56 (return) 490 {return_internal} (nil))

(barrier 183 182 135)

(note 135 183 232 NOTE_INSN_DELETED)

(note 232 135 0 NOTE_INSN_DELETED)
