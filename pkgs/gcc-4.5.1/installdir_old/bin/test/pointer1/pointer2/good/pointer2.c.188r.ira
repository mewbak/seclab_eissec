
;; Function main (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r64,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a3 (r62,l0) best Q_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a0 (r60,l0) best AREG, cover GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r60,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:8
  a4(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11
  a5(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 20(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 26(l0): point = 19
   Insn 25(l0): point = 22
   Insn 24(l0): point = 24
   Insn 23(l0): point = 26
   Insn 6(l0): point = 28
   Insn 5(l0): point = 30
 a0(r60): [3..4]
 a1(r59): [5..6]
 a2(r58): [11..12]
 a3(r62): [15..16]
 a4(r61): [22..28] [17..18]
 a5(r64): [25..26]
Compressing live ranges: from 33 to 14 - 42%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59): [2..3]
 a2(r58): [4..5]
 a3(r62): [6..7]
 a4(r61): [10..13] [8..9]
 a5(r64): [11..12]
  regions=1, blocks=5, points=14
    allocnos=6, copies=0, conflicts=0, ranges=7
Disposition:
    2:r58  l0     0    1:r59  l0     0    0:r60  l0     0    4:r61  l0     0
    3:r62  l0     0    5:r64  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 61
insn=23, live_throughout: 7, 61, dead_or_set: 64
insn=24, live_throughout: 7, 61, dead_or_set: 64
insn=25, live_throughout: 7, 61, dead_or_set: 
insn=26, live_throughout: 7, dead_or_set: 
insn=28, live_throughout: 7, 61, dead_or_set: 
insn=7, live_throughout: 7, dead_or_set: 61, 62
insn=8, live_throughout: 7, dead_or_set: 62
insn=9, live_throughout: 7, dead_or_set: 58
insn=10, live_throughout: 7, dead_or_set: 58
insn=11, live_throughout: 7, dead_or_set: 0
insn=12, live_throughout: 7, dead_or_set: 59
insn=13, live_throughout: 7, dead_or_set: 59, 60
insn=17, live_throughout: 7, dead_or_set: 0, 60
insn=20, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 17
changing reg in insn 6
changing reg in insn 7
changing reg in insn 23
changing reg in insn 7
changing reg in insn 8
changing reg in insn 23
changing reg in insn 24
deleting insn with uid = 13.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 11.
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 ../pointer2.c:7 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [0 c+0 S4 A32])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 6 5 23 2 ../pointer2.c:8 (set (reg/f:SI 0 ax [61])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [0 c+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 23 6 24 2 (set:SI (reg:SI 1 dx [64])
        (reg/f:SI 0 ax [61])) 44 {*movsi_1} (nil))

(insn 24 23 25 2 (set (reg:CCZ 17 flags [0])
        (compare:CCZ (reg:SI 1 dx [64])
            (const_int 0 [0x0]))) 2 {*cmpsi_ccno_1} (nil))

(jump_insn 25 24 29 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags [0])
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 465 {*jcc_1} (nil)
 -> 28)

(note 29 25 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 26 29 27 3 ../pointer2.c:8 (call (mem:QI (symbol_ref:SI ("abort")) [0 S1 A8])
        (const_int 0 [0x0])) 484 {*call_0} (nil)
    (nil))

(barrier 27 26 28)

(code_label 28 27 30 4 2 "" [1 uses])

(note 30 28 7 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 7 30 8 4 ../pointer2.c:8 (set (reg:QI 0 ax [62])
        (mem:QI (reg/f:SI 0 ax [61]) [0 S1 A8])) 53 {*movqi_1} (nil))

(insn 8 7 9 4 ../pointer2.c:8 (set (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 27 [0x1b])) [0 d+0 S1 A8])
        (reg:QI 0 ax [62])) 53 {*movqi_1} (nil))

(insn 9 8 10 4 ../pointer2.c:9 (set (reg:SI 0 ax [orig:58 D.3782 ] [58])
        (sign_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 27 [0x1b])) [0 d+0 S1 A8]))) 96 {extendqisi2} (nil))

(insn 10 9 11 4 ../pointer2.c:9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [orig:58 D.3782 ] [58])) 44 {*movsi_1} (nil))

(call_insn 11 10 12 4 ../pointer2.c:9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("putchar") [flags 0x41]  <function_decl 0xb76ec080 __builtin_putchar>) [0 S1 A8])
            (const_int 4 [0x4]))) 697 {*call_value_0} (nil)
    (nil))

(insn 12 11 20 4 ../pointer2.c:10 (set (reg:SI 0 ax [orig:59 D.3783 ] [59])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 20 12 31 4 ../pointer2.c:11 (use (reg/i:SI 0 ax)) -1 (nil))

(note 31 20 0 NOTE_INSN_DELETED)
