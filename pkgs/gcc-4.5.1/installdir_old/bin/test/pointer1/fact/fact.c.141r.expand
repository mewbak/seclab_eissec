
;; Function main (main)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)

(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 fact.c:7 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 6 5 7 3 fact.c:8 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 7 6 8 3 fact.c:8 (set (pc)
        (label_ref 14)) -1 (nil)
 -> 14)

(barrier 8 7 16)

(code_label 16 8 9 4 3 "" [1 uses])

(note 9 16 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 fact.c:9 (set (reg:SI 59)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 j+0 S4 A32])) -1 (nil))

(insn 11 10 12 4 fact.c:9 (parallel [
            (set (reg:SI 60)
                (mult:SI (reg:SI 59)
                    (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 12 11 13 4 fact.c:9 (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 j+0 S4 A32])
        (reg:SI 60)) -1 (nil))

(insn 13 12 14 4 fact.c:8 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(code_label 14 13 15 5 2 "" [1 uses])

(note 15 14 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 15 18 5 fact.c:8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
            (const_int 6 [0x6]))) -1 (nil))

(jump_insn 18 17 19 5 fact.c:8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) -1 (nil)
 -> 16)

(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 6 fact.c:11 (set (reg/f:SI 58 [ D.2518 ])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb77a72d0>)) -1 (nil))

(insn 21 20 22 6 fact.c:11 (set (reg:SI 61)
        (mem/c/i:SI (plus:SI (reg/f:SI 54 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) [0 j+0 S4 A32])) -1 (nil))

(insn 22 21 23 6 fact.c:11 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 61)) -1 (nil))

(insn 23 22 24 6 fact.c:11 (set (mem:SI (plus:SI (reg/f:SI 56 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (const_int 6 [0x6])) -1 (nil))

(insn 24 23 25 6 fact.c:11 (set (mem:SI (reg/f:SI 56 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 58 [ D.2518 ])) -1 (nil))

(call_insn 25 24 26 6 fact.c:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb7743f00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) -1 (nil)
    (nil))

(code_label 26 25 27 7 1 "" [0 uses])

(note 27 26 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
