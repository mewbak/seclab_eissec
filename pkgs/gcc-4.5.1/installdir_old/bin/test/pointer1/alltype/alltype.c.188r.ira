
;; Function main (main)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r79: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a21 (r79,l0) best GENERAL_REGS, cover GENERAL_REGS
    r78: preferred AREG, alternative GENERAL_REGS, cover GENERAL_REGS
    a0 (r78,l0) best AREG, cover GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a1 (r77,l0) best GENERAL_REGS, cover GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a2 (r76,l0) best GENERAL_REGS, cover GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a3 (r75,l0) best GENERAL_REGS, cover GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a4 (r74,l0) best GENERAL_REGS, cover GENERAL_REGS
    r73: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a8 (r73,l0) best Q_REGS, cover GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a5 (r72,l0) best GENERAL_REGS, cover GENERAL_REGS
    r71: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a9 (r71,l0) best Q_REGS, cover GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a6 (r70,l0) best GENERAL_REGS, cover GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a7 (r69,l0) best GENERAL_REGS, cover GENERAL_REGS
    r68: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a10 (r68,l0) best Q_REGS, cover GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a11 (r67,l0) best GENERAL_REGS, cover GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a12 (r66,l0) best GENERAL_REGS, cover GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a13 (r65,l0) best GENERAL_REGS, cover GENERAL_REGS
    r64: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a14 (r64,l0) best Q_REGS, cover GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a15 (r63,l0) best GENERAL_REGS, cover GENERAL_REGS
    r62: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a16 (r62,l0) best Q_REGS, cover GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a17 (r61,l0) best GENERAL_REGS, cover GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a18 (r60,l0) best GENERAL_REGS, cover GENERAL_REGS
    r59: preferred Q_REGS, alternative GENERAL_REGS, cover GENERAL_REGS
    a19 (r59,l0) best Q_REGS, cover GENERAL_REGS
    r58: preferred GENERAL_REGS, alternative NO_REGS, cover GENERAL_REGS
    a20 (r58,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r78,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a1(r77,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a2(r76,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a3(r75,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a4(r74,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a5(r72,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a6(r70,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a7(r69,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a8(r73,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:7
  a9(r71,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:4,4 DIREG:4,4 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:4,4 GENERAL_REGS:4,4 MEM:7
  a10(r68,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:8
  a11(r67,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a12(r66,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a13(r65,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a14(r64,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:8
  a15(r63,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a16(r62,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:7
  a17(r61,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6
  a18(r60,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7
  a19(r59,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:2,2 DIREG:2,2 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:2,2 GENERAL_REGS:2,2 MEM:8
  a20(r58,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8
  a21(r79,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8

   Insn 48(l0): point = 0
   Insn 45(l0): point = 2
   Insn 41(l0): point = 4
   Insn 40(l0): point = 6
   Insn 39(l0): point = 8
   Insn 38(l0): point = 10
   Insn 37(l0): point = 12
   Insn 36(l0): point = 14
   Insn 35(l0): point = 16
   Insn 34(l0): point = 18
   Insn 33(l0): point = 20
   Insn 32(l0): point = 22
   Insn 31(l0): point = 24
   Insn 30(l0): point = 26
   Insn 29(l0): point = 28
   Insn 28(l0): point = 30
   Insn 27(l0): point = 32
   Insn 26(l0): point = 34
   Insn 25(l0): point = 36
   Insn 24(l0): point = 38
   Insn 23(l0): point = 40
   Insn 22(l0): point = 42
   Insn 21(l0): point = 44
   Insn 20(l0): point = 46
   Insn 19(l0): point = 48
   Insn 18(l0): point = 50
   Insn 17(l0): point = 52
   Insn 16(l0): point = 54
   Insn 15(l0): point = 56
   Insn 14(l0): point = 58
   Insn 13(l0): point = 60
   Insn 12(l0): point = 62
   Insn 11(l0): point = 64
   Insn 10(l0): point = 66
   Insn 9(l0): point = 68
   Insn 8(l0): point = 70
   Insn 7(l0): point = 72
   Insn 6(l0): point = 74
   Insn 5(l0): point = 76
 a0(r78): [3..4]
 a1(r77): [5..6]
 a2(r76): [11..22]
 a3(r75): [13..24]
 a4(r74): [15..26]
 a5(r72): [17..30]
 a6(r70): [19..34]
 a7(r69): [21..36]
 a8(r73): [27..28]
 a9(r71): [31..32]
 a10(r68): [39..40]
 a11(r67): [41..42]
 a12(r66): [43..44]
 a13(r65): [45..46]
 a14(r64): [49..50]
 a15(r63): [51..52]
 a16(r62): [55..56]
 a17(r61): [57..58]
 a18(r60): [59..60]
 a19(r59): [63..64]
 a20(r58): [69..74]
 a21(r79): [71..72]
Compressing live ranges: from 79 to 44 - 55%
Ranges after the compression:
 a0(r78): [0..1]
 a1(r77): [2..3]
 a2(r76): [4..10]
 a3(r75): [5..11]
 a4(r74): [6..12]
 a5(r72): [7..15]
 a6(r70): [8..18]
 a7(r69): [9..19]
 a8(r73): [13..14]
 a9(r71): [16..17]
 a10(r68): [20..21]
 a11(r67): [22..23]
 a12(r66): [24..25]
 a13(r65): [26..27]
 a14(r64): [28..29]
 a15(r63): [30..31]
 a16(r62): [32..33]
 a17(r61): [34..35]
 a18(r60): [36..37]
 a19(r59): [38..39]
 a20(r58): [40..43]
 a21(r79): [41..42]
  regions=1, blocks=3, points=44
    allocnos=22, copies=0, conflicts=0, ranges=22
Disposition:
   20:r58  l0     0   19:r59  l0     0   18:r60  l0     0   17:r61  l0     0
   16:r62  l0     0   15:r63  l0     0   14:r64  l0     0   13:r65  l0     0
   12:r66  l0     0   11:r67  l0     0   10:r68  l0     0    7:r69  l0     5
    6:r70  l0     4    9:r71  l0     0    5:r72  l0     3    8:r73  l0     0
    4:r74  l0     2    3:r75  l0     1    2:r76  l0     0    1:r77  l0     0
    0:r78  l0     0   21:r79  l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 7, dead_or_set: 
insn=6, live_throughout: 7, dead_or_set: 58
insn=7, live_throughout: 7, 58, dead_or_set: 79
insn=8, live_throughout: 7, 58, dead_or_set: 79
insn=9, live_throughout: 7, dead_or_set: 58
insn=10, live_throughout: 7, dead_or_set: 0
insn=11, live_throughout: 7, dead_or_set: 59
insn=12, live_throughout: 7, dead_or_set: 59
insn=13, live_throughout: 7, dead_or_set: 60
insn=14, live_throughout: 7, dead_or_set: 60, 61
insn=15, live_throughout: 7, dead_or_set: 61, 62
insn=16, live_throughout: 7, dead_or_set: 62
insn=17, live_throughout: 7, dead_or_set: 63
insn=18, live_throughout: 7, dead_or_set: 63, 64
insn=19, live_throughout: 7, dead_or_set: 64
insn=20, live_throughout: 7, dead_or_set: 65
insn=21, live_throughout: 7, dead_or_set: 65, 66
insn=22, live_throughout: 7, dead_or_set: 66, 67
insn=23, live_throughout: 7, dead_or_set: 67, 68
insn=24, live_throughout: 7, dead_or_set: 68
insn=25, live_throughout: 7, dead_or_set: 69
insn=26, live_throughout: 7, 69, dead_or_set: 70
insn=27, live_throughout: 7, 69, 70, dead_or_set: 71
insn=28, live_throughout: 7, 69, 70, dead_or_set: 71, 72
insn=29, live_throughout: 7, 69, 70, 72, dead_or_set: 73
insn=30, live_throughout: 7, 69, 70, 72, dead_or_set: 73, 74
insn=31, live_throughout: 7, 69, 70, 72, 74, dead_or_set: 75
insn=32, live_throughout: 7, 69, 70, 72, 74, 75, dead_or_set: 76
insn=33, live_throughout: 7, 70, 72, 74, 75, 76, dead_or_set: 69
insn=34, live_throughout: 7, 72, 74, 75, 76, dead_or_set: 70
insn=35, live_throughout: 7, 74, 75, 76, dead_or_set: 72
insn=36, live_throughout: 7, 75, 76, dead_or_set: 74
insn=37, live_throughout: 7, 76, dead_or_set: 75
insn=38, live_throughout: 7, dead_or_set: 76
insn=39, live_throughout: 7, dead_or_set: 0
insn=40, live_throughout: 7, dead_or_set: 77
insn=41, live_throughout: 7, dead_or_set: 77, 78
insn=45, live_throughout: 7, dead_or_set: 0, 78
insn=48, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 6
changing reg in insn 9
changing reg in insn 11
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 33
changing reg in insn 26
changing reg in insn 34
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 35
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 36
changing reg in insn 31
changing reg in insn 37
changing reg in insn 32
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 45
changing reg in insn 7
changing reg in insn 8
deleting insn with uid = 41.
deleting insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 39.
(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 alltype.c:7 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 i+0 S4 A64])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 6 5 7 2 alltype.c:8 (set (reg/f:SI 0 ax [orig:58 D.3784 ] [58])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb7608240>)) 44 {*movsi_1} (nil))

(insn 7 6 8 2 alltype.c:8 (parallel [
            (set (reg:SI 1 dx [79])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) 197 {*addsi_1} (nil))

(insn 8 7 9 2 alltype.c:8 (set (mem/f/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [79])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
            (const_int -8 [0xfffffff8]))
        (nil)))

(insn 9 8 10 2 alltype.c:8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:58 D.3784 ] [58])) 44 {*movsi_1} (nil))

(call_insn 10 9 11 2 alltype.c:8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0xb772f500 scanf>) [0 S1 A8])
            (const_int 8 [0x8]))) 697 {*call_value_0} (nil)
    (nil))

(insn 11 10 12 2 alltype.c:10 (set (reg:SI 0 ax [orig:59 i.0 ] [59])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 12 11 13 2 alltype.c:10 (set (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 47 [0x2f])) [0 al+0 S1 A8])
        (reg:QI 0 ax [orig:59 i.0 ] [59])) 53 {*movqi_1} (nil))

(insn 13 12 14 2 alltype.c:11 (set (reg:SI 0 ax [orig:60 i.1 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 14 13 15 2 alltype.c:11 (parallel [
            (set (reg:SI 0 ax [orig:61 D.3787 ] [61])
                (and:SI (reg:SI 0 ax [orig:60 i.1 ] [60])
                    (const_int 65280 [0xff00])))
            (clobber (reg:CC 17 flags))
        ]) 289 {*andsi_1} (nil))

(insn 15 14 16 2 alltype.c:11 (parallel [
            (set (reg:SI 0 ax [orig:62 D.3788 ] [62])
                (ashiftrt:SI (reg:SI 0 ax [orig:61 D.3787 ] [61])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 398 {*ashrsi3_1} (nil))

(insn 16 15 17 2 alltype.c:11 (set (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 46 [0x2e])) [0 ah+0 S1 A8])
        (reg:QI 0 ax [orig:62 D.3788 ] [62])) 53 {*movqi_1} (nil))

(insn 17 16 18 2 alltype.c:14 (set (reg:SI 0 ax [orig:63 i.2 ] [63])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 18 17 19 2 alltype.c:14 (set (reg:QI 0 ax [orig:64 D.3790 ] [64])
        (reg:QI 0 ax [orig:63 i.2 ] [63])) 53 {*movqi_1} (nil))

(insn 19 18 20 2 alltype.c:14 (set (mem/s/j:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 38 [0x26])) [0 ax+0 S1 A16])
        (reg:QI 0 ax [orig:64 D.3790 ] [64])) 53 {*movqi_1} (nil))

(insn 20 19 21 2 alltype.c:15 (set (reg:SI 0 ax [orig:65 i.3 ] [65])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 21 20 22 2 alltype.c:15 (parallel [
            (set (reg:SI 0 ax [orig:66 D.3792 ] [66])
                (and:SI (reg:SI 0 ax [orig:65 i.3 ] [65])
                    (const_int 65280 [0xff00])))
            (clobber (reg:CC 17 flags))
        ]) 289 {*andsi_1} (nil))

(insn 22 21 23 2 alltype.c:15 (parallel [
            (set (reg:SI 0 ax [orig:67 D.3793 ] [67])
                (ashiftrt:SI (reg:SI 0 ax [orig:66 D.3792 ] [66])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 398 {*ashrsi3_1} (nil))

(insn 23 22 24 2 alltype.c:15 (set (reg:QI 0 ax [orig:68 D.3794 ] [68])
        (reg:QI 0 ax [orig:67 D.3793 ] [67])) 53 {*movqi_1} (nil))

(insn 24 23 25 2 alltype.c:15 (set (mem/s/j:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 39 [0x27])) [0 ax+1 S1 A8])
        (reg:QI 0 ax [orig:68 D.3794 ] [68])) 53 {*movqi_1} (nil))

(insn 25 24 26 2 alltype.c:17 (set (reg:SI 5 di [orig:69 D.3795 ] [69])
        (sign_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 47 [0x2f])) [0 al+0 S1 A8]))) 96 {extendqisi2} (nil))

(insn 26 25 27 2 alltype.c:17 (set (reg:SI 4 si [orig:70 D.3796 ] [70])
        (sign_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 46 [0x2e])) [0 ah+0 S1 A8]))) 96 {extendqisi2} (nil))

(insn 27 26 28 2 alltype.c:17 (set (reg:QI 0 ax [orig:71 D.3797 ] [71])
        (mem/s/j:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 38 [0x26])) [0 ax+0 S1 A16])) 53 {*movqi_1} (nil))

(insn 28 27 29 2 alltype.c:17 (set (reg:SI 3 bx [orig:72 D.3798 ] [72])
        (sign_extend:SI (reg:QI 0 ax [orig:71 D.3797 ] [71]))) 96 {extendqisi2} (nil))

(insn 29 28 30 2 alltype.c:17 (set (reg:QI 0 ax [orig:73 D.3799 ] [73])
        (mem/s/j:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 39 [0x27])) [0 ax+1 S1 A8])) 53 {*movqi_1} (nil))

(insn 30 29 31 2 alltype.c:17 (set (reg:SI 2 cx [orig:74 D.3800 ] [74])
        (sign_extend:SI (reg:QI 0 ax [orig:73 D.3799 ] [73]))) 96 {extendqisi2} (nil))

(insn 31 30 32 2 alltype.c:17 (set (reg:SI 1 dx [orig:75 i.4 ] [75])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 32 31 33 2 alltype.c:17 (set (reg/f:SI 0 ax [orig:76 D.3802 ] [76])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7605570>)) 44 {*movsi_1} (nil))

(insn 33 32 34 2 alltype.c:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 5 di [orig:69 D.3795 ] [69])) 44 {*movsi_1} (nil))

(insn 34 33 35 2 alltype.c:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 4 si [orig:70 D.3796 ] [70])) 44 {*movsi_1} (nil))

(insn 35 34 36 2 alltype.c:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 3 bx [orig:72 D.3798 ] [72])) 44 {*movsi_1} (nil))

(insn 36 35 37 2 alltype.c:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 2 cx [orig:74 D.3800 ] [74])) 44 {*movsi_1} (nil))

(insn 37 36 38 2 alltype.c:17 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [orig:75 i.4 ] [75])) 44 {*movsi_1} (nil))

(insn 38 37 39 2 alltype.c:17 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:76 D.3802 ] [76])) 44 {*movsi_1} (nil))

(call_insn 39 38 40 2 alltype.c:17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb772bf00 printf>) [0 S1 A8])
            (const_int 24 [0x18]))) 697 {*call_value_0} (nil)
    (nil))

(insn 40 39 48 2 alltype.c:18 (set (reg:SI 0 ax [orig:77 D.3803 ] [77])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 48 40 51 2 alltype.c:19 (use (reg/i:SI 0 ax)) -1 (nil))

(note 51 48 0 NOTE_INSN_DELETED)
