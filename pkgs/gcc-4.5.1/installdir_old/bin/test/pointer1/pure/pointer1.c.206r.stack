
;; Function main (main)

(note 1 0 3 NOTE_INSN_DELETED)

(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 44 3 45 2 pointer1.c:6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0 S4 A8])
        (reg/f:SI 6 bp)) -1 (nil))

(insn/f 45 44 46 2 pointer1.c:6 (set (reg/f:SI 6 bp)
        (reg/f:SI 7 sp)) -1 (nil))

(insn/f 46 45 47 2 pointer1.c:6 (parallel [
            (set (reg/f:SI 7 sp)
                (and:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffff0])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn/f 47 46 48 2 pointer1.c:6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -32 [0xffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 48 47 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 48 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 pointer1.c:7 (set (reg/f:SI 0 ax [66])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 argv+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 6 5 7 2 pointer1.c:7 (set (reg/f:SI 1 dx [orig:58 D.3784 ] [58])
        (mem/f:SI (reg/f:SI 0 ax [66]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 7 6 8 2 pointer1.c:7 (set (reg/f:SI 0 ax [orig:59 D.3785 ] [59])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <string_cst 0xb7577134>)) 44 {*movsi_1} (nil))

(insn 8 7 9 2 pointer1.c:7 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1 dx [orig:58 D.3784 ] [58])) 44 {*movsi_1} (nil))

(insn 9 8 10 2 pointer1.c:7 (set (reg:SI 1 dx [67])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 argc+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 10 9 11 2 pointer1.c:7 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [67])) 44 {*movsi_1} (nil))

(insn 11 10 12 2 pointer1.c:7 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:59 D.3785 ] [59])) 44 {*movsi_1} (nil))

(call_insn 12 11 13 2 pointer1.c:7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb769ff00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) 697 {*call_value_0} (nil)
    (nil))

(insn 13 12 43 2 pointer1.c:9 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [0 i+0 S4 A64])
        (const_int 100 [0x64])) 44 {*movsi_1} (nil))

(insn 43 13 15 2 pointer1.c:10 (set (reg:SI 0 ax [68])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 24 [0x18]))) 196 {*lea_1} (nil))

(insn 15 43 16 2 pointer1.c:10 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [0 l+0 S4 A32])
        (reg:SI 0 ax [68])) 44 {*movsi_1} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 7 sp)
            (const_int 24 [0x18]))
        (nil)))

(insn 16 15 17 2 pointer1.c:12 (set (reg:SI 0 ax [orig:60 i.0 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 17 16 18 2 pointer1.c:12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:60 i.0 ] [60])
            (const_int 10 [0xa]))) 6 {*cmpsi_1} (nil))

(jump_insn 18 17 19 2 pointer1.c:12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 465 {*jcc_1} (nil)
 -> 29)

(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 pointer1.c:13 (set (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [0 i+0 S4 A64])
        (const_int 200 [0xc8])) 44 {*movsi_1} (nil))

(insn 21 20 22 3 pointer1.c:14 (set (reg/f:SI 0 ax [69])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [0 l+0 S4 A32])) 44 {*movsi_1} (nil))

(insn 22 21 23 3 pointer1.c:14 (set (reg:SI 2 cx [orig:61 D.3789 ] [61])
        (mem:SI (reg/f:SI 0 ax [69]) [0 S4 A32])) 44 {*movsi_1} (nil))

(insn 23 22 24 3 pointer1.c:14 (set (reg:SI 1 dx [orig:62 i.1 ] [62])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [0 i+0 S4 A64])) 44 {*movsi_1} (nil))

(insn 24 23 25 3 pointer1.c:14 (set (reg/f:SI 0 ax [orig:63 D.3791 ] [63])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <string_cst 0xb7577150>)) 44 {*movsi_1} (nil))

(insn 25 24 26 3 pointer1.c:14 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 2 cx [orig:61 D.3789 ] [61])) 44 {*movsi_1} (nil))

(insn 26 25 27 3 pointer1.c:14 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1 dx [orig:62 i.1 ] [62])) 44 {*movsi_1} (nil))

(insn 27 26 28 3 pointer1.c:14 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:63 D.3791 ] [63])) 44 {*movsi_1} (nil))

(call_insn 28 27 29 3 pointer1.c:14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0xb769ff00 printf>) [0 S1 A8])
            (const_int 12 [0xc]))) 697 {*call_value_0} (nil)
    (nil))

(code_label 29 28 30 4 2 "" [1 uses])

(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 39 4 pointer1.c:16 (set (reg:SI 0 ax [orig:64 D.3792 ] [64])
        (const_int 0 [0x0])) 44 {*movsi_1} (nil))

(insn 39 31 49 4 pointer1.c:17 (use (reg/i:SI 0 ax)) -1 (nil))

(note 49 39 50 4 NOTE_INSN_EPILOGUE_BEG)

(insn/f 50 49 51 4 pointer1.c:17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 6 bp)
                    (const_int 4 [0x4])))
            (set (reg/f:SI 6 bp)
                (mem:SI (reg/f:SI 6 bp) [0 S4 A8]))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_CFA_RESTORE (reg/f:SI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 6 bp)
                    (const_int 4 [0x4])))
            (nil))))

(jump_insn 51 50 52 4 pointer1.c:17 (return) -1 (nil))

(barrier 52 51 42)

(note 42 52 0 NOTE_INSN_DELETED)
starting the processing of deferred insns
ending the processing of deferred insns
