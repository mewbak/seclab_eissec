# Makefile.in generated by automake 1.10.1 from Makefile.am.
# interfaces/C/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Automake source file for the Parma Polyhedra Library.
# Copyright (C) 2001-2008 Roberto Bagnara <bagnara@cs.unipr.it>
#
# This file is part of the Parma Polyhedra Library (PPL).
#
# The PPL is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# The PPL is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1307, USA.
#
# For the most up-to-date information see the Parma Polyhedra Library
# site: http://www.cs.unipr.it/ppl/ .



pkgdatadir = $(datadir)/ppl
pkglibdir = $(libdir)/ppl
pkgincludedir = $(includedir)/ppl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = interfaces/C
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/ppl_c_version.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_ciao.m4 \
	$(top_srcdir)/m4/ac_check_fpu_control.m4 \
	$(top_srcdir)/m4/ac_check_gmp.m4 \
	$(top_srcdir)/m4/ac_check_sicstus_prolog.m4 \
	$(top_srcdir)/m4/ac_check_swi_prolog.m4 \
	$(top_srcdir)/m4/ac_check_xsb_prolog.m4 \
	$(top_srcdir)/m4/ac_cxx_attribute_weak.m4 \
	$(top_srcdir)/m4/ac_cxx_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_double_exact_output.m4 \
	$(top_srcdir)/m4/ac_cxx_flexible_arrays.m4 \
	$(top_srcdir)/m4/ac_cxx_float_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_float_exact_output.m4 \
	$(top_srcdir)/m4/ac_cxx_ieee_inexact_flag.m4 \
	$(top_srcdir)/m4/ac_cxx_limit_memory.m4 \
	$(top_srcdir)/m4/ac_cxx_long_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_long_double_exact_output.m4 \
	$(top_srcdir)/m4/ac_cxx_proper_long_double.m4 \
	$(top_srcdir)/m4/ac_cxx_remainder_bug.m4 \
	$(top_srcdir)/m4/ac_prog_jar.m4 \
	$(top_srcdir)/m4/ac_prog_java.m4 \
	$(top_srcdir)/m4/ac_prog_javac.m4 \
	$(top_srcdir)/m4/ac_prog_javah.m4 \
	$(top_srcdir)/m4/ac_text_md5sum.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = ppl_c_version.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am_libppl_c_la_OBJECTS = ppl_c_implementation_common.lo
nodist_libppl_c_la_OBJECTS =
libppl_c_la_OBJECTS = $(am_libppl_c_la_OBJECTS) \
	$(nodist_libppl_c_la_OBJECTS)
libppl_c_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libppl_c_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libppl_c_la_SOURCES) $(nodist_libppl_c_la_SOURCES) \
	$(nodist_EXTRA_libppl_c_la_SOURCES)
DIST_SOURCES = $(libppl_c_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
nodist_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(nodist_include_HEADERS) $(nodist_noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/missing --run aclocal-1.10
AMTAR = ${SHELL} /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/missing --run autoconf
AUTOHEADER = ${SHELL} /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/missing --run autoheader
AUTOMAKE = ${SHELL} /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -O2 -frounding-math  -W -Wall
CIAO_PROLOG = 
CIAO_PROLOG_INCLUDE_OPTIONS = 
CONFIGURE_OPTIONS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -O2 -frounding-math  -W -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GNU_PROLOG = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2010-11-19
JAR = no
JAVA = no
JAVAC = no
JAVAH = no
JNIFLAGS = -I -I/linux
LD = /usr/bin/ld
LDFLAGS = 
LIBEXT = a
LIBGMP = -lgmp
LIBGMPXX = -lgmpxx -lgmp
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBGMP = -lgmp
LTLIBGMPXX = -lgmpxx -lgmp
LTLIBOBJS = 
MAKEINFO = ${SHELL} /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/missing --run makeinfo
MD5SUM = md5sum
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OCAMLC = ocamlc
OTOOL = 
OTOOL64 = 
PACKAGE = ppl
PACKAGE_BUGREPORT = ppl-devel@cs.unipr.it
PACKAGE_NAME = the Parma Polyhedra Library
PACKAGE_STRING = the Parma Polyhedra Library 0.10
PACKAGE_TARNAME = ppl
PACKAGE_VERSION = 0.10
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PPL_VERSION_BETA = 0
PPL_VERSION_MAJOR = 0
PPL_VERSION_MINOR = 10
PPL_VERSION_REVISION = 0
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHREXT = .so
SICSTUS_PROLOG_INCLUDE_OPTIONS = 
STRIP = strip
SWI_PROLOG = 
SWI_PROLOG_INCLUDE_OPTIONS = 
SWI_PROLOG_LD_OPTIONS = 
TEXT_MD5SUM = md5sum -t
VALGRIND = 
VERSION = 0.10
XSB_PROLOG_INCLUDE_OPTIONS = 
YAP_PROLOG = 
abs_builddir = /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/interfaces/C
abs_srcdir = /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/interfaces/C
abs_top_builddir = /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10
abs_top_srcdir = /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
ciao_prolog = 
coefficient_mnemonic = mpz
datadir = ${datarootdir}
datarootdir = ${prefix}/share
debug_flag = -DNDEBUG=1
docdir = ${datadir}/doc/ppl
dvidir = ${docdir}
exec_prefix = ${prefix}
extra_includes = 
extra_libraries =  -lm -lgmpxx -lgmp
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ocamlc_root = /usr/lib/ocaml/3.10.2
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /media/work_stonybrook/labwork/gcc-4.5.1/ppl-0.10/installdir
program_transform_name = s,x,x,
psdir = ${docdir}
required_instantiations = Polyhedron@Grid@Rational_Box@BD_Shape<mpz_class>@BD_Shape<mpq_class>@Octagonal_Shape<mpz_class>@Octagonal_Shape<mpq_class>@Constraints_Product<C_Polyhedron,Grid>@Pointset_Powerset<C_Polyhedron>@Pointset_Powerset<NNC_Polyhedron>@Double_Box@BD_Shape<double>@Octagonal_Shape<double>
required_instantiations_c_cxx_headers = ppl_c_Polyhedron.hh ppl_c_Grid.hh ppl_c_Rational_Box.hh ppl_c_BD_Shape_mpz_class.hh ppl_c_BD_Shape_mpq_class.hh ppl_c_Octagonal_Shape_mpz_class.hh ppl_c_Octagonal_Shape_mpq_class.hh ppl_c_Constraints_Product_C_Polyhedron_Grid.hh ppl_c_Pointset_Powerset_C_Polyhedron.hh ppl_c_Pointset_Powerset_NNC_Polyhedron.hh ppl_c_Double_Box.hh ppl_c_BD_Shape_double.hh ppl_c_Octagonal_Shape_double.hh
required_instantiations_c_cxx_objects = ppl_c_Polyhedron.lo ppl_c_Grid.lo ppl_c_Rational_Box.lo ppl_c_BD_Shape_mpz_class.lo ppl_c_BD_Shape_mpq_class.lo ppl_c_Octagonal_Shape_mpz_class.lo ppl_c_Octagonal_Shape_mpq_class.lo ppl_c_Constraints_Product_C_Polyhedron_Grid.lo ppl_c_Pointset_Powerset_C_Polyhedron.lo ppl_c_Pointset_Powerset_NNC_Polyhedron.lo ppl_c_Double_Box.lo ppl_c_BD_Shape_double.lo ppl_c_Octagonal_Shape_double.lo
required_instantiations_c_cxx_sources = ppl_c_Polyhedron.cc ppl_c_Grid.cc ppl_c_Rational_Box.cc ppl_c_BD_Shape_mpz_class.cc ppl_c_BD_Shape_mpq_class.cc ppl_c_Octagonal_Shape_mpz_class.cc ppl_c_Octagonal_Shape_mpq_class.cc ppl_c_Constraints_Product_C_Polyhedron_Grid.cc ppl_c_Pointset_Powerset_C_Polyhedron.cc ppl_c_Pointset_Powerset_NNC_Polyhedron.cc ppl_c_Double_Box.cc ppl_c_BD_Shape_double.cc ppl_c_Octagonal_Shape_double.cc
required_instantiations_canonical_names = Polyhedron@Grid@Rational_Box@BD_Shape_mpz_class@BD_Shape_mpq_class@Octagonal_Shape_mpz_class@Octagonal_Shape_mpq_class@Constraints_Product_C_Polyhedron_Grid@Pointset_Powerset_C_Polyhedron@Pointset_Powerset_NNC_Polyhedron@Double_Box@BD_Shape_double@Octagonal_Shape_double
required_instantiations_java_classes = Polyhedron.class C_Polyhedron.class NNC_Polyhedron.class Grid.class Rational_Box.class BD_Shape_mpz_class.class BD_Shape_mpq_class.class Octagonal_Shape_mpz_class.class Octagonal_Shape_mpq_class.class Constraints_Product_C_Polyhedron_Grid.class Pointset_Powerset_C_Polyhedron.class Pointset_Powerset_C_Polyhedron_Iterator.class Pointset_Powerset_NNC_Polyhedron.class Pointset_Powerset_NNC_Polyhedron_Iterator.class Double_Box.class BD_Shape_double.class Octagonal_Shape_double.class
required_instantiations_java_cxx_headers = parma_polyhedra_library.Polyhedron parma_polyhedra_library.C_Polyhedron parma_polyhedra_library.NNC_Polyhedron parma_polyhedra_library.Grid parma_polyhedra_library.Rational_Box parma_polyhedra_library.BD_Shape_mpz_class parma_polyhedra_library.BD_Shape_mpq_class parma_polyhedra_library.Octagonal_Shape_mpz_class parma_polyhedra_library.Octagonal_Shape_mpq_class parma_polyhedra_library.Constraints_Product_C_Polyhedron_Grid parma_polyhedra_library.Pointset_Powerset_C_Polyhedron parma_polyhedra_library.Pointset_Powerset_C_Polyhedron_Iterator parma_polyhedra_library.Pointset_Powerset_NNC_Polyhedron parma_polyhedra_library.Pointset_Powerset_NNC_Polyhedron_Iterator parma_polyhedra_library.Double_Box parma_polyhedra_library.BD_Shape_double parma_polyhedra_library.Octagonal_Shape_double
required_instantiations_java_cxx_headers_sources = parma_polyhedra_library_Polyhedron.h parma_polyhedra_library_C_Polyhedron.h parma_polyhedra_library_NNC_Polyhedron.h parma_polyhedra_library_Grid.h parma_polyhedra_library_Rational_Box.h parma_polyhedra_library_BD_Shape_mpz_class.h parma_polyhedra_library_BD_Shape_mpq_class.h parma_polyhedra_library_Octagonal_Shape_mpz_class.h parma_polyhedra_library_Octagonal_Shape_mpq_class.h parma_polyhedra_library_Constraints_Product_C_Polyhedron_Grid.h parma_polyhedra_library_Pointset_Powerset_C_Polyhedron.h parma_polyhedra_library_Pointset_Powerset_C_Polyhedron_Iterator.h parma_polyhedra_library_Pointset_Powerset_NNC_Polyhedron.h parma_polyhedra_library_Pointset_Powerset_NNC_Polyhedron_Iterator.h parma_polyhedra_library_Double_Box.h parma_polyhedra_library_BD_Shape_double.h parma_polyhedra_library_Octagonal_Shape_double.h
required_instantiations_java_cxx_objects = ppl_java_Polyhedron.lo ppl_java_Grid.lo ppl_java_Rational_Box.lo ppl_java_BD_Shape_mpz_class.lo ppl_java_BD_Shape_mpq_class.lo ppl_java_Octagonal_Shape_mpz_class.lo ppl_java_Octagonal_Shape_mpq_class.lo ppl_java_Constraints_Product_C_Polyhedron_Grid.lo ppl_java_Pointset_Powerset_C_Polyhedron.lo ppl_java_Pointset_Powerset_NNC_Polyhedron.lo ppl_java_Double_Box.lo ppl_java_BD_Shape_double.lo ppl_java_Octagonal_Shape_double.lo
required_instantiations_java_cxx_sources = ppl_java_Polyhedron.cc ppl_java_Grid.cc ppl_java_Rational_Box.cc ppl_java_BD_Shape_mpz_class.cc ppl_java_BD_Shape_mpq_class.cc ppl_java_Octagonal_Shape_mpz_class.cc ppl_java_Octagonal_Shape_mpq_class.cc ppl_java_Constraints_Product_C_Polyhedron_Grid.cc ppl_java_Pointset_Powerset_C_Polyhedron.cc ppl_java_Pointset_Powerset_NNC_Polyhedron.cc ppl_java_Double_Box.cc ppl_java_BD_Shape_double.cc ppl_java_Octagonal_Shape_double.cc
required_instantiations_java_sources = Polyhedron.java C_Polyhedron.java NNC_Polyhedron.java Grid.java Rational_Box.java BD_Shape_mpz_class.java BD_Shape_mpq_class.java Octagonal_Shape_mpz_class.java Octagonal_Shape_mpq_class.java Constraints_Product_C_Polyhedron_Grid.java Pointset_Powerset_C_Polyhedron.java Pointset_Powerset_C_Polyhedron_Iterator.java Pointset_Powerset_NNC_Polyhedron.java Pointset_Powerset_NNC_Polyhedron_Iterator.java Double_Box.java BD_Shape_double.java Octagonal_Shape_double.java
required_instantiations_ocaml_cxx_headers = ppl_ocaml_Polyhedron.hh ppl_ocaml_Grid.hh ppl_ocaml_Rational_Box.hh ppl_ocaml_BD_Shape_mpz_class.hh ppl_ocaml_BD_Shape_mpq_class.hh ppl_ocaml_Octagonal_Shape_mpz_class.hh ppl_ocaml_Octagonal_Shape_mpq_class.hh ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.hh ppl_ocaml_Pointset_Powerset_C_Polyhedron.hh ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.hh ppl_ocaml_Double_Box.hh ppl_ocaml_BD_Shape_double.hh ppl_ocaml_Octagonal_Shape_double.hh
required_instantiations_ocaml_cxx_objects = ppl_ocaml_Polyhedron.o ppl_ocaml_Grid.o ppl_ocaml_Rational_Box.o ppl_ocaml_BD_Shape_mpz_class.o ppl_ocaml_BD_Shape_mpq_class.o ppl_ocaml_Octagonal_Shape_mpz_class.o ppl_ocaml_Octagonal_Shape_mpq_class.o ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.o ppl_ocaml_Pointset_Powerset_C_Polyhedron.o ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.o ppl_ocaml_Double_Box.o ppl_ocaml_BD_Shape_double.o ppl_ocaml_Octagonal_Shape_double.o
required_instantiations_ocaml_cxx_sources = ppl_ocaml_Polyhedron.cc ppl_ocaml_Grid.cc ppl_ocaml_Rational_Box.cc ppl_ocaml_BD_Shape_mpz_class.cc ppl_ocaml_BD_Shape_mpq_class.cc ppl_ocaml_Octagonal_Shape_mpz_class.cc ppl_ocaml_Octagonal_Shape_mpq_class.cc ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.cc ppl_ocaml_Pointset_Powerset_C_Polyhedron.cc ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.cc ppl_ocaml_Double_Box.cc ppl_ocaml_BD_Shape_double.cc ppl_ocaml_Octagonal_Shape_double.cc
required_instantiations_prolog_cxx_headers = ppl_prolog_Polyhedron.hh ppl_prolog_Grid.hh ppl_prolog_Rational_Box.hh ppl_prolog_BD_Shape_mpz_class.hh ppl_prolog_BD_Shape_mpq_class.hh ppl_prolog_Octagonal_Shape_mpz_class.hh ppl_prolog_Octagonal_Shape_mpq_class.hh ppl_prolog_Constraints_Product_C_Polyhedron_Grid.hh ppl_prolog_Pointset_Powerset_C_Polyhedron.hh ppl_prolog_Pointset_Powerset_NNC_Polyhedron.hh ppl_prolog_Double_Box.hh ppl_prolog_BD_Shape_double.hh ppl_prolog_Octagonal_Shape_double.hh
required_instantiations_prolog_cxx_objects = ppl_prolog_Polyhedron.lo ppl_prolog_Grid.lo ppl_prolog_Rational_Box.lo ppl_prolog_BD_Shape_mpz_class.lo ppl_prolog_BD_Shape_mpq_class.lo ppl_prolog_Octagonal_Shape_mpz_class.lo ppl_prolog_Octagonal_Shape_mpq_class.lo ppl_prolog_Constraints_Product_C_Polyhedron_Grid.lo ppl_prolog_Pointset_Powerset_C_Polyhedron.lo ppl_prolog_Pointset_Powerset_NNC_Polyhedron.lo ppl_prolog_Double_Box.lo ppl_prolog_BD_Shape_double.lo ppl_prolog_Octagonal_Shape_double.lo
required_instantiations_prolog_cxx_sources = ppl_prolog_Polyhedron.cc ppl_prolog_Grid.cc ppl_prolog_Rational_Box.cc ppl_prolog_BD_Shape_mpz_class.cc ppl_prolog_BD_Shape_mpq_class.cc ppl_prolog_Octagonal_Shape_mpz_class.cc ppl_prolog_Octagonal_Shape_mpq_class.cc ppl_prolog_Constraints_Product_C_Polyhedron_Grid.cc ppl_prolog_Pointset_Powerset_C_Polyhedron.cc ppl_prolog_Pointset_Powerset_NNC_Polyhedron.cc ppl_prolog_Double_Box.cc ppl_prolog_BD_Shape_double.cc ppl_prolog_Octagonal_Shape_double.cc
required_instantiations_prolog_generated_test_sources = ppl_prolog_generated_test_Polyhedron.pl ppl_prolog_generated_test_Grid.pl ppl_prolog_generated_test_Rational_Box.pl ppl_prolog_generated_test_BD_Shape_mpz_class.pl ppl_prolog_generated_test_BD_Shape_mpq_class.pl ppl_prolog_generated_test_Octagonal_Shape_mpz_class.pl ppl_prolog_generated_test_Octagonal_Shape_mpq_class.pl ppl_prolog_generated_test_Constraints_Product_C_Polyhedron_Grid.pl ppl_prolog_generated_test_Pointset_Powerset_C_Polyhedron.pl ppl_prolog_generated_test_Pointset_Powerset_NNC_Polyhedron.pl ppl_prolog_generated_test_Double_Box.pl ppl_prolog_generated_test_BD_Shape_double.pl ppl_prolog_generated_test_Octagonal_Shape_double.pl
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sicstus_prolog = 
srcdir = .
subdirs =  Watchdog
swi_prolog = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
uudecode = 
xsb_prolog = 
SUBDIRS = . tests
interface_generator_files = \
ppl_interface_generator_c_procedure_generators.m4 \
ppl_interface_generator_c_h.m4 \
ppl_interface_generator_c_h_code.m4 \
ppl_interface_generator_c_cc_files.m4 \
ppl_interface_generator_c_hh_files.m4 \
ppl_interface_generator_c_cc_code.m4

EXTRA_DIST = \
$(interface_generator_files) \
ppl_c_header.h \
C_interface.dox


# Libtool -version-info for libppl_c.la.
#
#  1. Start with version information of `0:0:0' for each Libtool library.
#
#  2. Update the version information only immediately before a public
#     release of your software.  More frequent updates are unnecessary,
#     and only guarantee that the current interface number gets larger
#     faster.
#
#  3. If the library source code has changed at all since the last
#     update, then increment REVISION (`C:R:A' becomes `C:r+1:A').
#
#  4. If any interfaces have been added, removed, or changed since the
#     last update, increment CURRENT, and set REVISION to 0.
#
#  5. If any interfaces have been added since the last public release,
#     then increment AGE.
#
#  6. If any interfaces have been removed since the last public release,
#     then set AGE to 0.
#
#	PPL release		-version-info
#	    0.1			    -----
#	    0.2			    -----
#	    0.3			    -----
#	    0.4			    0:0:0
#	    0.5			    1:0:1
#	    0.6			    1:0:1
#	    0.6.1		    1:0:1
#	    0.7			    1:0:1
#	    0.8			    1:0:1
#	    0.9			    1:0:1
#	    0.10		    2:0:0
LIBPPL_C_LT_CURRENT = 2
LIBPPL_C_LT_REVISION = 0
LIBPPL_C_LT_AGE = 0
BUILT_SOURCES = \
ppl_c.h \
ppl_c_implementation_domains.hh \
ppl_c_implementation_domains.cc.stamp

interface_generator_dependencies = \
$(top_builddir)/interfaces/ppl_interface_instantiations.m4 \
../ppl_interface_generator_common.m4 \
../ppl_interface_generator_common_dat.m4 \
../ppl_interface_generator_copyright \
../ppl_interface_generator_common_procedure_generators.m4 \
$(interface_generator_files)

AM_CPPFLAGS = \
-I$(top_srcdir)/interfaces \
-I$(top_builddir)/interfaces/C \
-I$(top_builddir)/src \


lib_LTLIBRARIES = libppl_c.la
libppl_c_la_SOURCES = \
ppl_c_implementation_common.defs.hh \
ppl_c_implementation_common.inlines.hh \
ppl_c_implementation_common.cc

nodist_libppl_c_la_SOURCES = 
nodist_EXTRA_libppl_c_la_SOURCES = \
ppl_c_Int8_Box.cc \
ppl_c_Int16_Box.cc \
ppl_c_Int32_Box.cc \
ppl_c_Int64_Box.cc \
ppl_c_Uint8_Box.cc \
ppl_c_Uint16_Box.cc \
ppl_c_Uint32_Box.cc \
ppl_c_Uint64_Box.cc \
ppl_c_Float_Box.cc \
ppl_c_Double_Box.cc \
ppl_c_Long_Double_Box.cc \
ppl_c_Rational_Box.cc \
ppl_c_Z_Box.cc \
ppl_c_BD_Shape_int8_t.cc \
ppl_c_BD_Shape_int16_t.cc \
ppl_c_BD_Shape_int32_t.cc \
ppl_c_BD_Shape_int64_t.cc \
ppl_c_BD_Shape_float.cc \
ppl_c_BD_Shape_double.cc \
ppl_c_BD_Shape_long_double.cc \
ppl_c_BD_Shape_mpq_class.cc \
ppl_c_BD_Shape_mpz_class.cc \
ppl_c_Octagonal_Shape_int8_t.cc \
ppl_c_Octagonal_Shape_int16_t.cc \
ppl_c_Octagonal_Shape_int32_t.cc \
ppl_c_Octagonal_Shape_int64_t.cc \
ppl_c_Octagonal_Shape_float.cc \
ppl_c_Octagonal_Shape_double.cc \
ppl_c_Octagonal_Shape_long_double.cc \
ppl_c_Octagonal_Shape_mpq_class.cc \
ppl_c_Octagonal_Shape_mpz_class.cc \
ppl_c_Polyhedron.cc \
ppl_c_Grid.cc \
ppl_c_Pointset_Powerset_Int8_Box.cc \
ppl_c_Pointset_Powerset_Int16_Box.cc \
ppl_c_Pointset_Powerset_Int32_Box.cc \
ppl_c_Pointset_Powerset_Int64_Box.cc \
ppl_c_Pointset_Powerset_Uint8_Box.cc \
ppl_c_Pointset_Powerset_Uint16_Box.cc \
ppl_c_Pointset_Powerset_Uint32_Box.cc \
ppl_c_Pointset_Powerset_Uint64_Box.cc \
ppl_c_Pointset_Powerset_Float_Box.cc \
ppl_c_Pointset_Powerset_Double_Box.cc \
ppl_c_Pointset_Powerset_Long_Double_Box.cc \
ppl_c_Pointset_Powerset_Rational_Box.cc \
ppl_c_Pointset_Powerset_Z_Box.cc \
ppl_c_Pointset_Powerset_BD_Shape_int8_t.cc \
ppl_c_Pointset_Powerset_BD_Shape_int16_t.cc \
ppl_c_Pointset_Powerset_BD_Shape_int32_t.cc \
ppl_c_Pointset_Powerset_BD_Shape_int64_t.cc \
ppl_c_Pointset_Powerset_BD_Shape_float.cc \
ppl_c_Pointset_Powerset_BD_Shape_double.cc \
ppl_c_Pointset_Powerset_BD_Shape_long_double.cc \
ppl_c_Pointset_Powerset_BD_Shape_mpq_class.cc \
ppl_c_Pointset_Powerset_BD_Shape_mpz_class.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_int8_t.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_int16_t.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_int32_t.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_int64_t.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_float.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_double.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_long_double.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_mpq_class.cc \
ppl_c_Pointset_Powerset_Octagonal_Shape_mpz_class.cc \
ppl_c_Pointset_Powerset_C_Polyhedron.cc \
ppl_c_Pointset_Powerset_NNC_Polyhedron.cc \
ppl_c_Pointset_Powerset_Grid.cc \
ppl_c_Constraints_Product_C_Polyhedron_Grid.cc \
ppl_c_Constraints_Product_NNC_Polyhedron_Grid.cc \
ppl_c_Constraints_Product_Grid_C_Polyhedron.cc \
ppl_c_Constraints_Product_Grid_NNC_Polyhedron.cc

#NO_UNDEFINED_FLAG = -no-undefined
libppl_c_la_LIBADD = \
ppl_c_Polyhedron.lo ppl_c_Grid.lo ppl_c_Rational_Box.lo ppl_c_BD_Shape_mpz_class.lo ppl_c_BD_Shape_mpq_class.lo ppl_c_Octagonal_Shape_mpz_class.lo ppl_c_Octagonal_Shape_mpq_class.lo ppl_c_Constraints_Product_C_Polyhedron_Grid.lo ppl_c_Pointset_Powerset_C_Polyhedron.lo ppl_c_Pointset_Powerset_NNC_Polyhedron.lo ppl_c_Double_Box.lo ppl_c_BD_Shape_double.lo ppl_c_Octagonal_Shape_double.lo \
$(top_builddir)/src/libppl.la \
 -lm -lgmpxx -lgmp

libppl_c_la_DEPENDENCIES = \
ppl_c_Polyhedron.lo ppl_c_Grid.lo ppl_c_Rational_Box.lo ppl_c_BD_Shape_mpz_class.lo ppl_c_BD_Shape_mpq_class.lo ppl_c_Octagonal_Shape_mpz_class.lo ppl_c_Octagonal_Shape_mpq_class.lo ppl_c_Constraints_Product_C_Polyhedron_Grid.lo ppl_c_Pointset_Powerset_C_Polyhedron.lo ppl_c_Pointset_Powerset_NNC_Polyhedron.lo ppl_c_Double_Box.lo ppl_c_BD_Shape_double.lo ppl_c_Octagonal_Shape_double.lo

libppl_c_la_LDFLAGS = \
$(NO_UNDEFINED_FLAG) \
-version-info $(LIBPPL_C_LT_CURRENT):$(LIBPPL_C_LT_REVISION):$(LIBPPL_C_LT_AGE)

nodist_include_HEADERS = ppl_c.h
nodist_noinst_HEADERS = \
ppl_c_domains.h \
ppl_c_version.h

MOSTLYCLEANFILES = \
ppl_c_Polyhedron.lo ppl_c_Grid.lo ppl_c_Rational_Box.lo ppl_c_BD_Shape_mpz_class.lo ppl_c_BD_Shape_mpq_class.lo ppl_c_Octagonal_Shape_mpz_class.lo ppl_c_Octagonal_Shape_mpq_class.lo ppl_c_Constraints_Product_C_Polyhedron_Grid.lo ppl_c_Pointset_Powerset_C_Polyhedron.lo ppl_c_Pointset_Powerset_NNC_Polyhedron.lo ppl_c_Double_Box.lo ppl_c_BD_Shape_double.lo ppl_c_Octagonal_Shape_double.lo

CLEANFILES = \
ppl_c_Polyhedron.cc ppl_c_Grid.cc ppl_c_Rational_Box.cc ppl_c_BD_Shape_mpz_class.cc ppl_c_BD_Shape_mpq_class.cc ppl_c_Octagonal_Shape_mpz_class.cc ppl_c_Octagonal_Shape_mpq_class.cc ppl_c_Constraints_Product_C_Polyhedron_Grid.cc ppl_c_Pointset_Powerset_C_Polyhedron.cc ppl_c_Pointset_Powerset_NNC_Polyhedron.cc ppl_c_Double_Box.cc ppl_c_BD_Shape_double.cc ppl_c_Octagonal_Shape_double.cc \
ppl_c_Polyhedron.hh ppl_c_Grid.hh ppl_c_Rational_Box.hh ppl_c_BD_Shape_mpz_class.hh ppl_c_BD_Shape_mpq_class.hh ppl_c_Octagonal_Shape_mpz_class.hh ppl_c_Octagonal_Shape_mpq_class.hh ppl_c_Constraints_Product_C_Polyhedron_Grid.hh ppl_c_Pointset_Powerset_C_Polyhedron.hh ppl_c_Pointset_Powerset_NNC_Polyhedron.hh ppl_c_Double_Box.hh ppl_c_BD_Shape_double.hh ppl_c_Octagonal_Shape_double.hh \
ppl_c.h \
ppl_c_domains.h \
ppl_c_implementation_domains.hh \
ppl_c_implementation_domains.cc.stamp

DISTCLEANFILES = \
ppl_c_version.h

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  interfaces/C/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  interfaces/C/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
ppl_c_version.h: $(top_builddir)/config.status $(srcdir)/ppl_c_version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libppl_c.la: $(libppl_c_la_OBJECTS) $(libppl_c_la_DEPENDENCIES) 
	$(libppl_c_la_LINK) -rpath $(libdir) $(libppl_c_la_OBJECTS) $(libppl_c_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ppl_c_BD_Shape_double.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_float.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_int16_t.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_int32_t.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_int64_t.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_int8_t.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_long_double.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_mpq_class.Plo
include ./$(DEPDIR)/ppl_c_BD_Shape_mpz_class.Plo
include ./$(DEPDIR)/ppl_c_Constraints_Product_C_Polyhedron_Grid.Plo
include ./$(DEPDIR)/ppl_c_Constraints_Product_Grid_C_Polyhedron.Plo
include ./$(DEPDIR)/ppl_c_Constraints_Product_Grid_NNC_Polyhedron.Plo
include ./$(DEPDIR)/ppl_c_Constraints_Product_NNC_Polyhedron_Grid.Plo
include ./$(DEPDIR)/ppl_c_Double_Box.Plo
include ./$(DEPDIR)/ppl_c_Float_Box.Plo
include ./$(DEPDIR)/ppl_c_Grid.Plo
include ./$(DEPDIR)/ppl_c_Int16_Box.Plo
include ./$(DEPDIR)/ppl_c_Int32_Box.Plo
include ./$(DEPDIR)/ppl_c_Int64_Box.Plo
include ./$(DEPDIR)/ppl_c_Int8_Box.Plo
include ./$(DEPDIR)/ppl_c_Long_Double_Box.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_double.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_float.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_int16_t.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_int32_t.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_int64_t.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_int8_t.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_long_double.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_mpq_class.Plo
include ./$(DEPDIR)/ppl_c_Octagonal_Shape_mpz_class.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_double.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_float.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_int16_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_int32_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_int64_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_int8_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_long_double.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_mpq_class.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_BD_Shape_mpz_class.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_C_Polyhedron.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Double_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Float_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Grid.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Int16_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Int32_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Int64_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Int8_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Long_Double_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_NNC_Polyhedron.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_double.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_float.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_int16_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_int32_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_int64_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_int8_t.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_long_double.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_mpq_class.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Octagonal_Shape_mpz_class.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Rational_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Uint16_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Uint32_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Uint64_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Uint8_Box.Plo
include ./$(DEPDIR)/ppl_c_Pointset_Powerset_Z_Box.Plo
include ./$(DEPDIR)/ppl_c_Polyhedron.Plo
include ./$(DEPDIR)/ppl_c_Rational_Box.Plo
include ./$(DEPDIR)/ppl_c_Uint16_Box.Plo
include ./$(DEPDIR)/ppl_c_Uint32_Box.Plo
include ./$(DEPDIR)/ppl_c_Uint64_Box.Plo
include ./$(DEPDIR)/ppl_c_Uint8_Box.Plo
include ./$(DEPDIR)/ppl_c_Z_Box.Plo
include ./$(DEPDIR)/ppl_c_implementation_common.Plo

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nodist_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-nodist_includeHEADERS

install-dvi: install-dvi-recursive

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-nodist_includeHEADERS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-nodist_includeHEADERS


ppl_c.h: ppl_c_header.h ppl_c_version.h ppl_c_domains.h Makefile $(top_builddir)/utils/build_header
	$(top_builddir)/utils/build_header \
		-I $(top_builddir)/interfaces/C \
		$(top_srcdir)/interfaces/C/ppl_c_header.h >$@

ppl_c_domains.h: $(interface_generator_dependencies)
	m4 --prefix-builtin -I.. -I$(srcdir) -I$(srcdir)/.. \
           $(srcdir)/ppl_interface_generator_c_h.m4 > $@

ppl_c_implementation_domains.cc.stamp: $(interface_generator_dependencies)
	m4 --prefix-builtin -I.. -I$(srcdir) -I$(srcdir)/.. \
           $(srcdir)/ppl_interface_generator_c_cc_files.m4 \
                > ppl_c_cc_blob
	$(top_srcdir)/utils/cm_cleaner.sh < ppl_c_cc_blob
	$(top_srcdir)/utils/cm_splitter.sh < ppl_c_cc_blob
	rm -f ppl_c_cc_blob
	echo timestamp >$@

ppl_c_implementation_domains.hh: $(interface_generator_dependencies)
	m4 --prefix-builtin -I.. -I$(srcdir) -I$(srcdir)/.. \
           $(srcdir)/ppl_interface_generator_c_hh_files.m4 \
                > ppl_c_hh_blob
	$(top_srcdir)/utils/cm_cleaner.sh < ppl_c_hh_blob
	$(top_srcdir)/utils/cm_splitter.sh < ppl_c_hh_blob
	rm -f ppl_c_hh_blob
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
