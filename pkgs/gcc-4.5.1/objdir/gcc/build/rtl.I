# 1 "../../gcc/rtl.c"
# 1 "/home/niranjan/labwork/gcc-4.5.1/objdir/gcc//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "../../gcc/rtl.c"
# 24 "../../gcc/rtl.c"
# 1 "./bconfig.h" 1


# 1 "./auto-host.h" 1
# 4 "./bconfig.h" 2

# 1 "../../gcc/../include/ansidecl.h" 1
# 6 "./bconfig.h" 2
# 25 "../../gcc/rtl.c" 2




# 1 "../../gcc/system.h" 1
# 28 "../../gcc/system.h"
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 102 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 29 "../../gcc/system.h" 2
# 39 "../../gcc/system.h"
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 150 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 212 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 3 4
typedef unsigned int size_t;
# 324 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 3 4
typedef int wchar_t;
# 40 "../../gcc/system.h" 2


# 1 "/usr/include/stdio.h" 1 3 4
# 28 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 324 "/usr/include/features.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/predefs.h" 1 3 4
# 325 "/usr/include/features.h" 2 3 4
# 357 "/usr/include/features.h" 3 4
# 1 "/usr/include/i386-linux-gnu/sys/cdefs.h" 1 3 4
# 378 "/usr/include/i386-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/wordsize.h" 1 3 4
# 379 "/usr/include/i386-linux-gnu/sys/cdefs.h" 2 3 4
# 358 "/usr/include/features.h" 2 3 4
# 389 "/usr/include/features.h" 3 4
# 1 "/usr/include/i386-linux-gnu/gnu/stubs.h" 1 3 4



# 1 "/usr/include/i386-linux-gnu/bits/wordsize.h" 1 3 4
# 5 "/usr/include/i386-linux-gnu/gnu/stubs.h" 2 3 4


# 1 "/usr/include/i386-linux-gnu/gnu/stubs-32.h" 1 3 4
# 8 "/usr/include/i386-linux-gnu/gnu/stubs.h" 2 3 4
# 390 "/usr/include/features.h" 2 3 4
# 29 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 35 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/i386-linux-gnu/bits/types.h" 1 3 4
# 28 "/usr/include/i386-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/wordsize.h" 1 3 4
# 29 "/usr/include/i386-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 131 "/usr/include/i386-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/typesizes.h" 1 3 4
# 132 "/usr/include/i386-linux-gnu/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef long int __swblk_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;

__extension__ typedef int __ssize_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 37 "/usr/include/stdio.h" 2 3 4
# 45 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 65 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 75 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 32 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 83 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4

typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 53 "/usr/include/_G_config.h" 3 4
typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));
typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));
# 33 "/usr/include/libio.h" 2 3 4
# 172 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 182 "/usr/include/libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 205 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 273 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 321 "/usr/include/libio.h" 3 4
  __off64_t _offset;
# 330 "/usr/include/libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 366 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);







extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 462 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 492 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 76 "/usr/include/stdio.h" 2 3 4
# 91 "/usr/include/stdio.h" 3 4
typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __ssize_t ssize_t;







typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 165 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/stdio_lim.h" 1 3 4
# 166 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (__const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (__const char *__old, __const char *__new) __attribute__ ((__nothrow__ , __leaf__));




extern int renameat (int __oldfd, __const char *__old, int __newfd,
       __const char *__new) __attribute__ ((__nothrow__ , __leaf__));








extern FILE *tmpfile (void) ;
# 206 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
# 228 "/usr/include/stdio.h" 3 4
extern char *tempnam (__const char *__dir, __const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 253 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 263 "/usr/include/stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (__const char *__restrict __filename,
      __const char *__restrict __modes) ;




extern FILE *freopen (__const char *__restrict __filename,
        __const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 296 "/usr/include/stdio.h" 3 4


extern FILE *fopen64 (__const char *__restrict __filename,
        __const char *__restrict __modes) ;
extern FILE *freopen64 (__const char *__restrict __filename,
   __const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, __const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     __const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) __attribute__ ((__nothrow__ , __leaf__)) ;




extern FILE *fmemopen (void *__s, size_t __len, __const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));








extern int fprintf (FILE *__restrict __stream,
      __const char *__restrict __format, ...);




extern int printf (__const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      __const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (__const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, __const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, __const char *__restrict __f,
        __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         __const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       __const char *__restrict __fmt, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3))) ;
# 418 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, __const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, __const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     __const char *__restrict __format, ...) ;




extern int scanf (__const char *__restrict __format, ...) ;

extern int sscanf (__const char *__restrict __s,
     __const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 469 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, __const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (__const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (__const char *__restrict __s,
      __const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 528 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 556 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 567 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 600 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;






extern char *gets (char *__s) ;

# 646 "/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 662 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (__const char *__restrict __s, FILE *__restrict __stream);





extern int puts (__const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (__const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 723 "/usr/include/stdio.h" 3 4
extern int fputs_unlocked (__const char *__restrict __s,
      FILE *__restrict __stream);
# 734 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (__const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 770 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 789 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, __const fpos_t *__pos);
# 812 "/usr/include/stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, __const fpos64_t *__pos);




extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;








extern void perror (__const char *__s);






# 1 "/usr/include/i386-linux-gnu/bits/sys_errlist.h" 1 3 4
# 27 "/usr/include/i386-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern __const char *__const sys_errlist[];


extern int _sys_nerr;
extern __const char *__const _sys_errlist[];
# 851 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 870 "/usr/include/stdio.h" 3 4
extern FILE *popen (__const char *__command, __const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      __const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       __const char *__restrict __format,
       __gnuc_va_list __args)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 940 "/usr/include/stdio.h" 3 4

# 43 "../../gcc/system.h" 2
# 183 "../../gcc/system.h"
# 1 "../../gcc/../include/safe-ctype.h" 1
# 57 "../../gcc/../include/safe-ctype.h"
enum {

  _sch_isblank = 0x0001,
  _sch_iscntrl = 0x0002,
  _sch_isdigit = 0x0004,
  _sch_islower = 0x0008,
  _sch_isprint = 0x0010,
  _sch_ispunct = 0x0020,
  _sch_isspace = 0x0040,
  _sch_isupper = 0x0080,
  _sch_isxdigit = 0x0100,


  _sch_isidst = 0x0200,
  _sch_isvsp = 0x0400,
  _sch_isnvsp = 0x0800,


  _sch_isalpha = _sch_isupper|_sch_islower,
  _sch_isalnum = _sch_isalpha|_sch_isdigit,
  _sch_isidnum = _sch_isidst|_sch_isdigit,
  _sch_isgraph = _sch_isalnum|_sch_ispunct,
  _sch_iscppsp = _sch_isvsp|_sch_isnvsp,
  _sch_isbasic = _sch_isprint|_sch_iscppsp

};


extern const unsigned short _sch_istable[256];
# 110 "../../gcc/../include/safe-ctype.h"
extern const unsigned char _sch_toupper[256];
extern const unsigned char _sch_tolower[256];
# 122 "../../gcc/../include/safe-ctype.h"
# 1 "/usr/include/ctype.h" 1 3 4
# 30 "/usr/include/ctype.h" 3 4

# 41 "/usr/include/ctype.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/endian.h" 1 3 4
# 38 "/usr/include/endian.h" 2 3 4
# 61 "/usr/include/endian.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/byteswap.h" 1 3 4
# 62 "/usr/include/endian.h" 2 3 4
# 42 "/usr/include/ctype.h" 2 3 4






enum
{
  _ISupper = ((0) < 8 ? ((1 << (0)) << 8) : ((1 << (0)) >> 8)),
  _ISlower = ((1) < 8 ? ((1 << (1)) << 8) : ((1 << (1)) >> 8)),
  _ISalpha = ((2) < 8 ? ((1 << (2)) << 8) : ((1 << (2)) >> 8)),
  _ISdigit = ((3) < 8 ? ((1 << (3)) << 8) : ((1 << (3)) >> 8)),
  _ISxdigit = ((4) < 8 ? ((1 << (4)) << 8) : ((1 << (4)) >> 8)),
  _ISspace = ((5) < 8 ? ((1 << (5)) << 8) : ((1 << (5)) >> 8)),
  _ISprint = ((6) < 8 ? ((1 << (6)) << 8) : ((1 << (6)) >> 8)),
  _ISgraph = ((7) < 8 ? ((1 << (7)) << 8) : ((1 << (7)) >> 8)),
  _ISblank = ((8) < 8 ? ((1 << (8)) << 8) : ((1 << (8)) >> 8)),
  _IScntrl = ((9) < 8 ? ((1 << (9)) << 8) : ((1 << (9)) >> 8)),
  _ISpunct = ((10) < 8 ? ((1 << (10)) << 8) : ((1 << (10)) >> 8)),
  _ISalnum = ((11) < 8 ? ((1 << (11)) << 8) : ((1 << (11)) >> 8))
};
# 81 "/usr/include/ctype.h" 3 4
extern __const unsigned short int **__ctype_b_loc (void)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const));
extern __const __int32_t **__ctype_tolower_loc (void)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const));
extern __const __int32_t **__ctype_toupper_loc (void)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const));
# 106 "/usr/include/ctype.h" 3 4






extern int isalnum (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isalpha (int) __attribute__ ((__nothrow__ , __leaf__));
extern int iscntrl (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isdigit (int) __attribute__ ((__nothrow__ , __leaf__));
extern int islower (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isgraph (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isprint (int) __attribute__ ((__nothrow__ , __leaf__));
extern int ispunct (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isspace (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isupper (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isxdigit (int) __attribute__ ((__nothrow__ , __leaf__));



extern int tolower (int __c) __attribute__ ((__nothrow__ , __leaf__));


extern int toupper (int __c) __attribute__ ((__nothrow__ , __leaf__));








extern int isblank (int) __attribute__ ((__nothrow__ , __leaf__));






extern int isctype (int __c, int __mask) __attribute__ ((__nothrow__ , __leaf__));






extern int isascii (int __c) __attribute__ ((__nothrow__ , __leaf__));



extern int toascii (int __c) __attribute__ ((__nothrow__ , __leaf__));



extern int _toupper (int) __attribute__ ((__nothrow__ , __leaf__));
extern int _tolower (int) __attribute__ ((__nothrow__ , __leaf__));
# 259 "/usr/include/ctype.h" 3 4
# 1 "/usr/include/xlocale.h" 1 3 4
# 28 "/usr/include/xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 260 "/usr/include/ctype.h" 2 3 4
# 273 "/usr/include/ctype.h" 3 4
extern int isalnum_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isalpha_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int iscntrl_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isdigit_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int islower_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isgraph_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isprint_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int ispunct_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isspace_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isupper_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isxdigit_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));

extern int isblank_l (int, __locale_t) __attribute__ ((__nothrow__ , __leaf__));



extern int __tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
extern int tolower_l (int __c, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));


extern int __toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
extern int toupper_l (int __c, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
# 349 "/usr/include/ctype.h" 3 4

# 123 "../../gcc/../include/safe-ctype.h" 2
# 184 "../../gcc/system.h" 2

# 1 "/usr/include/i386-linux-gnu/sys/types.h" 1 3 4
# 28 "/usr/include/i386-linux-gnu/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;
# 99 "/usr/include/i386-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;
# 116 "/usr/include/i386-linux-gnu/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;
# 133 "/usr/include/i386-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 58 "/usr/include/time.h" 3 4


typedef __clock_t clock_t;



# 74 "/usr/include/time.h" 3 4


typedef __time_t time_t;



# 92 "/usr/include/time.h" 3 4
typedef __clockid_t clockid_t;
# 104 "/usr/include/time.h" 3 4
typedef __timer_t timer_t;
# 134 "/usr/include/i386-linux-gnu/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 148 "/usr/include/i386-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 195 "/usr/include/i386-linux-gnu/sys/types.h" 3 4
typedef int int8_t __attribute__ ((__mode__ (__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef int int64_t __attribute__ ((__mode__ (__DI__)));


typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 220 "/usr/include/i386-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/i386-linux-gnu/sys/select.h" 1 3 4
# 31 "/usr/include/i386-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/select.h" 1 3 4
# 32 "/usr/include/i386-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/i386-linux-gnu/bits/sigset.h" 1 3 4
# 24 "/usr/include/i386-linux-gnu/bits/sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 35 "/usr/include/i386-linux-gnu/sys/select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "/usr/include/time.h" 1 3 4
# 120 "/usr/include/time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    long int tv_nsec;
  };
# 45 "/usr/include/i386-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/i386-linux-gnu/bits/time.h" 1 3 4
# 31 "/usr/include/i386-linux-gnu/bits/time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 47 "/usr/include/i386-linux-gnu/sys/select.h" 2 3 4
# 55 "/usr/include/i386-linux-gnu/sys/select.h" 3 4
typedef long int __fd_mask;
# 65 "/usr/include/i386-linux-gnu/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 97 "/usr/include/i386-linux-gnu/sys/select.h" 3 4

# 107 "/usr/include/i386-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 119 "/usr/include/i386-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 132 "/usr/include/i386-linux-gnu/sys/select.h" 3 4

# 221 "/usr/include/i386-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/i386-linux-gnu/sys/sysmacros.h" 1 3 4
# 30 "/usr/include/i386-linux-gnu/sys/sysmacros.h" 3 4


__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 64 "/usr/include/i386-linux-gnu/sys/sysmacros.h" 3 4

# 224 "/usr/include/i386-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 263 "/usr/include/i386-linux-gnu/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;





# 1 "/usr/include/i386-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 36 "/usr/include/i386-linux-gnu/bits/pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


typedef union
{
  char __size[36];
  long int __align;
} pthread_attr_t;


typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;




typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;


    int __kind;
    unsigned int __nusers;
    __extension__ union
    {
      int __spins;
      __pthread_slist_t __list;
    };
  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;


    unsigned char __flags;
    unsigned char __shared;
    unsigned char __pad1;
    unsigned char __pad2;
    int __writer;
  } __data;
  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 272 "/usr/include/i386-linux-gnu/sys/types.h" 2 3 4



# 186 "../../gcc/system.h" 2

# 1 "/usr/include/errno.h" 1 3 4
# 32 "/usr/include/errno.h" 3 4




# 1 "/usr/include/i386-linux-gnu/bits/errno.h" 1 3 4
# 25 "/usr/include/i386-linux-gnu/bits/errno.h" 3 4
# 1 "/usr/include/linux/errno.h" 1 3 4



# 1 "/usr/include/i386-linux-gnu/asm/errno.h" 1 3 4
# 1 "/usr/include/asm-generic/errno.h" 1 3 4



# 1 "/usr/include/asm-generic/errno-base.h" 1 3 4
# 5 "/usr/include/asm-generic/errno.h" 2 3 4
# 1 "/usr/include/i386-linux-gnu/asm/errno.h" 2 3 4
# 5 "/usr/include/linux/errno.h" 2 3 4
# 26 "/usr/include/i386-linux-gnu/bits/errno.h" 2 3 4
# 47 "/usr/include/i386-linux-gnu/bits/errno.h" 3 4
extern int *__errno_location (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 37 "/usr/include/errno.h" 2 3 4
# 55 "/usr/include/errno.h" 3 4
extern char *program_invocation_name, *program_invocation_short_name;




# 69 "/usr/include/errno.h" 3 4
typedef int error_t;
# 188 "../../gcc/system.h" 2
# 198 "../../gcc/system.h"
# 1 "/usr/include/string.h" 1 3 4
# 29 "/usr/include/string.h" 3 4





# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 35 "/usr/include/string.h" 2 3 4









extern void *memcpy (void *__restrict __dest,
       __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, __const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, __const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 95 "/usr/include/string.h" 3 4
extern void *memchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 109 "/usr/include/string.h" 3 4
extern void *rawmemchr (__const void *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 120 "/usr/include/string.h" 3 4
extern void *memrchr (__const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern char *strcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, __const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

# 165 "/usr/include/string.h" 3 4
extern int strcoll_l (__const char *__s1, __const char *__s2, __locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, __const char *__src, size_t __n,
    __locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (__const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (__const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 210 "/usr/include/string.h" 3 4

# 235 "/usr/include/string.h" 3 4
extern char *strchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 262 "/usr/include/string.h" 3 4
extern char *strrchr (__const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


# 276 "/usr/include/string.h" 3 4
extern char *strchrnul (__const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern size_t strcspn (__const char *__s, __const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 314 "/usr/include/string.h" 3 4
extern char *strpbrk (__const char *__s, __const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 342 "/usr/include/string.h" 3 4
extern char *strstr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, __const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    __const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, __const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 373 "/usr/include/string.h" 3 4
extern char *strcasestr (__const char *__haystack, __const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));







extern void *memmem (__const void *__haystack, size_t __haystacklen,
       __const void *__needle, size_t __needlelen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        __const void *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (__const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (__const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));

# 438 "/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern char *strerror_l (int __errnum, __locale_t __l) __attribute__ ((__nothrow__ , __leaf__));





extern void __bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern void bcopy (__const void *__src, void *__dest, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int bcmp (__const void *__s1, __const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 489 "/usr/include/string.h" 3 4
extern char *index (__const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 517 "/usr/include/string.h" 3 4
extern char *rindex (__const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));

__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int strcasecmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (__const char *__s1, __const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (__const char *__s1, __const char *__s2,
    __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (__const char *__s1, __const char *__s2,
     size_t __n, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       __const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, __const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        __const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (__const char *__s1, __const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 606 "/usr/include/string.h" 3 4
extern char *basename (__const char *__filename) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 646 "/usr/include/string.h" 3 4

# 199 "../../gcc/system.h" 2
# 1 "/usr/include/strings.h" 1 3 4
# 200 "../../gcc/system.h" 2
# 211 "../../gcc/system.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 33 "/usr/include/stdlib.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 34 "/usr/include/stdlib.h" 2 3 4








# 1 "/usr/include/i386-linux-gnu/bits/waitflags.h" 1 3 4
# 43 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/i386-linux-gnu/bits/waitstatus.h" 1 3 4
# 67 "/usr/include/i386-linux-gnu/bits/waitstatus.h" 3 4
union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 44 "/usr/include/stdlib.h" 2 3 4
# 68 "/usr/include/stdlib.h" 3 4
typedef union
  {
    union wait *__uptr;
    int *__iptr;
  } __WAIT_STATUS __attribute__ ((__transparent_union__));
# 96 "/usr/include/stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 140 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;




extern double atof (__const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (__const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (__const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (__const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (__const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;





extern float strtof (__const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

extern long double strtold (__const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;





extern long int strtol (__const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

extern unsigned long int strtoul (__const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




__extension__
extern long long int strtoq (__const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

__extension__
extern unsigned long long int strtouq (__const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;





__extension__
extern long long int strtoll (__const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

__extension__
extern unsigned long long int strtoull (__const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;

# 240 "/usr/include/stdlib.h" 3 4
extern long int strtol_l (__const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 4))) ;

extern unsigned long int strtoul_l (__const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 4))) ;

__extension__
extern long long int strtoll_l (__const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 4))) ;

__extension__
extern unsigned long long int strtoull_l (__const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 4))) ;

extern double strtod_l (__const char *__restrict __nptr,
   char **__restrict __endptr, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3))) ;

extern float strtof_l (__const char *__restrict __nptr,
         char **__restrict __endptr, __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3))) ;

extern long double strtold_l (__const char *__restrict __nptr,
         char **__restrict __endptr,
         __locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3))) ;
# 311 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern long int a64l (__const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
# 327 "/usr/include/stdlib.h" 3 4
extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));




extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    unsigned long long int __a;
  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));









extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));




extern void cfree (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/alloca.h" 1 3 4
# 25 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 26 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 498 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 528 "/usr/include/stdlib.h" 3 4
extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));







extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));







extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));






extern char *getenv (__const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




extern char *__secure_getenv (__const char *__name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;





extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (__const char *__name, __const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (__const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 606 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 620 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 630 "/usr/include/stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 642 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 652 "/usr/include/stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 663 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 674 "/usr/include/stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 684 "/usr/include/stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 694 "/usr/include/stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 706 "/usr/include/stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;









extern int system (__const char *__command) ;






extern char *canonicalize_file_name (__const char *__name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 734 "/usr/include/stdlib.h" 3 4
extern char *realpath (__const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) ;






typedef int (*__compar_fn_t) (__const void *, __const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (__const void *, __const void *, void *);





extern void *bsearch (__const void *__key, __const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;



extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;

# 808 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));







extern int mblen (__const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int mbtowc (wchar_t *__restrict __pwc,
     __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__)) ;



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   __const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   __const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));








extern int rpmatch (__const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 896 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *__const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;





extern void setkey (__const char *__key) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) __attribute__ ((__nothrow__ , __leaf__));



extern int unlockpt (int __fd) __attribute__ ((__nothrow__ , __leaf__));




extern char *ptsname (int __fd) __attribute__ ((__nothrow__ , __leaf__)) ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 964 "/usr/include/stdlib.h" 3 4

# 212 "../../gcc/system.h" 2
# 236 "../../gcc/system.h"
# 1 "/usr/include/unistd.h" 1 3 4
# 28 "/usr/include/unistd.h" 3 4

# 203 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/posix_opt.h" 1 3 4
# 204 "/usr/include/unistd.h" 2 3 4



# 1 "/usr/include/i386-linux-gnu/bits/environments.h" 1 3 4
# 208 "/usr/include/unistd.h" 2 3 4
# 227 "/usr/include/unistd.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 228 "/usr/include/unistd.h" 2 3 4
# 268 "/usr/include/unistd.h" 3 4
typedef __intptr_t intptr_t;






typedef __socklen_t socklen_t;
# 288 "/usr/include/unistd.h" 3 4
extern int access (__const char *__name, int __type) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int euidaccess (__const char *__name, int __type)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int eaccess (__const char *__name, int __type)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int faccessat (int __fd, __const char *__file, int __type, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;
# 335 "/usr/include/unistd.h" 3 4
extern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__ , __leaf__));
# 346 "/usr/include/unistd.h" 3 4
extern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)
     __attribute__ ((__nothrow__ , __leaf__));






extern int close (int __fd);






extern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;





extern ssize_t write (int __fd, __const void *__buf, size_t __n) ;
# 377 "/usr/include/unistd.h" 3 4
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes,
        __off_t __offset) ;






extern ssize_t pwrite (int __fd, __const void *__buf, size_t __n,
         __off_t __offset) ;
# 405 "/usr/include/unistd.h" 3 4
extern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,
   __off64_t __offset) ;


extern ssize_t pwrite64 (int __fd, __const void *__buf, size_t __n,
    __off64_t __offset) ;







extern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int pipe2 (int __pipedes[2], int __flags) __attribute__ ((__nothrow__ , __leaf__)) ;
# 433 "/usr/include/unistd.h" 3 4
extern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__ , __leaf__));
# 445 "/usr/include/unistd.h" 3 4
extern unsigned int sleep (unsigned int __seconds);







extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     __attribute__ ((__nothrow__ , __leaf__));






extern int usleep (__useconds_t __useconds);
# 470 "/usr/include/unistd.h" 3 4
extern int pause (void);



extern int chown (__const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int lchown (__const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;






extern int fchownat (int __fd, __const char *__file, __uid_t __owner,
       __gid_t __group, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;



extern int chdir (__const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern int fchdir (int __fd) __attribute__ ((__nothrow__ , __leaf__)) ;
# 512 "/usr/include/unistd.h" 3 4
extern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__ , __leaf__)) ;





extern char *get_current_dir_name (void) __attribute__ ((__nothrow__ , __leaf__));







extern char *getwd (char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;




extern int dup (int __fd) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__ , __leaf__));




extern int dup3 (int __fd, int __fd2, int __flags) __attribute__ ((__nothrow__ , __leaf__));



extern char **__environ;

extern char **environ;





extern int execve (__const char *__path, char *__const __argv[],
     char *__const __envp[]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int fexecve (int __fd, char *__const __argv[], char *__const __envp[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern int execv (__const char *__path, char *__const __argv[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execle (__const char *__path, __const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execl (__const char *__path, __const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execvp (__const char *__file, char *__const __argv[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int execlp (__const char *__file, __const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int execvpe (__const char *__file, char *__const __argv[],
      char *__const __envp[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int nice (int __inc) __attribute__ ((__nothrow__ , __leaf__)) ;




extern void _exit (int __status) __attribute__ ((__noreturn__));





# 1 "/usr/include/i386-linux-gnu/bits/confname.h" 1 3 4
# 26 "/usr/include/i386-linux-gnu/bits/confname.h" 3 4
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX,

    _PC_2_SYMLINKS

  };


enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,




    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,



    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG,


    _SC_LEVEL1_ICACHE_SIZE,

    _SC_LEVEL1_ICACHE_ASSOC,

    _SC_LEVEL1_ICACHE_LINESIZE,

    _SC_LEVEL1_DCACHE_SIZE,

    _SC_LEVEL1_DCACHE_ASSOC,

    _SC_LEVEL1_DCACHE_LINESIZE,

    _SC_LEVEL2_CACHE_SIZE,

    _SC_LEVEL2_CACHE_ASSOC,

    _SC_LEVEL2_CACHE_LINESIZE,

    _SC_LEVEL3_CACHE_SIZE,

    _SC_LEVEL3_CACHE_ASSOC,

    _SC_LEVEL3_CACHE_LINESIZE,

    _SC_LEVEL4_CACHE_SIZE,

    _SC_LEVEL4_CACHE_ASSOC,

    _SC_LEVEL4_CACHE_LINESIZE,



    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,

    _SC_RAW_SOCKETS,


    _SC_V7_ILP32_OFF32,

    _SC_V7_ILP32_OFFBIG,

    _SC_V7_LP64_OFF64,

    _SC_V7_LPBIG_OFFBIG,


    _SC_SS_REPL_MAX,


    _SC_TRACE_EVENT_NAME_MAX,

    _SC_TRACE_NAME_MAX,

    _SC_TRACE_SYS_MAX,

    _SC_TRACE_USER_EVENT_MAX,


    _SC_XOPEN_STREAMS,


    _SC_THREAD_ROBUST_PRIO_INHERIT,

    _SC_THREAD_ROBUST_PRIO_PROTECT

  };


enum
  {
    _CS_PATH,


    _CS_V6_WIDTH_RESTRICTED_ENVS,



    _CS_GNU_LIBC_VERSION,

    _CS_GNU_LIBPTHREAD_VERSION,


    _CS_V5_WIDTH_RESTRICTED_ENVS,



    _CS_V7_WIDTH_RESTRICTED_ENVS,



    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,


    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V7_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LIBS,

    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V7_LP64_OFF64_CFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LIBS,

    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,


    _CS_V6_ENV,

    _CS_V7_ENV

  };
# 611 "/usr/include/unistd.h" 2 3 4


extern long int pathconf (__const char *__path, int __name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__ , __leaf__));


extern long int sysconf (int __name) __attribute__ ((__nothrow__ , __leaf__));



extern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__ , __leaf__));




extern __pid_t getpid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t getppid (void) __attribute__ ((__nothrow__ , __leaf__));




extern __pid_t getpgrp (void) __attribute__ ((__nothrow__ , __leaf__));
# 647 "/usr/include/unistd.h" 3 4
extern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));

extern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));






extern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__ , __leaf__));
# 673 "/usr/include/unistd.h" 3 4
extern int setpgrp (void) __attribute__ ((__nothrow__ , __leaf__));
# 690 "/usr/include/unistd.h" 3 4
extern __pid_t setsid (void) __attribute__ ((__nothrow__ , __leaf__));



extern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));



extern __uid_t getuid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __uid_t geteuid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __gid_t getgid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __gid_t getegid (void) __attribute__ ((__nothrow__ , __leaf__));




extern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__ , __leaf__)) ;



extern int group_member (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__));






extern int setuid (__uid_t __uid) __attribute__ ((__nothrow__ , __leaf__));




extern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__ , __leaf__));




extern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__ , __leaf__));






extern int setgid (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__));




extern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__ , __leaf__));




extern int setegid (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__));





extern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)
     __attribute__ ((__nothrow__ , __leaf__));



extern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)
     __attribute__ ((__nothrow__ , __leaf__));



extern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)
     __attribute__ ((__nothrow__ , __leaf__));



extern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)
     __attribute__ ((__nothrow__ , __leaf__));






extern __pid_t fork (void) __attribute__ ((__nothrow__));







extern __pid_t vfork (void) __attribute__ ((__nothrow__ , __leaf__));





extern char *ttyname (int __fd) __attribute__ ((__nothrow__ , __leaf__));



extern int ttyname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;



extern int isatty (int __fd) __attribute__ ((__nothrow__ , __leaf__));





extern int ttyslot (void) __attribute__ ((__nothrow__ , __leaf__));




extern int link (__const char *__from, __const char *__to)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) ;




extern int linkat (int __fromfd, __const char *__from, int __tofd,
     __const char *__to, int __flags)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4))) ;




extern int symlink (__const char *__from, __const char *__to)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) ;




extern ssize_t readlink (__const char *__restrict __path,
    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) ;




extern int symlinkat (__const char *__from, int __tofd,
        __const char *__to) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3))) ;


extern ssize_t readlinkat (int __fd, __const char *__restrict __path,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3))) ;



extern int unlink (__const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int unlinkat (int __fd, __const char *__name, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern int rmdir (__const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__ , __leaf__));


extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__ , __leaf__));






extern char *getlogin (void);







extern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));




extern int setlogin (__const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 894 "/usr/include/unistd.h" 3 4
# 1 "../../gcc/../include/getopt.h" 1 3 4
# 36 "../../gcc/../include/getopt.h" 3 4
extern char *optarg;
# 50 "../../gcc/../include/getopt.h" 3 4
extern int optind;




extern int opterr;



extern int optopt;
# 82 "../../gcc/../include/getopt.h" 3 4
struct option
{

  const char *name;





  int has_arg;
  int *flag;
  int val;
};
# 113 "../../gcc/../include/getopt.h" 3 4
extern int getopt (int argc, char *const *argv, const char *shortopts);







extern int getopt_long (int argc, char *const *argv, const char *shortopts,
          const struct option *longopts, int *longind);
extern int getopt_long_only (int argc, char *const *argv,
        const char *shortopts,
               const struct option *longopts, int *longind);


extern int _getopt_internal (int argc, char *const *argv,
        const char *shortopts,
               const struct option *longopts, int *longind,
        int long_only);
# 895 "/usr/include/unistd.h" 2 3 4







extern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int sethostname (__const char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern int sethostid (long int __id) __attribute__ ((__nothrow__ , __leaf__)) ;





extern int getdomainname (char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
extern int setdomainname (__const char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;





extern int vhangup (void) __attribute__ ((__nothrow__ , __leaf__));


extern int revoke (__const char *__file) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;







extern int profil (unsigned short int *__sample_buffer, size_t __size,
     size_t __offset, unsigned int __scale)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int acct (__const char *__name) __attribute__ ((__nothrow__ , __leaf__));



extern char *getusershell (void) __attribute__ ((__nothrow__ , __leaf__));
extern void endusershell (void) __attribute__ ((__nothrow__ , __leaf__));
extern void setusershell (void) __attribute__ ((__nothrow__ , __leaf__));





extern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__ , __leaf__)) ;






extern int chroot (__const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern char *getpass (__const char *__prompt) __attribute__ ((__nonnull__ (1)));
# 980 "/usr/include/unistd.h" 3 4
extern int fsync (int __fd);






extern int syncfs (int __fd) __attribute__ ((__nothrow__ , __leaf__));






extern long int gethostid (void);


extern void sync (void) __attribute__ ((__nothrow__ , __leaf__));





extern int getpagesize (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int getdtablesize (void) __attribute__ ((__nothrow__ , __leaf__));
# 1018 "/usr/include/unistd.h" 3 4
extern int truncate (__const char *__file, __off_t __length)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 1030 "/usr/include/unistd.h" 3 4
extern int truncate64 (__const char *__file, __off64_t __length)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 1040 "/usr/include/unistd.h" 3 4
extern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__ , __leaf__)) ;
# 1050 "/usr/include/unistd.h" 3 4
extern int ftruncate64 (int __fd, __off64_t __length) __attribute__ ((__nothrow__ , __leaf__)) ;
# 1061 "/usr/include/unistd.h" 3 4
extern int brk (void *__addr) __attribute__ ((__nothrow__ , __leaf__)) ;





extern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__ , __leaf__));
# 1082 "/usr/include/unistd.h" 3 4
extern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__ , __leaf__));
# 1105 "/usr/include/unistd.h" 3 4
extern int lockf (int __fd, int __cmd, __off_t __len) ;
# 1115 "/usr/include/unistd.h" 3 4
extern int lockf64 (int __fd, int __cmd, __off64_t __len) ;
# 1136 "/usr/include/unistd.h" 3 4
extern int fdatasync (int __fildes);







extern char *crypt (__const char *__key, __const char *__salt)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern void encrypt (char *__libc_block, int __edflag) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern void swab (__const void *__restrict __from, void *__restrict __to,
    ssize_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));







extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 1174 "/usr/include/unistd.h" 3 4

# 237 "../../gcc/system.h" 2



# 1 "/usr/include/i386-linux-gnu/sys/param.h" 1 3 4
# 27 "/usr/include/i386-linux-gnu/sys/param.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 1 3 4
# 34 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 1 3 4
# 169 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 145 "/usr/include/limits.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/posix1_lim.h" 1 3 4
# 157 "/usr/include/i386-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/local_lim.h" 1 3 4
# 39 "/usr/include/i386-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 40 "/usr/include/i386-linux-gnu/bits/local_lim.h" 2 3 4
# 158 "/usr/include/i386-linux-gnu/bits/posix1_lim.h" 2 3 4
# 146 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/i386-linux-gnu/bits/posix2_lim.h" 1 3 4
# 150 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/i386-linux-gnu/bits/xopen_lim.h" 1 3 4
# 34 "/usr/include/i386-linux-gnu/bits/xopen_lim.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/stdio_lim.h" 1 3 4
# 35 "/usr/include/i386-linux-gnu/bits/xopen_lim.h" 2 3 4
# 154 "/usr/include/limits.h" 2 3 4
# 170 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 2 3 4
# 8 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 2 3 4
# 28 "/usr/include/i386-linux-gnu/sys/param.h" 2 3 4

# 1 "/usr/include/linux/param.h" 1 3 4



# 1 "/usr/include/i386-linux-gnu/asm/param.h" 1 3 4
# 1 "/usr/include/asm-generic/param.h" 1 3 4
# 1 "/usr/include/i386-linux-gnu/asm/param.h" 2 3 4
# 5 "/usr/include/linux/param.h" 2 3 4
# 30 "/usr/include/i386-linux-gnu/sys/param.h" 2 3 4
# 241 "../../gcc/system.h" 2





# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include-fixed/limits.h" 1 3 4
# 247 "../../gcc/system.h" 2



# 1 "../../gcc/hwint.h" 1
# 251 "../../gcc/system.h" 2
# 280 "../../gcc/system.h"
# 1 "/usr/include/i386-linux-gnu/sys/time.h" 1 3 4
# 27 "/usr/include/i386-linux-gnu/sys/time.h" 3 4
# 1 "/usr/include/time.h" 1 3 4
# 28 "/usr/include/i386-linux-gnu/sys/time.h" 2 3 4

# 1 "/usr/include/i386-linux-gnu/bits/time.h" 1 3 4
# 30 "/usr/include/i386-linux-gnu/sys/time.h" 2 3 4
# 39 "/usr/include/i386-linux-gnu/sys/time.h" 3 4

# 57 "/usr/include/i386-linux-gnu/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };

typedef struct timezone *__restrict __timezone_ptr_t;
# 73 "/usr/include/i386-linux-gnu/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    __timezone_ptr_t __tz) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int settimeofday (__const struct timeval *__tv,
    __const struct timezone *__tz)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int adjtime (__const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__ , __leaf__));




enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };




typedef enum __itimer_which __itimer_which_t;






extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__ , __leaf__));




extern int setitimer (__itimer_which_t __which,
        __const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__ , __leaf__));




extern int utimes (__const char *__file, __const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int lutimes (__const char *__file, __const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, __const struct timeval __tvp[2]) __attribute__ ((__nothrow__ , __leaf__));






extern int futimesat (int __fd, __const char *__file,
        __const struct timeval __tvp[2]) __attribute__ ((__nothrow__ , __leaf__));
# 191 "/usr/include/i386-linux-gnu/sys/time.h" 3 4

# 281 "../../gcc/system.h" 2
# 1 "/usr/include/time.h" 1 3 4
# 30 "/usr/include/time.h" 3 4








# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 39 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/i386-linux-gnu/bits/time.h" 1 3 4
# 86 "/usr/include/i386-linux-gnu/bits/time.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/timex.h" 1 3 4
# 24 "/usr/include/i386-linux-gnu/bits/timex.h" 3 4
struct timex
{
  unsigned int modes;
  long int offset;
  long int freq;
  long int maxerror;
  long int esterror;
  int status;
  long int constant;
  long int precision;
  long int tolerance;
  struct timeval time;
  long int tick;

  long int ppsfreq;
  long int jitter;
  int shift;
  long int stabil;
  long int jitcnt;
  long int calcnt;
  long int errcnt;
  long int stbcnt;

  int tai;


  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32;
};
# 87 "/usr/include/i386-linux-gnu/bits/time.h" 2 3 4




extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) __attribute__ ((__nothrow__ , __leaf__));


# 43 "/usr/include/time.h" 2 3 4
# 131 "/usr/include/time.h" 3 4


struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  __const char *tm_zone;




};








struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };


struct sigevent;
# 180 "/usr/include/time.h" 3 4



extern clock_t clock (void) __attribute__ ((__nothrow__ , __leaf__));


extern time_t time (time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));


extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   __const char *__restrict __format,
   __const struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *strptime (__const char *__restrict __s,
         __const char *__restrict __fmt, struct tm *__tp)
     __attribute__ ((__nothrow__ , __leaf__));







extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     __const char *__restrict __format,
     __const struct tm *__restrict __tp,
     __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));



extern char *strptime_l (__const char *__restrict __s,
    __const char *__restrict __fmt, struct tm *__tp,
    __locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));






extern struct tm *gmtime (__const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime (__const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));





extern struct tm *gmtime_r (__const time_t *__restrict __timer,
       struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime_r (__const time_t *__restrict __timer,
          struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));





extern char *asctime (__const struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime (__const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));







extern char *asctime_r (__const struct tm *__restrict __tp,
   char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));


extern char *ctime_r (__const time_t *__restrict __timer,
        char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) __attribute__ ((__nothrow__ , __leaf__));



extern int daylight;
extern long int timezone;





extern int stime (__const time_t *__when) __attribute__ ((__nothrow__ , __leaf__));
# 313 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int dysize (int __year) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 328 "/usr/include/time.h" 3 4
extern int nanosleep (__const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_settime (clockid_t __clock_id, __const struct timespec *__tp)
     __attribute__ ((__nothrow__ , __leaf__));






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       __const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__ , __leaf__));




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_settime (timer_t __timerid, int __flags,
     __const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__ , __leaf__));


extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));
# 390 "/usr/include/time.h" 3 4
extern int getdate_err;
# 399 "/usr/include/time.h" 3 4
extern struct tm *getdate (__const char *__string);
# 413 "/usr/include/time.h" 3 4
extern int getdate_r (__const char *__restrict __string,
        struct tm *__restrict __resbufp);



# 282 "../../gcc/system.h" 2
# 293 "../../gcc/system.h"
# 1 "/usr/include/fcntl.h" 1 3 4
# 30 "/usr/include/fcntl.h" 3 4




# 1 "/usr/include/i386-linux-gnu/bits/fcntl.h" 1 3 4
# 27 "/usr/include/i386-linux-gnu/bits/fcntl.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/uio.h" 1 3 4
# 44 "/usr/include/i386-linux-gnu/bits/uio.h" 3 4
struct iovec
  {
    void *iov_base;
    size_t iov_len;
  };
# 28 "/usr/include/i386-linux-gnu/bits/fcntl.h" 2 3 4
# 153 "/usr/include/i386-linux-gnu/bits/fcntl.h" 3 4
struct flock
  {
    short int l_type;
    short int l_whence;

    __off_t l_start;
    __off_t l_len;




    __pid_t l_pid;
  };


struct flock64
  {
    short int l_type;
    short int l_whence;
    __off64_t l_start;
    __off64_t l_len;
    __pid_t l_pid;
  };




enum __pid_type
  {
    F_OWNER_TID = 0,
    F_OWNER_PID,
    F_OWNER_PGRP,
    F_OWNER_GID = F_OWNER_PGRP
  };


struct f_owner_ex
  {
    enum __pid_type type;
    __pid_t pid;
  };
# 239 "/usr/include/i386-linux-gnu/bits/fcntl.h" 3 4
struct file_handle
{
  unsigned int handle_bytes;
  int handle_type;

  unsigned char f_handle[0];
};
# 266 "/usr/include/i386-linux-gnu/bits/fcntl.h" 3 4





extern ssize_t readahead (int __fd, __off64_t __offset, size_t __count)
    __attribute__ ((__nothrow__ , __leaf__));



extern int sync_file_range (int __fd, __off64_t __offset, __off64_t __count,
       unsigned int __flags);






extern ssize_t vmsplice (int __fdout, const struct iovec *__iov,
    size_t __count, unsigned int __flags);





extern ssize_t splice (int __fdin, __off64_t *__offin, int __fdout,
         __off64_t *__offout, size_t __len,
         unsigned int __flags);





extern ssize_t tee (int __fdin, int __fdout, size_t __len,
      unsigned int __flags);






extern int fallocate (int __fd, int __mode, __off_t __offset, __off_t __len);
# 318 "/usr/include/i386-linux-gnu/bits/fcntl.h" 3 4
extern int fallocate64 (int __fd, int __mode, __off64_t __offset,
   __off64_t __len);




extern int name_to_handle_at (int __dfd, const char *__name,
         struct file_handle *__handle, int *__mnt_id,
         int __flags) __attribute__ ((__nothrow__ , __leaf__));





extern int open_by_handle_at (int __mountdirfd, struct file_handle *__handle,
         int __flags);




# 35 "/usr/include/fcntl.h" 2 3 4






# 1 "/usr/include/i386-linux-gnu/bits/stat.h" 1 3 4
# 39 "/usr/include/i386-linux-gnu/bits/stat.h" 3 4
struct stat
  {
    __dev_t st_dev;
    unsigned short int __pad1;

    __ino_t st_ino;



    __mode_t st_mode;
    __nlink_t st_nlink;
    __uid_t st_uid;
    __gid_t st_gid;
    __dev_t st_rdev;
    unsigned short int __pad2;

    __off_t st_size;



    __blksize_t st_blksize;


    __blkcnt_t st_blocks;
# 73 "/usr/include/i386-linux-gnu/bits/stat.h" 3 4
    struct timespec st_atim;
    struct timespec st_mtim;
    struct timespec st_ctim;
# 88 "/usr/include/i386-linux-gnu/bits/stat.h" 3 4
    unsigned long int __unused4;
    unsigned long int __unused5;



  };


struct stat64
  {
    __dev_t st_dev;
    unsigned int __pad1;

    __ino_t __st_ino;
    __mode_t st_mode;
    __nlink_t st_nlink;
    __uid_t st_uid;
    __gid_t st_gid;
    __dev_t st_rdev;
    unsigned int __pad2;
    __off64_t st_size;
    __blksize_t st_blksize;

    __blkcnt64_t st_blocks;







    struct timespec st_atim;
    struct timespec st_mtim;
    struct timespec st_ctim;
# 130 "/usr/include/i386-linux-gnu/bits/stat.h" 3 4
    __ino64_t st_ino;
  };
# 42 "/usr/include/fcntl.h" 2 3 4
# 110 "/usr/include/fcntl.h" 3 4
extern int fcntl (int __fd, int __cmd, ...);
# 119 "/usr/include/fcntl.h" 3 4
extern int open (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));
# 129 "/usr/include/fcntl.h" 3 4
extern int open64 (__const char *__file, int __oflag, ...) __attribute__ ((__nonnull__ (1)));
# 143 "/usr/include/fcntl.h" 3 4
extern int openat (int __fd, __const char *__file, int __oflag, ...)
     __attribute__ ((__nonnull__ (2)));
# 154 "/usr/include/fcntl.h" 3 4
extern int openat64 (int __fd, __const char *__file, int __oflag, ...)
     __attribute__ ((__nonnull__ (2)));
# 165 "/usr/include/fcntl.h" 3 4
extern int creat (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));
# 175 "/usr/include/fcntl.h" 3 4
extern int creat64 (__const char *__file, __mode_t __mode) __attribute__ ((__nonnull__ (1)));
# 211 "/usr/include/fcntl.h" 3 4
extern int posix_fadvise (int __fd, __off_t __offset, __off_t __len,
     int __advise) __attribute__ ((__nothrow__ , __leaf__));
# 223 "/usr/include/fcntl.h" 3 4
extern int posix_fadvise64 (int __fd, __off64_t __offset, __off64_t __len,
       int __advise) __attribute__ ((__nothrow__ , __leaf__));
# 233 "/usr/include/fcntl.h" 3 4
extern int posix_fallocate (int __fd, __off_t __offset, __off_t __len);
# 244 "/usr/include/fcntl.h" 3 4
extern int posix_fallocate64 (int __fd, __off64_t __offset, __off64_t __len);
# 255 "/usr/include/fcntl.h" 3 4

# 294 "../../gcc/system.h" 2
# 331 "../../gcc/system.h"
# 1 "/usr/include/i386-linux-gnu/sys/wait.h" 1 3 4
# 29 "/usr/include/i386-linux-gnu/sys/wait.h" 3 4


# 1 "/usr/include/signal.h" 1 3 4
# 31 "/usr/include/signal.h" 3 4


# 1 "/usr/include/i386-linux-gnu/bits/sigset.h" 1 3 4
# 104 "/usr/include/i386-linux-gnu/bits/sigset.h" 3 4
extern int __sigismember (__const __sigset_t *, int);
extern int __sigaddset (__sigset_t *, int);
extern int __sigdelset (__sigset_t *, int);
# 34 "/usr/include/signal.h" 2 3 4







typedef __sig_atomic_t sig_atomic_t;

# 58 "/usr/include/signal.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/signum.h" 1 3 4
# 59 "/usr/include/signal.h" 2 3 4
# 79 "/usr/include/signal.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/siginfo.h" 1 3 4
# 25 "/usr/include/i386-linux-gnu/bits/siginfo.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/wordsize.h" 1 3 4
# 26 "/usr/include/i386-linux-gnu/bits/siginfo.h" 2 3 4







typedef union sigval
  {
    int sival_int;
    void *sival_ptr;
  } sigval_t;
# 51 "/usr/include/i386-linux-gnu/bits/siginfo.h" 3 4
typedef struct siginfo
  {
    int si_signo;
    int si_errno;

    int si_code;

    union
      {
 int _pad[((128 / sizeof (int)) - 3)];


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
   } _kill;


 struct
   {
     int si_tid;
     int si_overrun;
     sigval_t si_sigval;
   } _timer;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     sigval_t si_sigval;
   } _rt;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     int si_status;
     __clock_t si_utime;
     __clock_t si_stime;
   } _sigchld;


 struct
   {
     void *si_addr;
   } _sigfault;


 struct
   {
     long int si_band;
     int si_fd;
   } _sigpoll;
      } _sifields;
  } siginfo_t;
# 129 "/usr/include/i386-linux-gnu/bits/siginfo.h" 3 4
enum
{
  SI_ASYNCNL = -60,

  SI_TKILL = -6,

  SI_SIGIO,

  SI_ASYNCIO,

  SI_MESGQ,

  SI_TIMER,

  SI_QUEUE,

  SI_USER,

  SI_KERNEL = 0x80

};



enum
{
  ILL_ILLOPC = 1,

  ILL_ILLOPN,

  ILL_ILLADR,

  ILL_ILLTRP,

  ILL_PRVOPC,

  ILL_PRVREG,

  ILL_COPROC,

  ILL_BADSTK

};


enum
{
  FPE_INTDIV = 1,

  FPE_INTOVF,

  FPE_FLTDIV,

  FPE_FLTOVF,

  FPE_FLTUND,

  FPE_FLTRES,

  FPE_FLTINV,

  FPE_FLTSUB

};


enum
{
  SEGV_MAPERR = 1,

  SEGV_ACCERR

};


enum
{
  BUS_ADRALN = 1,

  BUS_ADRERR,

  BUS_OBJERR

};


enum
{
  TRAP_BRKPT = 1,

  TRAP_TRACE

};


enum
{
  CLD_EXITED = 1,

  CLD_KILLED,

  CLD_DUMPED,

  CLD_TRAPPED,

  CLD_STOPPED,

  CLD_CONTINUED

};


enum
{
  POLL_IN = 1,

  POLL_OUT,

  POLL_MSG,

  POLL_ERR,

  POLL_PRI,

  POLL_HUP

};
# 273 "/usr/include/i386-linux-gnu/bits/siginfo.h" 3 4
typedef struct sigevent
  {
    sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 3)];



 __pid_t _tid;

 struct
   {
     void (*_function) (sigval_t);
     void *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;






enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_THREAD,


  SIGEV_THREAD_ID = 4

};
# 80 "/usr/include/signal.h" 2 3 4




typedef void (*__sighandler_t) (int);




extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));

extern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));







extern __sighandler_t signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));
# 113 "/usr/include/signal.h" 3 4





extern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));






extern int kill (__pid_t __pid, int __sig) __attribute__ ((__nothrow__ , __leaf__));






extern int killpg (__pid_t __pgrp, int __sig) __attribute__ ((__nothrow__ , __leaf__));




extern int raise (int __sig) __attribute__ ((__nothrow__ , __leaf__));




extern __sighandler_t ssignal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));
extern int gsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));




extern void psignal (int __sig, __const char *__s);




extern void psiginfo (__const siginfo_t *__pinfo, __const char *__s);
# 168 "/usr/include/signal.h" 3 4
extern int __sigpause (int __sig_or_mask, int __is_sig);
# 177 "/usr/include/signal.h" 3 4
extern int sigpause (int __sig) __asm__ ("__xpg_sigpause");
# 196 "/usr/include/signal.h" 3 4
extern int sigblock (int __mask) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));


extern int sigsetmask (int __mask) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));


extern int siggetmask (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
# 211 "/usr/include/signal.h" 3 4
typedef __sighandler_t sighandler_t;




typedef __sighandler_t sig_t;





extern int sigemptyset (sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigfillset (sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigaddset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigdelset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigismember (__const sigset_t *__set, int __signo)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int sigisemptyset (__const sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigandset (sigset_t *__set, __const sigset_t *__left,
        __const sigset_t *__right) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern int sigorset (sigset_t *__set, __const sigset_t *__left,
       __const sigset_t *__right) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3)));




# 1 "/usr/include/i386-linux-gnu/bits/sigaction.h" 1 3 4
# 25 "/usr/include/i386-linux-gnu/bits/sigaction.h" 3 4
struct sigaction
  {


    union
      {

 __sighandler_t sa_handler;

 void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;







    __sigset_t sa_mask;


    int sa_flags;


    void (*sa_restorer) (void);
  };
# 253 "/usr/include/signal.h" 2 3 4


extern int sigprocmask (int __how, __const sigset_t *__restrict __set,
   sigset_t *__restrict __oset) __attribute__ ((__nothrow__ , __leaf__));






extern int sigsuspend (__const sigset_t *__set) __attribute__ ((__nonnull__ (1)));


extern int sigaction (int __sig, __const struct sigaction *__restrict __act,
        struct sigaction *__restrict __oact) __attribute__ ((__nothrow__ , __leaf__));


extern int sigpending (sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int sigwait (__const sigset_t *__restrict __set, int *__restrict __sig)
     __attribute__ ((__nonnull__ (1, 2)));






extern int sigwaitinfo (__const sigset_t *__restrict __set,
   siginfo_t *__restrict __info) __attribute__ ((__nonnull__ (1)));






extern int sigtimedwait (__const sigset_t *__restrict __set,
    siginfo_t *__restrict __info,
    __const struct timespec *__restrict __timeout)
     __attribute__ ((__nonnull__ (1)));



extern int sigqueue (__pid_t __pid, int __sig, __const union sigval __val)
     __attribute__ ((__nothrow__ , __leaf__));
# 310 "/usr/include/signal.h" 3 4
extern __const char *__const _sys_siglist[65];
extern __const char *__const sys_siglist[65];


struct sigvec
  {
    __sighandler_t sv_handler;
    int sv_mask;

    int sv_flags;

  };
# 334 "/usr/include/signal.h" 3 4
extern int sigvec (int __sig, __const struct sigvec *__vec,
     struct sigvec *__ovec) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/i386-linux-gnu/bits/sigcontext.h" 1 3 4
# 28 "/usr/include/i386-linux-gnu/bits/sigcontext.h" 3 4
# 1 "/usr/include/i386-linux-gnu/asm/sigcontext.h" 1 3 4




# 1 "/usr/include/linux/types.h" 1 3 4



# 1 "/usr/include/i386-linux-gnu/asm/types.h" 1 3 4



# 1 "/usr/include/asm-generic/types.h" 1 3 4






# 1 "/usr/include/asm-generic/int-ll64.h" 1 3 4
# 11 "/usr/include/asm-generic/int-ll64.h" 3 4
# 1 "/usr/include/i386-linux-gnu/asm/bitsperlong.h" 1 3 4
# 10 "/usr/include/i386-linux-gnu/asm/bitsperlong.h" 3 4
# 1 "/usr/include/asm-generic/bitsperlong.h" 1 3 4
# 11 "/usr/include/i386-linux-gnu/asm/bitsperlong.h" 2 3 4
# 12 "/usr/include/asm-generic/int-ll64.h" 2 3 4







typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
# 8 "/usr/include/asm-generic/types.h" 2 3 4



typedef unsigned short umode_t;
# 5 "/usr/include/i386-linux-gnu/asm/types.h" 2 3 4
# 5 "/usr/include/linux/types.h" 2 3 4



# 1 "/usr/include/linux/posix_types.h" 1 3 4



# 1 "/usr/include/linux/stddef.h" 1 3 4
# 5 "/usr/include/linux/posix_types.h" 2 3 4
# 36 "/usr/include/linux/posix_types.h" 3 4
typedef struct {
 unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __kernel_fd_set;


typedef void (*__kernel_sighandler_t)(int);


typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

# 1 "/usr/include/i386-linux-gnu/asm/posix_types.h" 1 3 4

# 1 "/usr/include/i386-linux-gnu/asm/posix_types_32.h" 1 3 4
# 10 "/usr/include/i386-linux-gnu/asm/posix_types_32.h" 3 4
typedef unsigned long __kernel_ino_t;
typedef unsigned short __kernel_mode_t;
typedef unsigned short __kernel_nlink_t;
typedef long __kernel_off_t;
typedef int __kernel_pid_t;
typedef unsigned short __kernel_ipc_pid_t;
typedef unsigned short __kernel_uid_t;
typedef unsigned short __kernel_gid_t;
typedef unsigned int __kernel_size_t;
typedef int __kernel_ssize_t;
typedef int __kernel_ptrdiff_t;
typedef long __kernel_time_t;
typedef long __kernel_suseconds_t;
typedef long __kernel_clock_t;
typedef int __kernel_timer_t;
typedef int __kernel_clockid_t;
typedef int __kernel_daddr_t;
typedef char * __kernel_caddr_t;
typedef unsigned short __kernel_uid16_t;
typedef unsigned short __kernel_gid16_t;
typedef unsigned int __kernel_uid32_t;
typedef unsigned int __kernel_gid32_t;

typedef unsigned short __kernel_old_uid_t;
typedef unsigned short __kernel_old_gid_t;
typedef unsigned short __kernel_old_dev_t;


typedef long long __kernel_loff_t;


typedef struct {
 int val[2];
} __kernel_fsid_t;
# 3 "/usr/include/i386-linux-gnu/asm/posix_types.h" 2 3 4
# 48 "/usr/include/linux/posix_types.h" 2 3 4
# 9 "/usr/include/linux/types.h" 2 3 4
# 27 "/usr/include/linux/types.h" 3 4
typedef __u16 __le16;
typedef __u16 __be16;
typedef __u32 __le32;
typedef __u32 __be32;
typedef __u64 __le64;
typedef __u64 __be64;

typedef __u16 __sum16;
typedef __u32 __wsum;
# 6 "/usr/include/i386-linux-gnu/asm/sigcontext.h" 2 3 4
# 23 "/usr/include/i386-linux-gnu/asm/sigcontext.h" 3 4
struct _fpx_sw_bytes {
 __u32 magic1;
 __u32 extended_size;


 __u64 xstate_bv;




 __u32 xstate_size;




 __u32 padding[7];
};
# 56 "/usr/include/i386-linux-gnu/asm/sigcontext.h" 3 4
struct _fpreg {
 unsigned short significand[4];
 unsigned short exponent;
};

struct _fpxreg {
 unsigned short significand[4];
 unsigned short exponent;
 unsigned short padding[3];
};

struct _xmmreg {
 unsigned long element[4];
};

struct _fpstate {

 unsigned long cw;
 unsigned long sw;
 unsigned long tag;
 unsigned long ipoff;
 unsigned long cssel;
 unsigned long dataoff;
 unsigned long datasel;
 struct _fpreg _st[8];
 unsigned short status;
 unsigned short magic;


 unsigned long _fxsr_env[6];
 unsigned long mxcsr;
 unsigned long reserved;
 struct _fpxreg _fxsr_st[8];
 struct _xmmreg _xmm[8];
 unsigned long padding1[44];

 union {
  unsigned long padding2[12];
  struct _fpx_sw_bytes sw_reserved;

 };
};






struct sigcontext {
 unsigned short gs, __gsh;
 unsigned short fs, __fsh;
 unsigned short es, __esh;
 unsigned short ds, __dsh;
 unsigned long edi;
 unsigned long esi;
 unsigned long ebp;
 unsigned long esp;
 unsigned long ebx;
 unsigned long edx;
 unsigned long ecx;
 unsigned long eax;
 unsigned long trapno;
 unsigned long err;
 unsigned long eip;
 unsigned short cs, __csh;
 unsigned long eflags;
 unsigned long esp_at_signal;
 unsigned short ss, __ssh;
 struct _fpstate *fpstate;
 unsigned long oldmask;
 unsigned long cr2;
};
# 190 "/usr/include/i386-linux-gnu/asm/sigcontext.h" 3 4
struct _xsave_hdr {
 __u64 xstate_bv;
 __u64 reserved1[2];
 __u64 reserved2[5];
};

struct _ymmh_state {

 __u32 ymmh_space[64];
};







struct _xstate {
 struct _fpstate fpstate;
 struct _xsave_hdr xstate_hdr;
 struct _ymmh_state ymmh;

};
# 29 "/usr/include/i386-linux-gnu/bits/sigcontext.h" 2 3 4



# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 33 "/usr/include/i386-linux-gnu/bits/sigcontext.h" 2 3 4
# 340 "/usr/include/signal.h" 2 3 4


extern int sigreturn (struct sigcontext *__scp) __attribute__ ((__nothrow__ , __leaf__));






# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 350 "/usr/include/signal.h" 2 3 4




extern int siginterrupt (int __sig, int __interrupt) __attribute__ ((__nothrow__ , __leaf__));

# 1 "/usr/include/i386-linux-gnu/bits/sigstack.h" 1 3 4
# 26 "/usr/include/i386-linux-gnu/bits/sigstack.h" 3 4
struct sigstack
  {
    void *ss_sp;
    int ss_onstack;
  };



enum
{
  SS_ONSTACK = 1,

  SS_DISABLE

};
# 50 "/usr/include/i386-linux-gnu/bits/sigstack.h" 3 4
typedef struct sigaltstack
  {
    void *ss_sp;
    int ss_flags;
    size_t ss_size;
  } stack_t;
# 357 "/usr/include/signal.h" 2 3 4


# 1 "/usr/include/i386-linux-gnu/sys/ucontext.h" 1 3 4
# 23 "/usr/include/i386-linux-gnu/sys/ucontext.h" 3 4
# 1 "/usr/include/signal.h" 1 3 4
# 24 "/usr/include/i386-linux-gnu/sys/ucontext.h" 2 3 4



# 1 "/usr/include/i386-linux-gnu/bits/sigcontext.h" 1 3 4
# 28 "/usr/include/i386-linux-gnu/sys/ucontext.h" 2 3 4



typedef int greg_t;





typedef greg_t gregset_t[19];



enum
{
  REG_GS = 0,

  REG_FS,

  REG_ES,

  REG_DS,

  REG_EDI,

  REG_ESI,

  REG_EBP,

  REG_ESP,

  REG_EBX,

  REG_EDX,

  REG_ECX,

  REG_EAX,

  REG_TRAPNO,

  REG_ERR,

  REG_EIP,

  REG_CS,

  REG_EFL,

  REG_UESP,

  REG_SS

};



struct _libc_fpreg
{
  unsigned short int significand[4];
  unsigned short int exponent;
};

struct _libc_fpstate
{
  unsigned long int cw;
  unsigned long int sw;
  unsigned long int tag;
  unsigned long int ipoff;
  unsigned long int cssel;
  unsigned long int dataoff;
  unsigned long int datasel;
  struct _libc_fpreg _st[8];
  unsigned long int status;
};


typedef struct _libc_fpstate *fpregset_t;


typedef struct
  {
    gregset_t gregs;


    fpregset_t fpregs;
    unsigned long int oldmask;
    unsigned long int cr2;
  } mcontext_t;


typedef struct ucontext
  {
    unsigned long int uc_flags;
    struct ucontext *uc_link;
    stack_t uc_stack;
    mcontext_t uc_mcontext;
    __sigset_t uc_sigmask;
    struct _libc_fpstate __fpregs_mem;
  } ucontext_t;
# 360 "/usr/include/signal.h" 2 3 4





extern int sigstack (struct sigstack *__ss, struct sigstack *__oss)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));



extern int sigaltstack (__const struct sigaltstack *__restrict __ss,
   struct sigaltstack *__restrict __oss) __attribute__ ((__nothrow__ , __leaf__));







extern int sighold (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern int sigrelse (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern int sigignore (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern __sighandler_t sigset (int __sig, __sighandler_t __disp) __attribute__ ((__nothrow__ , __leaf__));






# 1 "/usr/include/i386-linux-gnu/bits/sigthread.h" 1 3 4
# 31 "/usr/include/i386-linux-gnu/bits/sigthread.h" 3 4
extern int pthread_sigmask (int __how,
       __const __sigset_t *__restrict __newmask,
       __sigset_t *__restrict __oldmask)__attribute__ ((__nothrow__ , __leaf__));


extern int pthread_kill (pthread_t __threadid, int __signo) __attribute__ ((__nothrow__ , __leaf__));



extern int pthread_sigqueue (pthread_t __threadid, int __signo,
        const union sigval __value) __attribute__ ((__nothrow__ , __leaf__));
# 396 "/usr/include/signal.h" 2 3 4






extern int __libc_current_sigrtmin (void) __attribute__ ((__nothrow__ , __leaf__));

extern int __libc_current_sigrtmax (void) __attribute__ ((__nothrow__ , __leaf__));




# 32 "/usr/include/i386-linux-gnu/sys/wait.h" 2 3 4
# 1 "/usr/include/i386-linux-gnu/sys/resource.h" 1 3 4
# 25 "/usr/include/i386-linux-gnu/sys/resource.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/resource.h" 1 3 4
# 33 "/usr/include/i386-linux-gnu/bits/resource.h" 3 4
enum __rlimit_resource
{

  RLIMIT_CPU = 0,



  RLIMIT_FSIZE = 1,



  RLIMIT_DATA = 2,



  RLIMIT_STACK = 3,



  RLIMIT_CORE = 4,






  __RLIMIT_RSS = 5,



  RLIMIT_NOFILE = 7,
  __RLIMIT_OFILE = RLIMIT_NOFILE,




  RLIMIT_AS = 9,



  __RLIMIT_NPROC = 6,



  __RLIMIT_MEMLOCK = 8,



  __RLIMIT_LOCKS = 10,



  __RLIMIT_SIGPENDING = 11,



  __RLIMIT_MSGQUEUE = 12,





  __RLIMIT_NICE = 13,




  __RLIMIT_RTPRIO = 14,





  __RLIMIT_RTTIME = 15,


  __RLIMIT_NLIMITS = 16,
  __RLIM_NLIMITS = __RLIMIT_NLIMITS


};
# 133 "/usr/include/i386-linux-gnu/bits/resource.h" 3 4
typedef __rlim_t rlim_t;




typedef __rlim64_t rlim64_t;


struct rlimit
  {

    rlim_t rlim_cur;

    rlim_t rlim_max;
  };


struct rlimit64
  {

    rlim64_t rlim_cur;

    rlim64_t rlim_max;
 };



enum __rusage_who
{

  RUSAGE_SELF = 0,



  RUSAGE_CHILDREN = -1



  ,

  RUSAGE_THREAD = 1




};


# 1 "/usr/include/i386-linux-gnu/bits/time.h" 1 3 4
# 182 "/usr/include/i386-linux-gnu/bits/resource.h" 2 3 4


struct rusage
  {

    struct timeval ru_utime;

    struct timeval ru_stime;

    long int ru_maxrss;


    long int ru_ixrss;

    long int ru_idrss;

    long int ru_isrss;


    long int ru_minflt;

    long int ru_majflt;

    long int ru_nswap;


    long int ru_inblock;

    long int ru_oublock;

    long int ru_msgsnd;

    long int ru_msgrcv;

    long int ru_nsignals;



    long int ru_nvcsw;


    long int ru_nivcsw;
  };







enum __priority_which
{
  PRIO_PROCESS = 0,

  PRIO_PGRP = 1,

  PRIO_USER = 2

};







extern int prlimit (__pid_t __pid, enum __rlimit_resource __resource,
      __const struct rlimit *__new_limit,
      struct rlimit *__old_limit) __attribute__ ((__nothrow__ , __leaf__));
# 262 "/usr/include/i386-linux-gnu/bits/resource.h" 3 4
extern int prlimit64 (__pid_t __pid, enum __rlimit_resource __resource,
        __const struct rlimit64 *__new_limit,
        struct rlimit64 *__old_limit) __attribute__ ((__nothrow__ , __leaf__));




# 26 "/usr/include/i386-linux-gnu/sys/resource.h" 2 3 4













typedef enum __rlimit_resource __rlimit_resource_t;
typedef enum __rusage_who __rusage_who_t;
typedef enum __priority_which __priority_which_t;
# 51 "/usr/include/i386-linux-gnu/sys/resource.h" 3 4
extern int getrlimit (__rlimit_resource_t __resource,
        struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__));
# 62 "/usr/include/i386-linux-gnu/sys/resource.h" 3 4
extern int getrlimit64 (__rlimit_resource_t __resource,
   struct rlimit64 *__rlimits) __attribute__ ((__nothrow__ , __leaf__));






extern int setrlimit (__rlimit_resource_t __resource,
        __const struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__));
# 82 "/usr/include/i386-linux-gnu/sys/resource.h" 3 4
extern int setrlimit64 (__rlimit_resource_t __resource,
   __const struct rlimit64 *__rlimits) __attribute__ ((__nothrow__ , __leaf__));




extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__ , __leaf__));





extern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__ , __leaf__));



extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));


# 33 "/usr/include/i386-linux-gnu/sys/wait.h" 2 3 4
# 102 "/usr/include/i386-linux-gnu/sys/wait.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 116 "/usr/include/i386-linux-gnu/sys/wait.h" 3 4
extern __pid_t wait (__WAIT_STATUS __stat_loc);
# 139 "/usr/include/i386-linux-gnu/sys/wait.h" 3 4
extern __pid_t waitpid (__pid_t __pid, int *__stat_loc, int __options);



# 1 "/usr/include/i386-linux-gnu/bits/siginfo.h" 1 3 4
# 25 "/usr/include/i386-linux-gnu/bits/siginfo.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/wordsize.h" 1 3 4
# 26 "/usr/include/i386-linux-gnu/bits/siginfo.h" 2 3 4
# 144 "/usr/include/i386-linux-gnu/sys/wait.h" 2 3 4
# 155 "/usr/include/i386-linux-gnu/sys/wait.h" 3 4
extern int waitid (idtype_t __idtype, __id_t __id, siginfo_t *__infop,
     int __options);





struct rusage;






extern __pid_t wait3 (__WAIT_STATUS __stat_loc, int __options,
        struct rusage * __usage) __attribute__ ((__nothrow__));




extern __pid_t wait4 (__pid_t __pid, __WAIT_STATUS __stat_loc, int __options,
        struct rusage *__usage) __attribute__ ((__nothrow__));




# 332 "../../gcc/system.h" 2
# 382 "../../gcc/system.h"
extern int getopt (int, char * const *, const char *);
# 402 "../../gcc/system.h"
# 1 "/usr/include/malloc.h" 1 3 4
# 25 "/usr/include/malloc.h" 3 4
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 26 "/usr/include/malloc.h" 2 3 4
# 58 "/usr/include/malloc.h" 3 4



extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;


extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


extern void cfree (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


extern void *memalign (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;


extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;



extern void * pvalloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;



extern void *(*__morecore) (ptrdiff_t __size);


extern void *__default_morecore (ptrdiff_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__));



struct mallinfo
{
  int arena;
  int ordblks;
  int smblks;
  int hblks;
  int hblkhd;
  int usmblks;
  int fsmblks;
  int uordblks;
  int fordblks;
  int keepcost;
};


extern struct mallinfo mallinfo (void) __attribute__ ((__nothrow__ , __leaf__));
# 144 "/usr/include/malloc.h" 3 4
extern int mallopt (int __param, int __val) __attribute__ ((__nothrow__ , __leaf__));



extern int malloc_trim (size_t __pad) __attribute__ ((__nothrow__ , __leaf__));



extern size_t malloc_usable_size (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


extern void malloc_stats (void) __attribute__ ((__nothrow__ , __leaf__));


extern int malloc_info (int __options, FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));


extern void *malloc_get_state (void) __attribute__ ((__nothrow__ , __leaf__));



extern int malloc_set_state (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));




extern void (*__volatile __malloc_initialize_hook) (void)
     __attribute__ ((__deprecated__));

extern void (*__volatile __free_hook) (void *__ptr,
         __const void *)
     __attribute__ ((__deprecated__));
extern void *(*__volatile __malloc_hook) (size_t __size,
            __const void *)
     __attribute__ ((__deprecated__));
extern void *(*__volatile __realloc_hook) (void *__ptr,
             size_t __size,
             __const void *)
     __attribute__ ((__deprecated__));
extern void *(*__volatile __memalign_hook) (size_t __alignment,
       size_t __size,
       __const void *)
     __attribute__ ((__deprecated__));
extern void (*__volatile __after_morecore_hook) (void);


extern void __malloc_check_init (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));



# 403 "../../gcc/system.h" 2
# 418 "../../gcc/system.h"
# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stdint.h" 1 3 4


# 1 "/usr/include/stdint.h" 1 3 4
# 27 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/i386-linux-gnu/bits/wchar.h" 1 3 4
# 28 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/i386-linux-gnu/bits/wordsize.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 49 "/usr/include/stdint.h" 3 4
typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 129 "/usr/include/stdint.h" 3 4
typedef unsigned int uintptr_t;
# 138 "/usr/include/stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 4 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stdint.h" 2 3 4
# 419 "../../gcc/system.h" 2



# 1 "/usr/include/inttypes.h" 1 3 4
# 35 "/usr/include/inttypes.h" 3 4
typedef int __gwchar_t;
# 274 "/usr/include/inttypes.h" 3 4

# 288 "/usr/include/inttypes.h" 3 4
typedef struct
  {
    long long int quot;
    long long int rem;
  } imaxdiv_t;





extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (__const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (__const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (__const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (__const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));
# 442 "/usr/include/inttypes.h" 3 4

# 423 "../../gcc/system.h" 2
# 472 "../../gcc/system.h"
# 1 "/usr/include/i386-linux-gnu/sys/stat.h" 1 3 4
# 105 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4


# 1 "/usr/include/i386-linux-gnu/bits/stat.h" 1 3 4
# 108 "/usr/include/i386-linux-gnu/sys/stat.h" 2 3 4
# 211 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4
extern int stat (__const char *__restrict __file,
   struct stat *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int fstat (int __fd, struct stat *__buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 230 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4
extern int stat64 (__const char *__restrict __file,
     struct stat64 *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int fstat64 (int __fd, struct stat64 *__buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));







extern int fstatat (int __fd, __const char *__restrict __file,
      struct stat *__restrict __buf, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 255 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4
extern int fstatat64 (int __fd, __const char *__restrict __file,
        struct stat64 *__restrict __buf, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));







extern int lstat (__const char *__restrict __file,
    struct stat *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 278 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4
extern int lstat64 (__const char *__restrict __file,
      struct stat64 *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int chmod (__const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int lchmod (__const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__ , __leaf__));





extern int fchmodat (int __fd, __const char *__file, __mode_t __mode,
       int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;






extern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__ , __leaf__));




extern __mode_t getumask (void) __attribute__ ((__nothrow__ , __leaf__));



extern int mkdir (__const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int mkdirat (int __fd, __const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));






extern int mknod (__const char *__path, __mode_t __mode, __dev_t __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int mknodat (int __fd, __const char *__path, __mode_t __mode,
      __dev_t __dev) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int mkfifo (__const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int mkfifoat (int __fd, __const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int utimensat (int __fd, __const char *__path,
        __const struct timespec __times[2],
        int __flags)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern int futimens (int __fd, __const struct timespec __times[2]) __attribute__ ((__nothrow__ , __leaf__));
# 401 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4
extern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
extern int __xstat (int __ver, __const char *__filename,
      struct stat *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __lxstat (int __ver, __const char *__filename,
       struct stat *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __fxstatat (int __ver, int __fildes, __const char *__filename,
         struct stat *__stat_buf, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4)));
# 434 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4
extern int __fxstat64 (int __ver, int __fildes, struct stat64 *__stat_buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
extern int __xstat64 (int __ver, __const char *__filename,
        struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __lxstat64 (int __ver, __const char *__filename,
         struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
extern int __fxstatat64 (int __ver, int __fildes, __const char *__filename,
    struct stat64 *__stat_buf, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4)));

extern int __xmknod (int __ver, __const char *__path, __mode_t __mode,
       __dev_t *__dev) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int __xmknodat (int __ver, int __fd, __const char *__path,
         __mode_t __mode, __dev_t *__dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 5)));
# 536 "/usr/include/i386-linux-gnu/sys/stat.h" 3 4

# 473 "../../gcc/system.h" 2
# 540 "../../gcc/system.h"
# 1 "../../gcc/../include/filenames.h" 1
# 53 "../../gcc/../include/filenames.h"
extern int filename_cmp (const char *s1, const char *s2);
# 541 "../../gcc/system.h" 2
# 551 "../../gcc/system.h"
# 1 "../../gcc/../include/libiberty.h" 1
# 43 "../../gcc/../include/libiberty.h"
# 1 "../../gcc/../include/ansidecl.h" 1
# 44 "../../gcc/../include/libiberty.h" 2


# 1 "/usr/lib/gcc/i686-linux-gnu/4.6/include/stddef.h" 1 3 4
# 47 "../../gcc/../include/libiberty.h" 2
# 56 "../../gcc/../include/libiberty.h"
extern void unlock_stream (FILE *);





extern void unlock_std_streams (void);





extern FILE *fopen_unlocked (const char *, const char *);
extern FILE *fdopen_unlocked (int, const char *);
extern FILE *freopen_unlocked (const char *, const char *, FILE *);




extern char **buildargv (const char *) __attribute__ ((__malloc__));



extern void freeargv (char **);




extern char **dupargv (char **) __attribute__ ((__malloc__));



extern void expandargv (int *, char ***);



extern int writeargv (char **, FILE *);
# 117 "../../gcc/../include/libiberty.h"
extern const char *lbasename (const char *);



extern char *lrealpath (const char *);





extern char *concat (const char *, ...) __attribute__ ((__malloc__)) __attribute__ ((__sentinel__));
# 136 "../../gcc/../include/libiberty.h"
extern char *reconcat (char *, const char *, ...) __attribute__ ((__malloc__)) __attribute__ ((__sentinel__));





extern unsigned long concat_length (const char *, ...) __attribute__ ((__sentinel__));






extern char *concat_copy (char *, const char *, ...) __attribute__ ((__sentinel__));






extern char *concat_copy2 (const char *, ...) __attribute__ ((__sentinel__));



extern char *libiberty_concat_ptr;
# 172 "../../gcc/../include/libiberty.h"
extern int fdmatch (int fd1, int fd2);
# 184 "../../gcc/../include/libiberty.h"
extern char * getpwd (void);
# 197 "../../gcc/../include/libiberty.h"
extern long get_run_time (void);




extern char *make_relative_prefix (const char *, const char *,
                                   const char *) __attribute__ ((__malloc__));





extern char *make_relative_prefix_ignore_links (const char *, const char *,
      const char *) __attribute__ ((__malloc__));



extern char *choose_temp_base (void) __attribute__ ((__malloc__));



extern char *make_temp_file (const char *) __attribute__ ((__malloc__));



extern int unlink_if_ordinary (const char *);



extern const char *spaces (int count);




extern int errno_max (void);




extern const char *strerrno (int);



extern int strtoerrno (const char *);



extern char *xstrerror (int);




extern int signo_max (void);
# 261 "../../gcc/../include/libiberty.h"
extern const char *strsigno (int);



extern int strtosigno (const char *);



extern int xatexit (void (*fn) (void));



extern void xexit (int status) __attribute__ ((__noreturn__));



extern void xmalloc_set_program_name (const char *);


extern void xmalloc_failed (size_t) __attribute__ ((__noreturn__));





extern void *xmalloc (size_t) __attribute__ ((__malloc__));





extern void *xrealloc (void *, size_t);




extern void *xcalloc (size_t, size_t) __attribute__ ((__malloc__));



extern char *xstrdup (const char *) __attribute__ ((__malloc__));



extern char *xstrndup (const char *, size_t) __attribute__ ((__malloc__));



extern void *xmemdup (const void *, size_t, size_t) __attribute__ ((__malloc__));


extern double physmem_total (void);
extern double physmem_available (void);


extern unsigned int xcrc32 (const unsigned char *, int, unsigned int);
# 360 "../../gcc/../include/libiberty.h"
extern const unsigned char _hex_value[256];
extern void hex_init (void);
# 386 "../../gcc/../include/libiberty.h"
extern struct pex_obj *pex_init (int flags, const char *pname,
     const char *tempbase);
# 481 "../../gcc/../include/libiberty.h"
extern const char *pex_run (struct pex_obj *obj, int flags,
       const char *executable, char * const *argv,
       const char *outname, const char *errname,
       int *err);
# 496 "../../gcc/../include/libiberty.h"
extern const char *pex_run_in_environment (struct pex_obj *obj, int flags,
                      const char *executable,
                                           char * const *argv,
                                           char * const *env,
                              const char *outname,
        const char *errname, int *err);





extern FILE *pex_input_file (struct pex_obj *obj, int flags,
                             const char *in_name);






extern FILE *pex_input_pipe (struct pex_obj *obj, int binary);







extern FILE *pex_read_output (struct pex_obj *, int binary);







extern FILE *pex_read_err (struct pex_obj *, int binary);





extern int pex_get_status (struct pex_obj *, int count, int *vector);






struct pex_time
{
  unsigned long user_seconds;
  unsigned long user_microseconds;
  unsigned long system_seconds;
  unsigned long system_microseconds;
};

extern int pex_get_times (struct pex_obj *, int count,
     struct pex_time *vector);




extern void pex_free (struct pex_obj *);
# 571 "../../gcc/../include/libiberty.h"
extern const char *pex_one (int flags, const char *executable,
       char * const *argv, const char *pname,
       const char *outname, const char *errname,
       int *status, int *err);
# 590 "../../gcc/../include/libiberty.h"
extern int pexecute (const char *, char * const *, const char *,
                     const char *, char **, char **, int);



extern int pwait (int, int *, int);
# 634 "../../gcc/../include/libiberty.h"
extern void *C_alloca (size_t) __attribute__ ((__malloc__));
# 552 "../../gcc/system.h" 2
# 589 "../../gcc/system.h"
extern void fancy_abort (const char *, int, const char *) __attribute__ ((__noreturn__));
# 673 "../../gcc/system.h"
        




        



        
# 716 "../../gcc/system.h"
        
# 767 "../../gcc/system.h"
        
# 776 "../../gcc/system.h"
        
# 787 "../../gcc/system.h"
        
# 797 "../../gcc/system.h"
        
# 30 "../../gcc/rtl.c" 2
# 1 "../../gcc/coretypes.h" 1
# 46 "../../gcc/coretypes.h"
struct bitmap_head_def;
typedef struct bitmap_head_def *bitmap;
typedef const struct bitmap_head_def *const_bitmap;
struct rtx_def;
typedef struct rtx_def *rtx;
typedef const struct rtx_def *const_rtx;
struct rtvec_def;
typedef struct rtvec_def *rtvec;
typedef const struct rtvec_def *const_rtvec;
union tree_node;
typedef union tree_node *tree;
union gimple_statement_d;
typedef union gimple_statement_d *gimple;
typedef const union tree_node *const_tree;
typedef const union gimple_statement_d *const_gimple;
union section;
typedef union section section;
struct cl_target_option;
struct cl_optimization;
struct gimple_seq_d;
typedef struct gimple_seq_d *gimple_seq;
typedef const struct gimple_seq_d *const_gimple_seq;
struct gimple_seq_node_d;
typedef struct gimple_seq_node_d *gimple_seq_node;
typedef const struct gimple_seq_node_d *const_gimple_seq_node;


typedef unsigned char addr_space_t;






enum ir_type {
  IR_GIMPLE,
  IR_RTL_CFGRTL,
  IR_RTL_CFGLAYOUT
};






struct cpp_reader;
struct cpp_token;




enum tls_model {
  TLS_MODEL_NONE,
  TLS_MODEL_EMULATED,
  TLS_MODEL_REAL,
  TLS_MODEL_GLOBAL_DYNAMIC = TLS_MODEL_REAL,
  TLS_MODEL_LOCAL_DYNAMIC,
  TLS_MODEL_INITIAL_EXEC,
  TLS_MODEL_LOCAL_EXEC
};

struct edge_def;
typedef struct edge_def *edge;
typedef const struct edge_def *const_edge;
struct basic_block_def;
typedef struct basic_block_def *basic_block;
typedef const struct basic_block_def *const_basic_block;
# 31 "../../gcc/rtl.c" 2
# 1 "./tm.h" 1






# 1 "./options.h" 1





extern int target_flags;
extern int target_flags_explicit;

extern int extra_warnings;
extern int warn_abi;
extern int warn_address;
extern int warn_aggregate_return;
extern int warn_array_bounds;
extern int warn_assign_intercept;
extern int warn_attributes;
extern int warn_bad_function_cast;
extern int warn_cxx_compat;
extern int warn_cxx0x_compat;
extern int warn_cast_align;
extern int warn_cast_qual;
extern int warn_char_subscripts;
extern int warn_clobbered;
extern int warn_conversion;
extern int warn_conversion_null;
extern int warn_coverage_mismatch;
extern int warn_ctor_dtor_privacy;
extern int warn_declaration_after_statement;
extern int warn_deprecated;
extern int warn_deprecated_decl;
extern int warn_disabled_optimization;
extern int warn_div_by_zero;
extern int warn_ecpp;
extern int warn_empty_body;
extern int warn_enum_compare;
extern int warnings_are_errors;
extern int flag_extraneous_semicolon;
extern int flag_fatal_errors;
extern int warn_float_equal;
extern int warn_format_contains_nul;
extern int warn_format_extra_args;
extern int warn_format_nonliteral;
extern int warn_format_security;
extern int warn_format_y2k;
extern int warn_format_zero_length;
extern int warn_ignored_qualifiers;
extern int warn_implicit_function_declaration;
extern int warn_implicit_int;
extern int warn_init_self;
extern int warn_inline;
extern int warn_int_to_pointer_cast;
extern int warn_invalid_offsetof;
extern int warn_jump_misses_init;
extern int warn_logical_op;
extern int warn_long_long;
extern int warn_main;
extern int warn_missing_braces;
extern int warn_missing_declarations;
extern int warn_missing_field_initializers;
extern int warn_missing_format_attribute;
extern int warn_missing_noreturn;
extern int warn_missing_parameter_type;
extern int warn_missing_prototypes;
extern int warn_mudflap;
extern int warn_nested_externs;
extern int warn_nontemplate_friend;
extern int warn_nonvdtor;
extern int warn_nonnull;
extern int warn_old_style_cast;
extern int warn_old_style_declaration;
extern int warn_old_style_definition;
extern int flag_newer;
extern int warn_overflow;
extern int warn_overlength_strings;
extern int warn_overloaded_virtual;
extern int warn_override_init;
extern int warn_packed;
extern int warn_packed_bitfield_compat;
extern int warn_padded;
extern int warn_parentheses;
extern int warn_pmf2ptr;
extern int warn_pointer_arith;
extern int warn_pointer_sign;
extern int warn_pointer_to_int_cast;
extern int warn_pragmas;
extern int warn_protocol;
extern int warn_psabi;
extern int warn_redundant_decls;
extern int flag_redundant;
extern int warn_reorder;
extern int warn_return_type;
extern int warn_selector;
extern int warn_sequence_point;
extern int warn_shadow;
extern int warn_sign_compare;
extern int warn_sign_conversion;
extern int warn_sign_promo;
extern int warn_stack_protect;
extern int warn_strict_aliasing;
extern int warn_strict_overflow;
extern int warn_strict_prototypes;
extern int warn_strict_selector_match;
extern int warn_switch;
extern int warn_switch_default;
extern int warn_switch_enum;
extern int warn_sync_nand;
extern int warn_synth;
extern int warn_system_headers;
extern int warn_traditional;
extern int warn_traditional_conversion;
extern int warn_type_limits;
extern int warn_undeclared_selector;
extern int warn_uninitialized;
extern int warn_unsafe_loop_optimizations;
extern int warn_unsuffixed_float_constants;
extern int warn_unused;
extern int warn_unused_function;
extern int warn_unused_label;
extern int warn_unused_parameter;
extern int warn_unused_result;
extern int warn_unused_value;
extern int warn_unused_variable;
extern int warn_vla;
extern int warn_volatile_register_var;
extern int warn_write_strings;
extern int flag_pic;
extern int flag_pie;
extern int flag_abi_version;
extern int align_functions;
extern int align_jumps;
extern int align_labels;
extern int align_loops;
extern int flag_argument_noalias;
extern int flag_assert;
extern int flag_associative_math;
extern int flag_asynchronous_unwind_tables;
extern int flag_auto_inc_dec;
extern int flag_bootstrap_classes;
extern int flag_bounds_check;
extern int flag_branch_on_count_reg;
extern int flag_branch_probabilities;
extern int flag_branch_target_load_optimize;
extern int flag_branch_target_load_optimize2;
extern int flag_btr_bb_exclusive;
extern int flag_caller_saves;
extern int flag_check_data_deps;
extern int flag_check_references;
extern int flag_no_common;
extern int flag_compare_debug;
extern const char *flag_compare_debug_opt;
extern int flag_conserve_stack;
extern int flag_cprop_registers;
extern int flag_crossjumping;
extern int flag_cse_follow_jumps;
extern int flag_cx_fortran_rules;
extern int flag_cx_limited_range;
extern int flag_data_sections;
extern int flag_dce;
extern int flag_deduce_init_list;
extern int flag_defer_pop;
extern int flag_delayed_branch;
extern int flag_delete_null_pointer_checks;
extern int flag_dse;
extern const char *flag_dump_final_insns;
extern int flag_dump_noaddr;
extern int flag_dump_unnumbered;
extern int flag_dump_unnumbered_links;
extern int flag_dwarf2_cfi_asm;
extern int flag_early_inlining;
extern int flag_eliminate_dwarf2_dups;
extern int flag_debug_only_used_symbols;
extern int flag_eliminate_unused_debug_types;
extern int flag_emit_class_debug_always;
extern int flag_emit_class_files;
extern int flag_enable_icf_debug;
extern int flag_exceptions;
extern int flag_expensive_optimizations;
extern int flag_filelist_file;
extern int flag_finite_math_only;
extern int flag_float_store;
extern int flag_force_classes_archive_check;
extern int flag_forward_propagate;
extern int flag_friend_injection;
extern int flag_no_function_cse;
extern int flag_function_sections;
extern int flag_gcse;
extern int flag_gcse_after_reload;
extern int flag_gcse_las;
extern int flag_gcse_lm;
extern int flag_gcse_sm;
extern int flag_gnu89_inline;
extern int flag_graphite;
extern int flag_graphite_identity;
extern int flag_guess_branch_prob;
extern int flag_hash_synchronization;
extern int help_flag;
extern int flag_no_ident;
extern int flag_if_conversion;
extern int flag_if_conversion2;
extern int flag_indirect_classes;
extern int flag_indirect_dispatch;
extern int flag_indirect_inlining;
extern int flag_inhibit_size_directive;
extern int flag_no_inline;
extern int flag_inline_functions;
extern int flag_inline_functions_called_once;
extern int flag_inline_small_functions;
extern int flag_instrument_function_entry_exit;
extern int flag_ipa_cp;
extern int flag_ipa_cp_clone;
extern int flag_ipa_matrix_reorg;
extern int flag_ipa_pta;
extern int flag_ipa_pure_const;
extern int flag_ipa_reference;
extern int flag_ipa_sra;
extern int flag_ipa_struct_reorg;
extern int flag_ipa_type_escape;
extern int flag_ira_coalesce;
extern int flag_ira_loop_pressure;
extern int flag_ira_share_save_slots;
extern int flag_ira_share_spill_slots;
extern int flag_ivopts;
extern int flag_jni;
extern int flag_jump_tables;
extern int flag_keep_inline_functions;
extern int flag_keep_static_consts;
extern int flag_leading_underscore;
extern int flag_loop_block;
extern int flag_loop_interchange;
extern int flag_loop_parallelize_all;
extern int flag_loop_strip_mine;
extern int flag_lto;
extern int flag_lto_compression_level;
extern int flag_lto_report;
extern int flag_ltrans;
extern const char *ltrans_output_list;
extern int flag_errno_math;
extern int mem_report;
extern int flag_merge_constants;
extern int flag_merge_debug_strings;
extern int flag_modulo_sched;
extern int flag_modulo_sched_allow_regmoves;
extern int flag_move_loop_invariants;
extern int flag_mudflap;
extern int flag_mudflap_ignore_reads;
extern int flag_non_call_exceptions;
extern int flag_objc_call_cxx_cdtors;
extern int flag_objc_direct_dispatch;
extern int flag_objc_exceptions;
extern int flag_objc_gc;
extern int flag_objc_sjlj_exceptions;
extern int flag_omit_frame_pointer;
extern int flag_openmp;
extern int flag_regmove;
extern int flag_optimize_sibling_calls;
extern int flag_optimize_sci;
extern int flag_pack_struct;
extern int flag_pcc_struct_return;
extern int flag_peel_loops;
extern int flag_no_peephole;
extern int flag_peephole2;
extern int post_ipa_mem_report;
extern int pre_ipa_mem_report;
extern int flag_predictive_commoning;
extern int flag_prefetch_loop_arrays;
extern int profile_flag;
extern int profile_arc_flag;
extern int flag_profile_correction;
extern int flag_profile_use;
extern int flag_profile_values;
extern int flag_reciprocal_math;
extern int flag_record_gcc_switches;
extern int flag_reduced_reflection;
extern int flag_rename_registers;
extern int flag_reorder_blocks;
extern int flag_reorder_blocks_and_partition;
extern int flag_reorder_functions;
extern int flag_rerun_cse_after_loop;
extern int flag_resched_modulo_sched;
extern int flag_rounding_math;
extern int flag_sched_critical_path_heuristic;
extern int flag_sched_dep_count_heuristic;
extern int flag_sched_group_heuristic;
extern int flag_schedule_interblock;
extern int flag_sched_last_insn_heuristic;
extern int flag_sched_pressure;
extern int flag_sched_rank_heuristic;
extern int flag_schedule_speculative;
extern int flag_sched_spec_insn_heuristic;
extern int flag_schedule_speculative_load;
extern int flag_schedule_speculative_load_dangerous;
extern int flag_sched_stalled_insns;
extern int flag_sched_stalled_insns_dep;
extern int flag_sched2_use_superblocks;
extern int flag_schedule_insns;
extern int flag_schedule_insns_after_reload;
extern int flag_section_anchors;
extern int flag_sel_sched_pipelining;
extern int flag_sel_sched_pipelining_outer_loops;
extern int flag_sel_sched_reschedule_pipelined;
extern int flag_selective_scheduling;
extern int flag_selective_scheduling2;
extern int flag_show_column;
extern int flag_signaling_nans;
extern int flag_signed_zeros;
extern int flag_single_precision_constant;
extern int flag_split_ivs_in_unroller;
extern int flag_split_wide_types;
extern int flag_stack_protect;
extern int flag_store_check;
extern int flag_strict_aliasing;
extern int flag_strict_overflow;
extern int flag_syntax_only;
extern int flag_test_coverage;
extern int flag_thread_jumps;
extern int time_report;
extern int flag_toplevel_reorder;
extern int flag_tracer;
extern int flag_trapping_math;
extern int flag_trapv;
extern int flag_tree_builtin_call_dce;
extern int flag_tree_ccp;
extern int flag_tree_ch;
extern int flag_tree_copy_prop;
extern int flag_tree_copyrename;
extern int flag_tree_cselim;
extern int flag_tree_dce;
extern int flag_tree_dom;
extern int flag_tree_dse;
extern int flag_tree_forwprop;
extern int flag_tree_fre;
extern int flag_tree_loop_distribution;
extern int flag_tree_loop_im;
extern int flag_tree_loop_ivcanon;
extern int flag_tree_loop_linear;
extern int flag_tree_loop_optimize;
extern int flag_tree_live_range_split;
extern int flag_tree_parallelize_loops;
extern int flag_tree_phiprop;
extern int flag_tree_pre;
extern int flag_tree_pta;
extern int flag_tree_reassoc;
extern int flag_tree_scev_cprop;
extern int flag_tree_sink;
extern int flag_tree_slp_vectorize;
extern int flag_tree_sra;
extern int flag_tree_switch_conversion;
extern int flag_tree_ter;
extern int flag_tree_vect_loop_version;
extern int flag_tree_vectorize;
extern int flag_tree_vrp;
extern int flag_unit_at_a_time;
extern int flag_unroll_all_loops;
extern int flag_unroll_loops;
extern int flag_unsafe_loop_optimizations;
extern int flag_unsafe_math_optimizations;
extern int flag_unswitch_loops;
extern int flag_unwind_tables;
extern int flag_use_atomic_builtins;
extern int flag_use_boehm_gc;
extern int flag_use_divide_subroutine;
extern int flag_var_tracking;
extern int flag_var_tracking_assignments;
extern int flag_var_tracking_assignments_toggle;
extern int flag_var_tracking_uninit;
extern int flag_variable_expansion_in_unroller;
extern int flag_vect_cost_model;
extern int flag_verbose_asm;
extern int flag_visibility_ms_compat;
extern int flag_value_profile_transformations;
extern int flag_web;
extern int flag_whole_program;
extern int flag_whopr;
extern int flag_wpa;
extern int flag_wrapv;
extern int flag_zero_initialized_in_bss;
extern int dwarf_version;
extern int dwarf_strict;
extern int flag_gtoggle;
extern int ix86_isa_flags;
extern const char *ix86_abi_string;
extern const char *ix86_align_funcs_string;
extern const char *ix86_align_jumps_string;
extern const char *ix86_align_loops_string;
extern const char *ix86_arch_string;
extern const char *ix86_asm_string;
extern const char *ix86_branch_cost_string;
extern const char *ix86_cmodel_string;
extern int ix86_force_drap;
extern const char *ix86_fpmath_string;
extern int linux_uclibc;
extern const char *ix86_incoming_stack_boundary_string;
extern const char *ix86_section_threshold_string;
extern const char *ix87_precision_string;
extern const char *ix86_preferred_stack_boundary_string;
extern const char *ix86_regparm_string;
extern int ix86_sse2avx;
extern int ix86_force_align_arg_pointer;
extern const char *ix86_stringop_string;
extern const char *ix86_tls_dialect_string;
extern const char *ix86_tune_string;
extern const char *ix86_veclibabi_string;
extern int pedantic;
extern int quiet_flag;
extern int version_flag;
extern int inhibit_warnings;




struct cl_optimization
{
  int align_functions;
  int align_jumps;
  int align_labels;
  int align_loops;
  int flag_sched_stalled_insns;
  int flag_sched_stalled_insns_dep;
  unsigned char optimize;
  unsigned char optimize_size;
  signed char flag_argument_noalias;
  signed char flag_asynchronous_unwind_tables;
  signed char flag_branch_on_count_reg;
  signed char flag_branch_probabilities;
  signed char flag_branch_target_load_optimize;
  signed char flag_branch_target_load_optimize2;
  signed char flag_btr_bb_exclusive;
  signed char flag_caller_saves;
  signed char flag_no_common;
  signed char flag_conserve_stack;
  signed char flag_cprop_registers;
  signed char flag_crossjumping;
  signed char flag_cse_follow_jumps;
  signed char flag_cx_fortran_rules;
  signed char flag_cx_limited_range;
  signed char flag_data_sections;
  signed char flag_dce;
  signed char flag_defer_pop;
  signed char flag_delayed_branch;
  signed char flag_delete_null_pointer_checks;
  signed char flag_dse;
  signed char flag_early_inlining;
  signed char flag_exceptions;
  signed char flag_expensive_optimizations;
  signed char flag_finite_math_only;
  signed char flag_float_store;
  signed char flag_forward_propagate;
  signed char flag_gcse;
  signed char flag_gcse_after_reload;
  signed char flag_gcse_las;
  signed char flag_gcse_lm;
  signed char flag_gcse_sm;
  signed char flag_graphite_identity;
  signed char flag_guess_branch_prob;
  signed char flag_if_conversion;
  signed char flag_if_conversion2;
  signed char flag_inline_functions;
  signed char flag_inline_functions_called_once;
  signed char flag_inline_small_functions;
  signed char flag_ipa_cp;
  signed char flag_ipa_cp_clone;
  signed char flag_ipa_matrix_reorg;
  signed char flag_ipa_pta;
  signed char flag_ipa_pure_const;
  signed char flag_ipa_reference;
  signed char flag_ipa_sra;
  signed char flag_ipa_type_escape;
  signed char flag_ivopts;
  signed char flag_jump_tables;
  signed char flag_loop_block;
  signed char flag_loop_interchange;
  signed char flag_loop_parallelize_all;
  signed char flag_loop_strip_mine;
  signed char flag_lto_report;
  signed char flag_ltrans;
  signed char flag_errno_math;
  signed char flag_merge_constants;
  signed char flag_modulo_sched;
  signed char flag_move_loop_invariants;
  signed char flag_non_call_exceptions;
  signed char flag_omit_frame_pointer;
  signed char flag_regmove;
  signed char flag_optimize_sibling_calls;
  signed char flag_pack_struct;
  signed char flag_peel_loops;
  signed char flag_no_peephole;
  signed char flag_peephole2;
  signed char flag_predictive_commoning;
  signed char flag_prefetch_loop_arrays;
  signed char flag_pcc_struct_return;
  signed char flag_rename_registers;
  signed char flag_reorder_blocks;
  signed char flag_reorder_blocks_and_partition;
  signed char flag_reorder_functions;
  signed char flag_rerun_cse_after_loop;
  signed char flag_resched_modulo_sched;
  signed char flag_rounding_math;
  signed char flag_sched_critical_path_heuristic;
  signed char flag_sched_dep_count_heuristic;
  signed char flag_sched_group_heuristic;
  signed char flag_schedule_interblock;
  signed char flag_sched_last_insn_heuristic;
  signed char flag_sched_pressure;
  signed char flag_sched_rank_heuristic;
  signed char flag_schedule_speculative;
  signed char flag_sched_spec_insn_heuristic;
  signed char flag_schedule_speculative_load;
  signed char flag_schedule_speculative_load_dangerous;
  signed char flag_sched2_use_superblocks;
  signed char flag_schedule_insns;
  signed char flag_schedule_insns_after_reload;
  signed char flag_section_anchors;
  signed char flag_sel_sched_pipelining;
  signed char flag_sel_sched_pipelining_outer_loops;
  signed char flag_sel_sched_reschedule_pipelined;
  signed char flag_selective_scheduling;
  signed char flag_selective_scheduling2;
  signed char flag_signaling_nans;
  signed char flag_signed_zeros;
  signed char flag_single_precision_constant;
  signed char flag_split_ivs_in_unroller;
  signed char flag_split_wide_types;
  signed char flag_strict_aliasing;
  signed char flag_thread_jumps;
  signed char flag_toplevel_reorder;
  signed char flag_trapping_math;
  signed char flag_trapv;
  signed char flag_tree_builtin_call_dce;
  signed char flag_tree_ccp;
  signed char flag_tree_ch;
  signed char flag_tree_copy_prop;
  signed char flag_tree_copyrename;
  signed char flag_tree_cselim;
  signed char flag_tree_dce;
  signed char flag_tree_dom;
  signed char flag_tree_dse;
  signed char flag_tree_forwprop;
  signed char flag_tree_fre;
  signed char flag_tree_loop_distribution;
  signed char flag_tree_loop_im;
  signed char flag_tree_loop_ivcanon;
  signed char flag_tree_loop_linear;
  signed char flag_tree_loop_optimize;
  signed char flag_tree_live_range_split;
  signed char flag_tree_phiprop;
  signed char flag_tree_pre;
  signed char flag_tree_pta;
  signed char flag_tree_reassoc;
  signed char flag_tree_scev_cprop;
  signed char flag_tree_sink;
  signed char flag_tree_slp_vectorize;
  signed char flag_tree_sra;
  signed char flag_tree_switch_conversion;
  signed char flag_tree_ter;
  signed char flag_tree_vect_loop_version;
  signed char flag_tree_vectorize;
  signed char flag_tree_vrp;
  signed char flag_unit_at_a_time;
  signed char flag_unroll_all_loops;
  signed char flag_unroll_loops;
  signed char flag_unsafe_loop_optimizations;
  signed char flag_unsafe_math_optimizations;
  signed char flag_unswitch_loops;
  signed char flag_unwind_tables;
  signed char flag_var_tracking;
  signed char flag_var_tracking_assignments;
  signed char flag_var_tracking_assignments_toggle;
  signed char flag_var_tracking_uninit;
  signed char flag_variable_expansion_in_unroller;
  signed char flag_vect_cost_model;
  signed char flag_value_profile_transformations;
  signed char flag_web;
  signed char flag_whole_program;
  signed char flag_wpa;
  signed char flag_wrapv;
};


struct cl_target_option
{
  int ix86_isa_flags_explicit;
  int target_flags_explicit;
  int target_flags;
  int ix86_isa_flags;
  unsigned char arch;
  unsigned char arch_specified;
  unsigned char branch_cost;
  unsigned char fpmath;
  unsigned char schedule;
  unsigned char tune;
  unsigned char tune_defaulted;
};



extern void cl_optimization_save (struct cl_optimization *);


extern void cl_optimization_restore (struct cl_optimization *);


extern void cl_optimization_print (FILE *, int, struct cl_optimization *);


extern void cl_target_option_save (struct cl_target_option *);


extern void cl_target_option_restore (struct cl_target_option *);


extern void cl_target_option_print (FILE *, int, struct cl_target_option *);
# 723 "./options.h"
enum opt_code
{
  OPT__help,
  OPT__help_,
  OPT__output_pch_,
  OPT__param,
  OPT__target_help,
  OPT__version,
  OPT_A,
  OPT_C,
  OPT_CC,
  OPT_D,
  OPT_E,
  OPT_F,
  OPT_G,
  OPT_H,
  OPT_I,
  OPT_J,
  OPT_M,
  OPT_MD,
  OPT_MD_,
  OPT_MF,
  OPT_MG,
  OPT_MM,
  OPT_MMD,
  OPT_MMD_,
  OPT_MP,
  OPT_MQ,
  OPT_MT,
  OPT_O,
  OPT_Os,
  OPT_P,
  OPT_U,
  OPT_W,
  OPT_Wabi,
  OPT_Waddress,
  OPT_Waggregate_return,
  OPT_Waliasing,
  OPT_Walign_commons,
  OPT_Wall,
  OPT_Wall_deprecation,
  OPT_Wall_javadoc,
  OPT_Wampersand,
  OPT_Warray_bounds,
  OPT_Warray_temporaries,
  OPT_Wassert_identifier,
  OPT_Wassign_intercept,
  OPT_Wattributes,
  OPT_Wbad_function_cast,
  OPT_Wboxing,
  OPT_Wbuiltin_macro_redefined,
  OPT_Wc___compat,
  OPT_Wc__0x_compat,
  OPT_Wcast_align,
  OPT_Wcast_qual,
  OPT_Wchar_concat,
  OPT_Wchar_subscripts,
  OPT_Wcharacter_truncation,
  OPT_Wclobbered,
  OPT_Wcomment,
  OPT_Wcomments,
  OPT_Wcondition_assign,
  OPT_Wconstructor_name,
  OPT_Wconversion,
  OPT_Wconversion_null,
  OPT_Wcoverage_mismatch,
  OPT_Wctor_dtor_privacy,
  OPT_Wdeclaration_after_statement,
  OPT_Wdep_ann,
  OPT_Wdeprecated,
  OPT_Wdeprecated_declarations,
  OPT_Wdisabled_optimization,
  OPT_Wdiscouraged,
  OPT_Wdiv_by_zero,
  OPT_Weffc__,
  OPT_Wempty_block,
  OPT_Wempty_body,
  OPT_Wendif_labels,
  OPT_Wenum_compare,
  OPT_Wenum_identifier,
  OPT_Wenum_switch,
  OPT_Werror,
  OPT_Werror_implicit_function_declaration,
  OPT_Werror_,
  OPT_Wextra,
  OPT_Wextraneous_semicolon,
  OPT_Wfallthrough,
  OPT_Wfatal_errors,
  OPT_Wfield_hiding,
  OPT_Wfinal_bound,
  OPT_Wfinally,
  OPT_Wfloat_equal,
  OPT_Wforbidden,
  OPT_Wformat,
  OPT_Wformat_contains_nul,
  OPT_Wformat_extra_args,
  OPT_Wformat_nonliteral,
  OPT_Wformat_security,
  OPT_Wformat_y2k,
  OPT_Wformat_zero_length,
  OPT_Wformat_,
  OPT_Wframe_larger_than_,
  OPT_Whiding,
  OPT_Wignored_qualifiers,
  OPT_Wimplicit,
  OPT_Wimplicit_function_declaration,
  OPT_Wimplicit_int,
  OPT_Wimplicit_interface,
  OPT_Wimplicit_procedure,
  OPT_Wimport,
  OPT_Windirect_static,
  OPT_Winit_self,
  OPT_Winline,
  OPT_Wint_to_pointer_cast,
  OPT_Wintf_annotation,
  OPT_Wintf_non_inherited,
  OPT_Wintrinsic_shadow,
  OPT_Wintrinsics_std,
  OPT_Winvalid_offsetof,
  OPT_Winvalid_pch,
  OPT_Wjavadoc,
  OPT_Wjump_misses_init,
  OPT_Wlarger_than_,
  OPT_Wlarger_than_eq,
  OPT_Wline_truncation,
  OPT_Wlocal_hiding,
  OPT_Wlogical_op,
  OPT_Wlong_long,
  OPT_Wmain,
  OPT_Wmasked_catch_block,
  OPT_Wmissing_braces,
  OPT_Wmissing_declarations,
  OPT_Wmissing_field_initializers,
  OPT_Wmissing_format_attribute,
  OPT_Wmissing_include_dirs,
  OPT_Wmissing_noreturn,
  OPT_Wmissing_parameter_type,
  OPT_Wmissing_prototypes,
  OPT_Wmudflap,
  OPT_Wmultichar,
  OPT_Wnested_externs,
  OPT_Wnls,
  OPT_Wno_effect_assign,
  OPT_Wnon_template_friend,
  OPT_Wnon_virtual_dtor,
  OPT_Wnonnull,
  OPT_Wnormalized_,
  OPT_Wnull,
  OPT_Wold_style_cast,
  OPT_Wold_style_declaration,
  OPT_Wold_style_definition,
  OPT_Wout_of_date,
  OPT_Wover_ann,
  OPT_Woverflow,
  OPT_Woverlength_strings,
  OPT_Woverloaded_virtual,
  OPT_Woverride_init,
  OPT_Wpacked,
  OPT_Wpacked_bitfield_compat,
  OPT_Wpadded,
  OPT_Wparam_assign,
  OPT_Wparentheses,
  OPT_Wpkg_default_method,
  OPT_Wpmf_conversions,
  OPT_Wpointer_arith,
  OPT_Wpointer_sign,
  OPT_Wpointer_to_int_cast,
  OPT_Wpragmas,
  OPT_Wprotocol,
  OPT_Wpsabi,
  OPT_Wraw,
  OPT_Wredundant_decls,
  OPT_Wredundant_modifiers,
  OPT_Wreorder,
  OPT_Wreturn_type,
  OPT_Wselector,
  OPT_Wsequence_point,
  OPT_Wserial,
  OPT_Wshadow,
  OPT_Wsign_compare,
  OPT_Wsign_conversion,
  OPT_Wsign_promo,
  OPT_Wspecial_param_hiding,
  OPT_Wstack_protector,
  OPT_Wstatic_access,
  OPT_Wstatic_receiver,
  OPT_Wstrict_aliasing,
  OPT_Wstrict_aliasing_,
  OPT_Wstrict_null_sentinel,
  OPT_Wstrict_overflow,
  OPT_Wstrict_overflow_,
  OPT_Wstrict_prototypes,
  OPT_Wstrict_selector_match,
  OPT_Wsuppress,
  OPT_Wsurprising,
  OPT_Wswitch,
  OPT_Wswitch_default,
  OPT_Wswitch_enum,
  OPT_Wsync_nand,
  OPT_Wsynth,
  OPT_Wsynthetic_access,
  OPT_Wsystem_headers,
  OPT_Wtabs,
  OPT_Wtasks,
  OPT_Wtraditional,
  OPT_Wtraditional_conversion,
  OPT_Wtrigraphs,
  OPT_Wtype_hiding,
  OPT_Wtype_limits,
  OPT_Wuncheck,
  OPT_Wundeclared_selector,
  OPT_Wundef,
  OPT_Wunderflow,
  OPT_Wuninitialized,
  OPT_Wunknown_pragmas,
  OPT_Wunnecessary_else,
  OPT_Wunqualified_field,
  OPT_Wunreachable_code,
  OPT_Wunsafe_loop_optimizations,
  OPT_Wunsuffixed_float_constants,
  OPT_Wunused,
  OPT_Wunused_argument,
  OPT_Wunused_function,
  OPT_Wunused_import,
  OPT_Wunused_label,
  OPT_Wunused_local,
  OPT_Wunused_macros,
  OPT_Wunused_parameter,
  OPT_Wunused_private,
  OPT_Wunused_result,
  OPT_Wunused_thrown,
  OPT_Wunused_value,
  OPT_Wunused_variable,
  OPT_Wuseless_type_check,
  OPT_Wvarargs_cast,
  OPT_Wvariadic_macros,
  OPT_Wvla,
  OPT_Wvolatile_register_var,
  OPT_Wwarning_token,
  OPT_Wwrite_strings,
  OPT_ansi,
  OPT_aux_info,
  OPT_aux_info_,
  OPT_auxbase,
  OPT_auxbase_strip,
  OPT_cpp,
  OPT_d,
  OPT_dumpbase,
  OPT_dumpdir,
  OPT_fCLASSPATH_,
  OPT_fPIC,
  OPT_fPIE,
  OPT_fRTS_,
  OPT_fabi_version_,
  OPT_faccess_control,
  OPT_falign_commons,
  OPT_falign_functions,
  OPT_falign_functions_,
  OPT_falign_jumps,
  OPT_falign_jumps_,
  OPT_falign_labels,
  OPT_falign_labels_,
  OPT_falign_loops,
  OPT_falign_loops_,
  OPT_fall_intrinsics,
  OPT_fall_virtual,
  OPT_fallow_leading_underscore,
  OPT_falt_external_templates,
  OPT_fargument_alias,
  OPT_fargument_noalias,
  OPT_fargument_noalias_anything,
  OPT_fargument_noalias_global,
  OPT_fasm,
  OPT_fassert,
  OPT_fassociative_math,
  OPT_fassume_compiled,
  OPT_fassume_compiled_,
  OPT_fasynchronous_unwind_tables,
  OPT_fauto_inc_dec,
  OPT_fautomatic,
  OPT_faux_classpath,
  OPT_fbackslash,
  OPT_fbacktrace,
  OPT_fblas_matmul_limit_,
  OPT_fbootclasspath_,
  OPT_fbootstrap_classes,
  OPT_fbounds_check,
  OPT_fbranch_count_reg,
  OPT_fbranch_probabilities,
  OPT_fbranch_target_load_optimize,
  OPT_fbranch_target_load_optimize2,
  OPT_fbtr_bb_exclusive,
  OPT_fbuiltin,
  OPT_fbuiltin_,
  OPT_fcall_saved_,
  OPT_fcall_used_,
  OPT_fcaller_saves,
  OPT_fcheck_array_temporaries,
  OPT_fcheck_data_deps,
  OPT_fcheck_new,
  OPT_fcheck_references,
  OPT_fcheck_,
  OPT_fclasspath_,
  OPT_fcommon,
  OPT_fcompare_debug_second,
  OPT_fcompare_debug_,
  OPT_fcompile_resource_,
  OPT_fcond_mismatch,
  OPT_fconserve_space,
  OPT_fconserve_stack,
  OPT_fconstant_string_class_,
  OPT_fconvert_big_endian,
  OPT_fconvert_little_endian,
  OPT_fconvert_native,
  OPT_fconvert_swap,
  OPT_fcprop_registers,
  OPT_fcray_pointer,
  OPT_fcrossjumping,
  OPT_fcse_follow_jumps,
  OPT_fcse_skip_blocks,
  OPT_fcx_fortran_rules,
  OPT_fcx_limited_range,
  OPT_fd_lines_as_code,
  OPT_fd_lines_as_comments,
  OPT_fdata_sections,
  OPT_fdbg_cnt_list,
  OPT_fdbg_cnt_,
  OPT_fdce,
  OPT_fdebug_prefix_map_,
  OPT_fdeduce_init_list,
  OPT_fdefault_double_8,
  OPT_fdefault_inline,
  OPT_fdefault_integer_8,
  OPT_fdefault_real_8,
  OPT_fdefer_pop,
  OPT_fdelayed_branch,
  OPT_fdelete_null_pointer_checks,
  OPT_fdiagnostics_show_location_,
  OPT_fdiagnostics_show_option,
  OPT_fdirectives_only,
  OPT_fdisable_assertions,
  OPT_fdisable_assertions_,
  OPT_fdollar_ok,
  OPT_fdollars_in_identifiers,
  OPT_fdse,
  OPT_fdump_,
  OPT_fdump_core,
  OPT_fdump_final_insns_,
  OPT_fdump_noaddr,
  OPT_fdump_parse_tree,
  OPT_fdump_unnumbered,
  OPT_fdump_unnumbered_links,
  OPT_fdwarf2_cfi_asm,
  OPT_fearly_inlining,
  OPT_felide_constructors,
  OPT_feliminate_dwarf2_dups,
  OPT_feliminate_unused_debug_symbols,
  OPT_feliminate_unused_debug_types,
  OPT_femit_class_debug_always,
  OPT_femit_class_file,
  OPT_femit_class_files,
  OPT_femit_struct_debug_baseonly,
  OPT_femit_struct_debug_detailed_,
  OPT_femit_struct_debug_reduced,
  OPT_fenable_assertions,
  OPT_fenable_assertions_,
  OPT_fenable_icf_debug,
  OPT_fencoding_,
  OPT_fenforce_eh_specs,
  OPT_fenum_int_equiv,
  OPT_fexceptions,
  OPT_fexcess_precision_,
  OPT_fexec_charset_,
  OPT_fexpensive_optimizations,
  OPT_fextdirs_,
  OPT_fextended_identifiers,
  OPT_fexternal_blas,
  OPT_fexternal_templates,
  OPT_ff2c,
  OPT_ffast_math,
  OPT_ffilelist_file,
  OPT_ffinite_math_only,
  OPT_ffixed_,
  OPT_ffixed_form,
  OPT_ffixed_line_length_,
  OPT_ffixed_line_length_none,
  OPT_ffloat_store,
  OPT_ffor_scope,
  OPT_fforce_addr,
  OPT_fforce_classes_archive_check,
  OPT_fforward_propagate,
  OPT_ffpe_trap_,
  OPT_ffree_form,
  OPT_ffree_line_length_,
  OPT_ffree_line_length_none,
  OPT_ffreestanding,
  OPT_ffriend_injection,
  OPT_ffunction_cse,
  OPT_ffunction_sections,
  OPT_fgcse,
  OPT_fgcse_after_reload,
  OPT_fgcse_las,
  OPT_fgcse_lm,
  OPT_fgcse_sm,
  OPT_fgnu_keywords,
  OPT_fgnu_runtime,
  OPT_fgnu89_inline,
  OPT_fgraphite,
  OPT_fgraphite_identity,
  OPT_fguess_branch_probability,
  OPT_fguiding_decls,
  OPT_fhandle_exceptions,
  OPT_fhash_synchronization,
  OPT_fhelp,
  OPT_fhelp_,
  OPT_fhonor_std,
  OPT_fhosted,
  OPT_fhuge_objects,
  OPT_fident,
  OPT_fif_conversion,
  OPT_fif_conversion2,
  OPT_fimplement_inlines,
  OPT_fimplicit_inline_templates,
  OPT_fimplicit_none,
  OPT_fimplicit_templates,
  OPT_findirect_classes,
  OPT_findirect_dispatch,
  OPT_findirect_inlining,
  OPT_finhibit_size_directive,
  OPT_finit_character_,
  OPT_finit_integer_,
  OPT_finit_local_zero,
  OPT_finit_logical_,
  OPT_finit_real_,
  OPT_finline,
  OPT_finline_functions,
  OPT_finline_functions_called_once,
  OPT_finline_limit_,
  OPT_finline_limit_eq,
  OPT_finline_small_functions,
  OPT_finput_charset_,
  OPT_finstrument_functions,
  OPT_finstrument_functions_exclude_file_list_,
  OPT_finstrument_functions_exclude_function_list_,
  OPT_fintrinsic_modules_path,
  OPT_fipa_cp,
  OPT_fipa_cp_clone,
  OPT_fipa_matrix_reorg,
  OPT_fipa_pta,
  OPT_fipa_pure_const,
  OPT_fipa_reference,
  OPT_fipa_sra,
  OPT_fipa_struct_reorg,
  OPT_fipa_type_escape,
  OPT_fira_algorithm_,
  OPT_fira_coalesce,
  OPT_fira_loop_pressure,
  OPT_fira_region_,
  OPT_fira_share_save_slots,
  OPT_fira_share_spill_slots,
  OPT_fira_verbose_,
  OPT_fivopts,
  OPT_fjni,
  OPT_fjump_tables,
  OPT_fkeep_inline_functions,
  OPT_fkeep_static_consts,
  OPT_flabels_ok,
  OPT_flax_vector_conversions,
  OPT_fleading_underscore,
  OPT_floop_block,
  OPT_floop_interchange,
  OPT_floop_optimize,
  OPT_floop_parallelize_all,
  OPT_floop_strip_mine,
  OPT_flto,
  OPT_flto_compression_level_,
  OPT_flto_report,
  OPT_fltrans,
  OPT_fltrans_output_list_,
  OPT_fmath_errno,
  OPT_fmax_array_constructor_,
  OPT_fmax_errors_,
  OPT_fmax_identifier_length_,
  OPT_fmax_stack_var_size_,
  OPT_fmax_subrecord_length_,
  OPT_fmem_report,
  OPT_fmerge_all_constants,
  OPT_fmerge_constants,
  OPT_fmerge_debug_strings,
  OPT_fmessage_length_,
  OPT_fmodule_private,
  OPT_fmodulo_sched,
  OPT_fmodulo_sched_allow_regmoves,
  OPT_fmove_loop_invariants,
  OPT_fms_extensions,
  OPT_fmudflap,
  OPT_fmudflapir,
  OPT_fmudflapth,
  OPT_fname_mangling_version_,
  OPT_fnew_abi,
  OPT_fnext_runtime,
  OPT_fnil_receivers,
  OPT_fnon_call_exceptions,
  OPT_fnonansi_builtins,
  OPT_fnonnull_objects,
  OPT_fobjc_call_cxx_cdtors,
  OPT_fobjc_direct_dispatch,
  OPT_fobjc_exceptions,
  OPT_fobjc_gc,
  OPT_fobjc_sjlj_exceptions,
  OPT_fomit_frame_pointer,
  OPT_fopenmp,
  OPT_foperator_names,
  OPT_foptimize_register_move,
  OPT_foptimize_sibling_calls,
  OPT_foptimize_static_class_initialization,
  OPT_foptional_diags,
  OPT_foutput_class_dir_,
  OPT_fpack_derived,
  OPT_fpack_struct,
  OPT_fpack_struct_,
  OPT_fpcc_struct_return,
  OPT_fpch_deps,
  OPT_fpch_preprocess,
  OPT_fpeel_loops,
  OPT_fpeephole,
  OPT_fpeephole2,
  OPT_fpermissive,
  OPT_fpic,
  OPT_fpie,
  OPT_fplugin_arg_,
  OPT_fplugin_,
  OPT_fpost_ipa_mem_report,
  OPT_fpre_ipa_mem_report,
  OPT_fpredictive_commoning,
  OPT_fprefetch_loop_arrays,
  OPT_fpreprocessed,
  OPT_fpretty_templates,
  OPT_fprofile,
  OPT_fprofile_arcs,
  OPT_fprofile_correction,
  OPT_fprofile_dir_,
  OPT_fprofile_generate,
  OPT_fprofile_generate_,
  OPT_fprofile_use,
  OPT_fprofile_use_,
  OPT_fprofile_values,
  OPT_fprotect_parens,
  OPT_frandom_seed,
  OPT_frandom_seed_,
  OPT_frange_check,
  OPT_freciprocal_math,
  OPT_frecord_gcc_switches,
  OPT_frecord_marker_4,
  OPT_frecord_marker_8,
  OPT_frecursive,
  OPT_freduced_reflection,
  OPT_freg_struct_return,
  OPT_fregmove,
  OPT_frename_registers,
  OPT_freorder_blocks,
  OPT_freorder_blocks_and_partition,
  OPT_freorder_functions,
  OPT_frepack_arrays,
  OPT_freplace_objc_classes,
  OPT_frepo,
  OPT_frerun_cse_after_loop,
  OPT_frerun_loop_opt,
  OPT_freschedule_modulo_scheduled_loops,
  OPT_fresolution,
  OPT_frounding_math,
  OPT_frtti,
  OPT_fsaw_java_file,
  OPT_fsched_critical_path_heuristic,
  OPT_fsched_dep_count_heuristic,
  OPT_fsched_group_heuristic,
  OPT_fsched_interblock,
  OPT_fsched_last_insn_heuristic,
  OPT_fsched_pressure,
  OPT_fsched_rank_heuristic,
  OPT_fsched_spec,
  OPT_fsched_spec_insn_heuristic,
  OPT_fsched_spec_load,
  OPT_fsched_spec_load_dangerous,
  OPT_fsched_stalled_insns,
  OPT_fsched_stalled_insns_dep,
  OPT_fsched_stalled_insns_dep_,
  OPT_fsched_stalled_insns_,
  OPT_fsched_verbose_,
  OPT_fsched2_use_superblocks,
  OPT_fsched2_use_traces,
  OPT_fschedule_insns,
  OPT_fschedule_insns2,
  OPT_fsecond_underscore,
  OPT_fsection_anchors,
  OPT_fsee,
  OPT_fsel_sched_pipelining,
  OPT_fsel_sched_pipelining_outer_loops,
  OPT_fsel_sched_reschedule_pipelined,
  OPT_fselective_scheduling,
  OPT_fselective_scheduling2,
  OPT_fshort_double,
  OPT_fshort_enums,
  OPT_fshort_wchar,
  OPT_fshow_column,
  OPT_fsign_zero,
  OPT_fsignaling_nans,
  OPT_fsigned_bitfields,
  OPT_fsigned_char,
  OPT_fsigned_zeros,
  OPT_fsingle_precision_constant,
  OPT_fsource_filename_,
  OPT_fsource_,
  OPT_fsplit_ivs_in_unroller,
  OPT_fsplit_wide_types,
  OPT_fsquangle,
  OPT_fstack_check,
  OPT_fstack_check_,
  OPT_fstack_limit,
  OPT_fstack_limit_register_,
  OPT_fstack_limit_symbol_,
  OPT_fstack_protector,
  OPT_fstack_protector_all,
  OPT_fstats,
  OPT_fstore_check,
  OPT_fstrength_reduce,
  OPT_fstrict_aliasing,
  OPT_fstrict_overflow,
  OPT_fstrict_prototype,
  OPT_fsyntax_only,
  OPT_ftabstop_,
  OPT_ftarget_help,
  OPT_ftarget_,
  OPT_ftemplate_depth_,
  OPT_ftemplate_depth_eq,
  OPT_ftest_coverage,
  OPT_fthis_is_variable,
  OPT_fthread_jumps,
  OPT_fthreadsafe_statics,
  OPT_ftime_report,
  OPT_ftls_model_,
  OPT_ftoplevel_reorder,
  OPT_ftracer,
  OPT_ftrapping_math,
  OPT_ftrapv,
  OPT_ftree_builtin_call_dce,
  OPT_ftree_ccp,
  OPT_ftree_ch,
  OPT_ftree_copy_prop,
  OPT_ftree_copyrename,
  OPT_ftree_cselim,
  OPT_ftree_dce,
  OPT_ftree_dominator_opts,
  OPT_ftree_dse,
  OPT_ftree_forwprop,
  OPT_ftree_fre,
  OPT_ftree_loop_distribution,
  OPT_ftree_loop_im,
  OPT_ftree_loop_ivcanon,
  OPT_ftree_loop_linear,
  OPT_ftree_loop_optimize,
  OPT_ftree_lrs,
  OPT_ftree_parallelize_loops_,
  OPT_ftree_phiprop,
  OPT_ftree_pre,
  OPT_ftree_pta,
  OPT_ftree_reassoc,
  OPT_ftree_salias,
  OPT_ftree_scev_cprop,
  OPT_ftree_sink,
  OPT_ftree_slp_vectorize,
  OPT_ftree_sra,
  OPT_ftree_store_ccp,
  OPT_ftree_store_copy_prop,
  OPT_ftree_switch_conversion,
  OPT_ftree_ter,
  OPT_ftree_vect_loop_version,
  OPT_ftree_vectorize,
  OPT_ftree_vectorizer_verbose_,
  OPT_ftree_vrp,
  OPT_funderscoring,
  OPT_funit_at_a_time,
  OPT_funroll_all_loops,
  OPT_funroll_loops,
  OPT_funsafe_loop_optimizations,
  OPT_funsafe_math_optimizations,
  OPT_funsigned_bitfields,
  OPT_funsigned_char,
  OPT_funswitch_loops,
  OPT_funwind_tables,
  OPT_fuse_atomic_builtins,
  OPT_fuse_boehm_gc,
  OPT_fuse_cxa_atexit,
  OPT_fuse_cxa_get_exception_ptr,
  OPT_fuse_divide_subroutine,
  OPT_fuse_linker_plugin,
  OPT_fvar_tracking,
  OPT_fvar_tracking_assignments,
  OPT_fvar_tracking_assignments_toggle,
  OPT_fvar_tracking_uninit,
  OPT_fvariable_expansion_in_unroller,
  OPT_fvect_cost_model,
  OPT_fverbose_asm,
  OPT_fversion,
  OPT_fvisibility_inlines_hidden,
  OPT_fvisibility_ms_compat,
  OPT_fvisibility_,
  OPT_fvpt,
  OPT_fvtable_gc,
  OPT_fvtable_thunks,
  OPT_fweak,
  OPT_fweb,
  OPT_fwhole_file,
  OPT_fwhole_program,
  OPT_fwhopr,
  OPT_fwide_exec_charset_,
  OPT_fworking_directory,
  OPT_fwpa,
  OPT_fwrapv,
  OPT_fxref,
  OPT_fzero_initialized_in_bss,
  OPT_fzero_link,
  OPT_g,
  OPT_gant,
  OPT_gcoff,
  OPT_gdwarfplus,
  OPT_gdwarf_,
  OPT_gen_decls,
  OPT_ggdb,
  OPT_gnat,
  OPT_gnatO,
  OPT_gno_strict_dwarf,
  OPT_gstabs,
  OPT_gstabs_,
  OPT_gstrict_dwarf,
  OPT_gtoggle,
  OPT_gvms,
  OPT_gxcoff,
  OPT_gxcoff_,
  OPT_idirafter,
  OPT_imacros,
  OPT_imultilib,
  OPT_include,
  OPT_iprefix,
  OPT_iquote,
  OPT_isysroot,
  OPT_isystem,
  OPT_iwithprefix,
  OPT_iwithprefixbefore,
  OPT_lang_asm,
  OPT_lang_objc,
  OPT_m128bit_long_double,
  OPT_m32,
  OPT_m3dnow,
  OPT_m3dnowa,
  OPT_m64,
  OPT_m80387,
  OPT_m96bit_long_double,
  OPT_mabi_,
  OPT_mabm,
  OPT_maccumulate_outgoing_args,
  OPT_maes,
  OPT_malign_double,
  OPT_malign_functions_,
  OPT_malign_jumps_,
  OPT_malign_loops_,
  OPT_malign_stringops,
  OPT_march_,
  OPT_masm_,
  OPT_mavx,
  OPT_mbranch_cost_,
  OPT_mcld,
  OPT_mcmodel_,
  OPT_mcrc32,
  OPT_mcx16,
  OPT_mfancy_math_387,
  OPT_mfma,
  OPT_mfma4,
  OPT_mforce_drap,
  OPT_mfp_ret_in_387,
  OPT_mfpmath_,
  OPT_mfused_madd,
  OPT_mglibc,
  OPT_mhard_float,
  OPT_mieee_fp,
  OPT_mincoming_stack_boundary_,
  OPT_minline_all_stringops,
  OPT_minline_stringops_dynamically,
  OPT_mintel_syntax,
  OPT_mlarge_data_threshold_,
  OPT_mlwp,
  OPT_mmmx,
  OPT_mmovbe,
  OPT_mms_bitfields,
  OPT_mno_align_stringops,
  OPT_mno_fancy_math_387,
  OPT_mno_push_args,
  OPT_mno_red_zone,
  OPT_mno_sse4,
  OPT_momit_leaf_frame_pointer,
  OPT_mpc,
  OPT_mpclmul,
  OPT_mpopcnt,
  OPT_mpreferred_stack_boundary_,
  OPT_mpush_args,
  OPT_mrecip,
  OPT_mred_zone,
  OPT_mregparm_,
  OPT_mrtd,
  OPT_msahf,
  OPT_msoft_float,
  OPT_msse,
  OPT_msse2,
  OPT_msse2avx,
  OPT_msse3,
  OPT_msse4,
  OPT_msse4_1,
  OPT_msse4_2,
  OPT_msse4a,
  OPT_msseregparm,
  OPT_mssse3,
  OPT_mstack_arg_probe,
  OPT_mstackrealign,
  OPT_mstringop_strategy_,
  OPT_mtls_dialect_,
  OPT_mtls_direct_seg_refs,
  OPT_mtune_,
  OPT_muclibc,
  OPT_mveclibabi_,
  OPT_mxop,
  OPT_nocpp,
  OPT_nostdinc,
  OPT_nostdinc__,
  OPT_nostdlib,
  OPT_o,
  OPT_p,
  OPT_pedantic,
  OPT_pedantic_errors,
  OPT_pie,
  OPT_print_objc_runtime_info,
  OPT_print_pch_checksum,
  OPT_quiet,
  OPT_remap,
  OPT_shared,
  OPT_static_libgfortran,
  OPT_std_c__0x,
  OPT_std_c__98,
  OPT_std_c89,
  OPT_std_c90,
  OPT_std_c99,
  OPT_std_c9x,
  OPT_std_f2003,
  OPT_std_f2008,
  OPT_std_f95,
  OPT_std_gnu,
  OPT_std_gnu__0x,
  OPT_std_gnu__98,
  OPT_std_gnu89,
  OPT_std_gnu90,
  OPT_std_gnu99,
  OPT_std_gnu9x,
  OPT_std_iso9899_1990,
  OPT_std_iso9899_199409,
  OPT_std_iso9899_1999,
  OPT_std_iso9899_199x,
  OPT_std_legacy,
  OPT_traditional_cpp,
  OPT_trigraphs,
  OPT_undef,
  OPT_v,
  OPT_version,
  OPT_w,
  N_OPTS
};
# 8 "./tm.h" 2
# 1 "../../gcc/config/vxworks-dummy.h" 1
# 9 "./tm.h" 2
# 1 "../../gcc/config/i386/i386.h" 1
# 75 "../../gcc/config/i386/i386.h"
# 1 "../../gcc/config/vxworks-dummy.h" 1
# 76 "../../gcc/config/i386/i386.h" 2


enum stringop_alg
{
   no_stringop,
   libcall,
   rep_prefix_1_byte,
   rep_prefix_4_byte,
   rep_prefix_8_byte,
   loop_1_byte,
   loop,
   unrolled_loop
};
# 101 "../../gcc/config/i386/i386.h"
struct stringop_algs
{
  const enum stringop_alg unknown_size;
  const struct stringop_strategy {
    const int max;
    const enum stringop_alg alg;
  } size [4];
};



struct processor_costs {
  const int add;
  const int lea;
  const int shift_var;
  const int shift_const;
  const int mult_init[5];

  const int mult_bit;
  const int divide[5];

  int movsx;
  int movzx;
  const int large_insn;
  const int move_ratio;

  const int movzbl_load;
  const int int_load[3];


  const int int_store[3];

  const int fp_move;
  const int fp_load[3];

  const int fp_store[3];

  const int mmx_move;
  const int mmx_load[2];

  const int mmx_store[2];

  const int sse_move;
  const int sse_load[3];

  const int sse_store[3];

  const int mmxsse_to_integer;

  const int l1_cache_size;
  const int l2_cache_size;
  const int prefetch_block;
  const int simultaneous_prefetches;

  const int branch_cost;
  const int fadd;
  const int fmul;
  const int fdiv;
  const int fabs;
  const int fchs;
  const int fsqrt;


  struct stringop_algs memcpy[2], memset[2];
  const int scalar_stmt_cost;

  const int scalar_load_cost;
  const int scalar_store_cost;
  const int vec_stmt_cost;


  const int vec_to_scalar_cost;
  const int scalar_to_vec_cost;
  const int vec_align_load_cost;
  const int vec_unalign_load_cost;
  const int vec_store_cost;
  const int cond_taken_branch_cost;

  const int cond_not_taken_branch_cost;

};

extern const struct processor_costs *ix86_cost;
extern const struct processor_costs ix86_size_cost;
# 246 "../../gcc/config/i386/i386.h"
enum ix86_tune_indices {
  X86_TUNE_USE_LEAVE,
  X86_TUNE_PUSH_MEMORY,
  X86_TUNE_ZERO_EXTEND_WITH_AND,
  X86_TUNE_UNROLL_STRLEN,
  X86_TUNE_DEEP_BRANCH_PREDICTION,
  X86_TUNE_BRANCH_PREDICTION_HINTS,
  X86_TUNE_DOUBLE_WITH_ADD,
  X86_TUNE_USE_SAHF,
  X86_TUNE_MOVX,
  X86_TUNE_PARTIAL_REG_STALL,
  X86_TUNE_PARTIAL_FLAG_REG_STALL,
  X86_TUNE_USE_HIMODE_FIOP,
  X86_TUNE_USE_SIMODE_FIOP,
  X86_TUNE_USE_MOV0,
  X86_TUNE_USE_CLTD,
  X86_TUNE_USE_XCHGB,
  X86_TUNE_SPLIT_LONG_MOVES,
  X86_TUNE_READ_MODIFY_WRITE,
  X86_TUNE_READ_MODIFY,
  X86_TUNE_PROMOTE_QIMODE,
  X86_TUNE_FAST_PREFIX,
  X86_TUNE_SINGLE_STRINGOP,
  X86_TUNE_QIMODE_MATH,
  X86_TUNE_HIMODE_MATH,
  X86_TUNE_PROMOTE_QI_REGS,
  X86_TUNE_PROMOTE_HI_REGS,
  X86_TUNE_ADD_ESP_4,
  X86_TUNE_ADD_ESP_8,
  X86_TUNE_SUB_ESP_4,
  X86_TUNE_SUB_ESP_8,
  X86_TUNE_INTEGER_DFMODE_MOVES,
  X86_TUNE_PARTIAL_REG_DEPENDENCY,
  X86_TUNE_SSE_PARTIAL_REG_DEPENDENCY,
  X86_TUNE_SSE_UNALIGNED_MOVE_OPTIMAL,
  X86_TUNE_SSE_SPLIT_REGS,
  X86_TUNE_SSE_TYPELESS_STORES,
  X86_TUNE_SSE_LOAD0_BY_PXOR,
  X86_TUNE_MEMORY_MISMATCH_STALL,
  X86_TUNE_PROLOGUE_USING_MOVE,
  X86_TUNE_EPILOGUE_USING_MOVE,
  X86_TUNE_SHIFT1,
  X86_TUNE_USE_FFREEP,
  X86_TUNE_INTER_UNIT_MOVES,
  X86_TUNE_INTER_UNIT_CONVERSIONS,
  X86_TUNE_FOUR_JUMP_LIMIT,
  X86_TUNE_SCHEDULE,
  X86_TUNE_USE_BT,
  X86_TUNE_USE_INCDEC,
  X86_TUNE_PAD_RETURNS,
  X86_TUNE_EXT_80387_CONSTANTS,
  X86_TUNE_SHORTEN_X87_SSE,
  X86_TUNE_AVOID_VECTOR_DECODE,
  X86_TUNE_PROMOTE_HIMODE_IMUL,
  X86_TUNE_SLOW_IMUL_IMM32_MEM,
  X86_TUNE_SLOW_IMUL_IMM8,
  X86_TUNE_MOVE_M1_VIA_OR,
  X86_TUNE_NOT_UNPAIRABLE,
  X86_TUNE_NOT_VECTORMODE,
  X86_TUNE_USE_VECTOR_FP_CONVERTS,
  X86_TUNE_USE_VECTOR_CONVERTS,
  X86_TUNE_FUSE_CMP_AND_BRANCH,
  X86_TUNE_OPT_AGU,

  X86_TUNE_LAST
};

extern unsigned char ix86_tune_features[X86_TUNE_LAST];
# 399 "../../gcc/config/i386/i386.h"
enum ix86_arch_indices {
  X86_ARCH_CMOVE,
  X86_ARCH_CMPXCHG,
  X86_ARCH_CMPXCHG8B,
  X86_ARCH_XADD,
  X86_ARCH_BSWAP,

  X86_ARCH_LAST
};

extern unsigned char ix86_arch_features[X86_ARCH_LAST];
# 419 "../../gcc/config/i386/i386.h"
extern int x86_prefetch_sse;
# 434 "../../gcc/config/i386/i386.h"
extern int ix86_isa_flags;
# 445 "../../gcc/config/i386/i386.h"
extern tree x86_mfence;
# 474 "../../gcc/config/i386/i386.h"
enum calling_abi
{
  SYSV_ABI = 0,
  MS_ABI = 1
};


extern enum calling_abi ix86_abi;
# 510 "../../gcc/config/i386/i386.h"
extern const char *host_detect_local_cpu (int argc, const char **argv);
# 568 "../../gcc/config/i386/i386.h"
enum target_cpu_default
{
  TARGET_CPU_DEFAULT_generic = 0,

  TARGET_CPU_DEFAULT_i386,
  TARGET_CPU_DEFAULT_i486,
  TARGET_CPU_DEFAULT_pentium,
  TARGET_CPU_DEFAULT_pentium_mmx,
  TARGET_CPU_DEFAULT_pentiumpro,
  TARGET_CPU_DEFAULT_pentium2,
  TARGET_CPU_DEFAULT_pentium3,
  TARGET_CPU_DEFAULT_pentium4,
  TARGET_CPU_DEFAULT_pentium_m,
  TARGET_CPU_DEFAULT_prescott,
  TARGET_CPU_DEFAULT_nocona,
  TARGET_CPU_DEFAULT_core2,
  TARGET_CPU_DEFAULT_atom,

  TARGET_CPU_DEFAULT_geode,
  TARGET_CPU_DEFAULT_k6,
  TARGET_CPU_DEFAULT_k6_2,
  TARGET_CPU_DEFAULT_k6_3,
  TARGET_CPU_DEFAULT_athlon,
  TARGET_CPU_DEFAULT_athlon_sse,
  TARGET_CPU_DEFAULT_k8,
  TARGET_CPU_DEFAULT_amdfam10,

  TARGET_CPU_DEFAULT_max
};
# 1188 "../../gcc/config/i386/i386.h"
enum reg_class
{
  NO_REGS,
  AREG, DREG, CREG, BREG, SIREG, DIREG,
  AD_REGS,
  CLOBBERED_REGS,
  Q_REGS,
  NON_Q_REGS,
  INDEX_REGS,
  LEGACY_REGS,
  GENERAL_REGS,
  FP_TOP_REG, FP_SECOND_REG,
  FLOAT_REGS,
  SSE_FIRST_REG,
  SSE_REGS,
  MMX_REGS,
  FP_TOP_SSE_REGS,
  FP_SECOND_SSE_REGS,
  FLOAT_SSE_REGS,
  FLOAT_INT_REGS,
  INT_SSE_REGS,
  FLOAT_INT_SSE_REGS,
  ALL_REGS, LIM_REG_CLASSES
};
# 1579 "../../gcc/config/i386/i386.h"
typedef struct ix86_args {
  int words;
  int nregs;
  int regno;
  int fastcall;
  int sse_words;
  int sse_nregs;
  int warn_avx;
  int warn_sse;
  int warn_mmx;
  int sse_regno;
  int mmx_words;
  int mmx_nregs;
  int mmx_regno;
  int maybe_vaarg;
  int float_in_sse;

  enum calling_abi call_abi;

} CUMULATIVE_ARGS;
# 2030 "../../gcc/config/i386/i386.h"
extern int const dbx_register_map[53];
extern int const dbx64_register_map[53];
extern int const svr4_dbx_register_map[53];
# 2181 "../../gcc/config/i386/i386.h"
enum processor_type
{
  PROCESSOR_I386 = 0,
  PROCESSOR_I486,
  PROCESSOR_PENTIUM,
  PROCESSOR_PENTIUMPRO,
  PROCESSOR_GEODE,
  PROCESSOR_K6,
  PROCESSOR_ATHLON,
  PROCESSOR_PENTIUM4,
  PROCESSOR_K8,
  PROCESSOR_NOCONA,
  PROCESSOR_CORE2,
  PROCESSOR_GENERIC32,
  PROCESSOR_GENERIC64,
  PROCESSOR_AMDFAM10,
  PROCESSOR_ATOM,
  PROCESSOR_max
};

extern enum processor_type ix86_tune;
extern enum processor_type ix86_arch;

enum fpmath_unit
{
  FPMATH_387 = 1,
  FPMATH_SSE = 2
};

extern enum fpmath_unit ix86_fpmath;

enum tls_dialect
{
  TLS_DIALECT_GNU,
  TLS_DIALECT_GNU2,
  TLS_DIALECT_SUN
};

extern enum tls_dialect ix86_tls_dialect;

enum cmodel {
  CM_32,
  CM_SMALL,
  CM_KERNEL,
  CM_MEDIUM,
  CM_LARGE,
  CM_SMALL_PIC,
  CM_MEDIUM_PIC,
  CM_LARGE_PIC
};

extern enum cmodel ix86_cmodel;






enum asm_dialect {
  ASM_ATT,
  ASM_INTEL
};

extern enum asm_dialect ix86_asm_dialect;
extern unsigned int ix86_preferred_stack_boundary;
extern unsigned int ix86_incoming_stack_boundary;
extern int ix86_branch_cost, ix86_section_threshold;


extern enum reg_class const regclass_map[53];

extern rtx ix86_compare_op0;
extern rtx ix86_compare_op1;

enum ix86_fpcmp_strategy {
  IX86_FPCMP_SAHF,
  IX86_FPCMP_COMI,
  IX86_FPCMP_ARITH
};
# 2276 "../../gcc/config/i386/i386.h"
enum ix86_entity
{
  I387_TRUNC = 0,
  I387_FLOOR,
  I387_CEIL,
  I387_MASK_PM,
  MAX_386_ENTITIES
};

enum ix86_stack_slot
{
  SLOT_VIRTUAL = 0,
  SLOT_TEMP,
  SLOT_CW_STORED,
  SLOT_CW_TRUNC,
  SLOT_CW_FLOOR,
  SLOT_CW_CEIL,
  SLOT_CW_MASK_PM,
  MAX_386_STACK_LOCALS
};
# 2352 "../../gcc/config/i386/i386.h"
struct machine_cfa_state
{
  rtx reg;
  long offset;
};

struct machine_function {
  struct stack_local_entry *stack_locals;
  const char *some_ld_name;
  int varargs_gpr_size;
  int varargs_fpr_size;
  int optimize_mode_switching[MAX_386_ENTITIES];



  int use_fast_prologue_epilogue_nregs;


  struct machine_cfa_state cfa;



  enum calling_abi call_abi;


  unsigned int accesses_prev_frame : 1;


  unsigned int needs_cld : 1;



  unsigned int use_fast_prologue_epilogue : 1;
# 2395 "../../gcc/config/i386/i386.h"
  unsigned int tls_descriptor_call_expanded_p : 1;



  unsigned int static_chain_on_stack : 1;
};
# 10 "./tm.h" 2
# 1 "../../gcc/config/i386/unix.h" 1
# 11 "./tm.h" 2
# 1 "../../gcc/config/i386/att.h" 1
# 12 "./tm.h" 2
# 1 "../../gcc/config/dbxelf.h" 1
# 13 "./tm.h" 2
# 1 "../../gcc/config/elfos.h" 1
# 14 "./tm.h" 2
# 1 "../../gcc/config/svr4.h" 1
# 15 "./tm.h" 2
# 1 "../../gcc/config/linux.h" 1
# 16 "./tm.h" 2
# 1 "../../gcc/config/glibc-stdint.h" 1
# 17 "./tm.h" 2
# 1 "../../gcc/config/i386/linux.h" 1
# 18 "./tm.h" 2
# 1 "../../gcc/config/tm-dwarf2.h" 1
# 19 "./tm.h" 2
# 1 "../../gcc/defaults.h" 1
# 945 "../../gcc/defaults.h"
       
# 20 "./tm.h" 2
# 32 "../../gcc/rtl.c" 2
# 1 "../../gcc/rtl.h" 1
# 25 "../../gcc/rtl.h"
# 1 "../../gcc/statistics.h" 1
# 41 "../../gcc/statistics.h"
struct function;


extern void statistics_early_init (void);
extern void statistics_init (void);
extern void statistics_fini (void);
extern void statistics_fini_pass (void);
extern void statistics_counter_event (struct function *, const char *, int);
extern void statistics_histogram_event (struct function *, const char *, int);
# 26 "../../gcc/rtl.h" 2
# 1 "../../gcc/machmode.h" 1
# 25 "../../gcc/machmode.h"
# 1 "./insn-modes.h" 1






enum machine_mode
{
  VOIDmode,
  BLKmode,
  CCmode,
  CCGCmode,
  CCGOCmode,
  CCNOmode,
  CCAmode,
  CCCmode,
  CCOmode,
  CCSmode,
  CCZmode,
  CCFPmode,
  CCFPUmode,
  BImode,
  QImode,
  HImode,
  SImode,
  DImode,
  TImode,
  OImode,
  QQmode,
  HQmode,
  SQmode,
  DQmode,
  TQmode,
  UQQmode,
  UHQmode,
  USQmode,
  UDQmode,
  UTQmode,
  HAmode,
  SAmode,
  DAmode,
  TAmode,
  UHAmode,
  USAmode,
  UDAmode,
  UTAmode,
  SFmode,
  DFmode,
  XFmode,
  TFmode,
  SDmode,
  DDmode,
  TDmode,
  CQImode,
  CHImode,
  CSImode,
  CDImode,
  CTImode,
  COImode,
  SCmode,
  DCmode,
  XCmode,
  TCmode,
  V2QImode,
  V4QImode,
  V2HImode,
  V1SImode,
  V8QImode,
  V4HImode,
  V2SImode,
  V1DImode,
  V16QImode,
  V8HImode,
  V4SImode,
  V2DImode,
  V1TImode,
  V32QImode,
  V16HImode,
  V8SImode,
  V4DImode,
  V2TImode,
  V64QImode,
  V32HImode,
  V16SImode,
  V8DImode,
  V4TImode,
  V2SFmode,
  V4SFmode,
  V2DFmode,
  V8SFmode,
  V4DFmode,
  V2TFmode,
  V16SFmode,
  V8DFmode,
  V4TFmode,
  MAX_MACHINE_MODE,

  MIN_MODE_RANDOM = VOIDmode,
  MAX_MODE_RANDOM = BLKmode,

  MIN_MODE_CC = CCmode,
  MAX_MODE_CC = CCFPUmode,

  MIN_MODE_INT = QImode,
  MAX_MODE_INT = OImode,

  MIN_MODE_PARTIAL_INT = VOIDmode,
  MAX_MODE_PARTIAL_INT = VOIDmode,

  MIN_MODE_FRACT = QQmode,
  MAX_MODE_FRACT = TQmode,

  MIN_MODE_UFRACT = UQQmode,
  MAX_MODE_UFRACT = UTQmode,

  MIN_MODE_ACCUM = HAmode,
  MAX_MODE_ACCUM = TAmode,

  MIN_MODE_UACCUM = UHAmode,
  MAX_MODE_UACCUM = UTAmode,

  MIN_MODE_FLOAT = SFmode,
  MAX_MODE_FLOAT = TFmode,

  MIN_MODE_DECIMAL_FLOAT = SDmode,
  MAX_MODE_DECIMAL_FLOAT = TDmode,

  MIN_MODE_COMPLEX_INT = CQImode,
  MAX_MODE_COMPLEX_INT = COImode,

  MIN_MODE_COMPLEX_FLOAT = SCmode,
  MAX_MODE_COMPLEX_FLOAT = TCmode,

  MIN_MODE_VECTOR_INT = V2QImode,
  MAX_MODE_VECTOR_INT = V4TImode,

  MIN_MODE_VECTOR_FRACT = VOIDmode,
  MAX_MODE_VECTOR_FRACT = VOIDmode,

  MIN_MODE_VECTOR_UFRACT = VOIDmode,
  MAX_MODE_VECTOR_UFRACT = VOIDmode,

  MIN_MODE_VECTOR_ACCUM = VOIDmode,
  MAX_MODE_VECTOR_ACCUM = VOIDmode,

  MIN_MODE_VECTOR_UACCUM = VOIDmode,
  MAX_MODE_VECTOR_UACCUM = VOIDmode,

  MIN_MODE_VECTOR_FLOAT = V2SFmode,
  MAX_MODE_VECTOR_FLOAT = V4TFmode,

  NUM_MACHINE_MODES = MAX_MACHINE_MODE
};
# 26 "../../gcc/machmode.h" 2



extern const char * const mode_name[NUM_MACHINE_MODES];




# 1 "../../gcc/mode-classes.def" 1
# 35 "../../gcc/machmode.h" 2

enum mode_class { MODE_RANDOM, MODE_CC, MODE_INT, MODE_PARTIAL_INT, MODE_FRACT, MODE_UFRACT, MODE_ACCUM, MODE_UACCUM, MODE_FLOAT, MODE_DECIMAL_FLOAT, MODE_COMPLEX_INT, MODE_COMPLEX_FLOAT, MODE_VECTOR_INT, MODE_VECTOR_FRACT, MODE_VECTOR_UFRACT, MODE_VECTOR_ACCUM, MODE_VECTOR_UACCUM, MODE_VECTOR_FLOAT, MAX_MODE_CLASS };






extern const unsigned char mode_class[NUM_MACHINE_MODES];
# 179 "../../gcc/machmode.h"
extern unsigned char mode_size[NUM_MACHINE_MODES];




extern const unsigned short mode_precision[NUM_MACHINE_MODES];



extern const unsigned char mode_ibit[NUM_MACHINE_MODES];



extern const unsigned char mode_fbit[NUM_MACHINE_MODES];





extern const unsigned long mode_mask_array[NUM_MACHINE_MODES];





extern const unsigned char mode_inner[NUM_MACHINE_MODES];
# 216 "../../gcc/machmode.h"
extern const unsigned char mode_nunits[NUM_MACHINE_MODES];




extern const unsigned char mode_wider[NUM_MACHINE_MODES];


extern const unsigned char mode_2xwider[NUM_MACHINE_MODES];






extern enum machine_mode mode_for_size (unsigned int, enum mode_class, int);



extern enum machine_mode smallest_mode_for_size (unsigned int,
       enum mode_class);





extern enum machine_mode int_mode_for_mode (enum machine_mode);



extern enum machine_mode get_best_mode (int, int, unsigned int,
     enum machine_mode, int);



extern unsigned char mode_base_align[NUM_MACHINE_MODES];

extern unsigned get_mode_alignment (enum machine_mode);





extern const unsigned char class_narrowest_mode[MAX_MODE_CLASS];






extern enum machine_mode byte_mode;
extern enum machine_mode word_mode;
extern enum machine_mode ptr_mode;


extern void init_adjust_machine_modes (void);
# 27 "../../gcc/rtl.h" 2
# 1 "../../gcc/input.h" 1
# 25 "../../gcc/input.h"
# 1 "../../gcc/../libcpp/include/line-map.h" 1
# 36 "../../gcc/../libcpp/include/line-map.h"
enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME, LC_RENAME_VERBATIM};


typedef unsigned int linenum_type;




typedef unsigned int source_location;


typedef void *(*line_map_realloc) (void *, size_t);
# 61 "../../gcc/../libcpp/include/line-map.h"
struct line_map {
  const char *to_file;
  linenum_type to_line;
  source_location start_location;
  int included_from;
  __extension__ enum lc_reason reason : 8;

  unsigned char sysp;

  unsigned int column_bits : 8;
};


struct line_maps {
  struct line_map * maps;
  unsigned int allocated;
  unsigned int used;

  unsigned int cache;




  int last_listed;


  unsigned int depth;


  unsigned char trace_includes;


  source_location highest_location;


  source_location highest_line;



  unsigned int max_column_hint;



  line_map_realloc reallocator;
};


extern void linemap_init (struct line_maps *);


extern void linemap_free (struct line_maps *);



extern void linemap_check_files_exited (struct line_maps *);







extern source_location linemap_line_start
(struct line_maps *set, linenum_type to_line, unsigned int max_column_hint);
# 137 "../../gcc/../libcpp/include/line-map.h"
extern const struct line_map *linemap_add
  (struct line_maps *, enum lc_reason, unsigned int sysp,
   const char *to_file, linenum_type to_line);



extern const struct line_map *linemap_lookup
  (struct line_maps *, source_location);
# 192 "../../gcc/../libcpp/include/line-map.h"
extern source_location
linemap_position_for_column (struct line_maps *set, unsigned int to_column);
# 26 "../../gcc/input.h" 2

extern struct line_maps *line_table;
# 37 "../../gcc/input.h"
extern char builtins_location_check[(((source_location) 1)
         < 2) ? 1 : -1];

typedef struct
{

  const char *file;


  int line;

  int column;


  unsigned char sysp;
} expanded_location;

extern expanded_location expand_location (source_location);



typedef source_location location_t;


extern const char *main_input_filename;

extern location_t input_location;
# 28 "../../gcc/rtl.h" 2
# 1 "../../gcc/real.h" 1
# 36 "../../gcc/real.h"
enum real_value_class {
  rvc_zero,
  rvc_normal,
  rvc_inf,
  rvc_nan
};







struct real_value {



  unsigned int cl : 2;
  unsigned int decimal : 1;
  unsigned int sign : 1;
  unsigned int signalling : 1;
  unsigned int canonical : 1;
  unsigned int uexp : (32 - 6);
  unsigned long sig[((128 + (8 * 4)) / (8 * 4))];
};
# 83 "../../gcc/real.h"
extern char test_real_width
  [sizeof(struct real_value) <= (((128 + (8 * 4)) + 32)/(8 * 4) + (((128 + (8 * 4)) + 32)%(8 * 4) ? 1 : 0))*sizeof(long) ? 1 : -1];
# 121 "../../gcc/real.h"
struct real_format
{

  void (*encode) (const struct real_format *, long *,
    const struct real_value *);
  void (*decode) (const struct real_format *, struct real_value *,
    const long *);


  int b;


  int p;


  int pnan;


  int emin;


  int emax;



  int signbit_ro;



  int signbit_rw;


  unsigned char round_towards_zero;
  unsigned char has_sign_dependent_rounding;


  unsigned char has_nans;
  unsigned char has_inf;
  unsigned char has_denorm;
  unsigned char has_signed_zero;
  unsigned char qnan_msb_set;
  unsigned char canonical_nan_lsbs_set;
};







extern const struct real_format *
  real_format_for_mode[MAX_MODE_FLOAT - MIN_MODE_FLOAT + 1
         + MAX_MODE_DECIMAL_FLOAT - MIN_MODE_DECIMAL_FLOAT + 1];
# 232 "../../gcc/real.h"
extern unsigned char real_arithmetic (struct real_value *, int, const struct real_value *,
        const struct real_value *);


extern unsigned char real_compare (int, const struct real_value *, const struct real_value *);


extern unsigned char real_isinf (const struct real_value *);


extern unsigned char real_isnan (const struct real_value *);


extern unsigned char real_isfinite (const struct real_value *);


extern unsigned char real_isneg (const struct real_value *);


extern unsigned char real_isnegzero (const struct real_value *);


extern unsigned char real_identical (const struct real_value *, const struct real_value *);


extern void real_convert (struct real_value *, enum machine_mode,
     const struct real_value *);


extern unsigned char exact_real_truncate (enum machine_mode, const struct real_value *);


extern void real_to_decimal (char *, const struct real_value *, size_t,
        size_t, int);



extern void real_to_decimal_for_mode (char *, const struct real_value *, size_t,
          size_t, int, enum machine_mode);


extern void real_to_hexadecimal (char *, const struct real_value *,
     size_t, size_t, int);


extern long real_to_integer (const struct real_value *);
extern void real_to_integer2 (long *, long *,
         const struct real_value *);



extern int real_from_string (struct real_value *, const char *);

extern void real_from_string3 (struct real_value *, const char *, enum machine_mode);


extern void real_from_integer (struct real_value *, enum machine_mode,
          unsigned long, long, int);

extern long real_to_target_fmt (long *, const struct real_value *,
    const struct real_format *);
extern long real_to_target (long *, const struct real_value *, enum machine_mode);

extern void real_from_target_fmt (struct real_value *, const long *,
      const struct real_format *);
extern void real_from_target (struct real_value *, const long *,
         enum machine_mode);

extern void real_inf (struct real_value *);

extern unsigned char real_nan (struct real_value *, const char *, int, enum machine_mode);

extern void real_maxval (struct real_value *, int, enum machine_mode);

extern void real_2expN (struct real_value *, int, enum machine_mode);

extern unsigned int real_hash (const struct real_value *);



extern const struct real_format ieee_single_format;
extern const struct real_format mips_single_format;
extern const struct real_format motorola_single_format;
extern const struct real_format spu_single_format;
extern const struct real_format ieee_double_format;
extern const struct real_format mips_double_format;
extern const struct real_format motorola_double_format;
extern const struct real_format ieee_extended_motorola_format;
extern const struct real_format ieee_extended_intel_96_format;
extern const struct real_format ieee_extended_intel_96_round_53_format;
extern const struct real_format ieee_extended_intel_128_format;
extern const struct real_format ibm_extended_format;
extern const struct real_format mips_extended_format;
extern const struct real_format ieee_quad_format;
extern const struct real_format mips_quad_format;
extern const struct real_format vax_f_format;
extern const struct real_format vax_d_format;
extern const struct real_format vax_g_format;
extern const struct real_format real_internal_format;
extern const struct real_format decimal_single_format;
extern const struct real_format decimal_double_format;
extern const struct real_format decimal_quad_format;
extern const struct real_format ieee_half_format;
extern const struct real_format arm_half_format;
# 391 "../../gcc/real.h"
extern struct real_value real_value_truncate (enum machine_mode,
         struct real_value);




extern struct real_value real_arithmetic2 (int, const struct real_value *,
      const struct real_value *);







extern int significand_size (enum machine_mode);

extern struct real_value real_from_string2 (const char *, enum machine_mode);
# 426 "../../gcc/real.h"
extern int real_exponent (const struct real_value *);


extern void real_ldexp (struct real_value *, const struct real_value *, int);





extern struct real_value dconst0;
extern struct real_value dconst1;
extern struct real_value dconst2;
extern struct real_value dconstm1;
extern struct real_value dconsthalf;






extern const struct real_value * dconst_e_ptr (void);


extern const struct real_value * dconst_third_ptr (void);


extern const struct real_value * dconst_sqrt2_ptr (void);



struct real_value real_value_from_int_cst (const_tree, const_tree);
# 465 "../../gcc/real.h"
extern rtx const_double_from_real_value (struct real_value, enum machine_mode);


extern unsigned char exact_real_inverse (enum machine_mode, struct real_value *);




unsigned char real_can_shorten_arithmetic (enum machine_mode, enum machine_mode);


extern tree build_real (tree, struct real_value);


extern unsigned char real_sqrt (struct real_value *, enum machine_mode,
         const struct real_value *);


extern unsigned char real_powi (struct real_value *, enum machine_mode,
         const struct real_value *, long);


extern void real_trunc (struct real_value *, enum machine_mode,
   const struct real_value *);
extern void real_floor (struct real_value *, enum machine_mode,
   const struct real_value *);
extern void real_ceil (struct real_value *, enum machine_mode,
         const struct real_value *);
extern void real_round (struct real_value *, enum machine_mode,
   const struct real_value *);


extern void real_copysign (struct real_value *, const struct real_value *);
# 508 "../../gcc/real.h"
extern unsigned char real_isinteger (const struct real_value *c, enum machine_mode mode);




extern void get_max_float (const struct real_format *, char *, size_t);
# 29 "../../gcc/rtl.h" 2
# 1 "../../gcc/vec.h" 1
# 421 "../../gcc/vec.h"
extern void *vec_gc_p_reserve (void *, int );
extern void *vec_gc_p_reserve_exact (void *, int );
extern void *vec_gc_o_reserve (void *, int, size_t, size_t );
extern void *vec_gc_o_reserve_exact (void *, int, size_t, size_t
         );
extern void ggc_free (void *);

extern void *vec_heap_p_reserve (void *, int );
extern void *vec_heap_p_reserve_exact (void *, int );
extern void *vec_heap_o_reserve (void *, int, size_t, size_t );
extern void *vec_heap_o_reserve_exact (void *, int, size_t, size_t
           );
extern void dump_vec_loc_statistics (void);
# 1225 "../../gcc/vec.h"
extern void *vec_stack_p_reserve (void *, int );
extern void *vec_stack_p_reserve_exact (void *, int );
extern void *vec_stack_p_reserve_exact_1 (int, void *);
extern void *vec_stack_o_reserve (void *, int, size_t, size_t );
extern void *vec_stack_o_reserve_exact (void *, int, size_t, size_t
      );
extern void vec_stack_free (void *);
# 30 "../../gcc/rtl.h" 2
# 1 "../../gcc/fixed-value.h" 1
# 25 "../../gcc/fixed-value.h"
# 1 "../../gcc/double-int.h" 1
# 54 "../../gcc/double-int.h"
typedef struct
{
  unsigned long low;
  long high;
} double_int;

union tree_node;



union tree_node *double_int_to_tree (union tree_node *, double_int);
unsigned char double_int_fits_to_tree_p (const union tree_node *, double_int);
double_int tree_to_double_int (const union tree_node *);




static __inline__ double_int
shwi_to_double_int (long cst)
{
  double_int r;

  r.low = (unsigned long) cst;
  r.high = cst < 0 ? -1 : 0;

  return r;
}
# 93 "../../gcc/double-int.h"
static __inline__ double_int
uhwi_to_double_int (unsigned long cst)
{
  double_int r;

  r.low = cst;
  r.high = 0;

  return r;
}






double_int double_int_mul (double_int, double_int);
double_int double_int_add (double_int, double_int);
double_int double_int_neg (double_int);




unsigned char double_int_fits_in_hwi_p (double_int, unsigned char);
unsigned char double_int_fits_in_shwi_p (double_int);
unsigned char double_int_fits_in_uhwi_p (double_int);
long double_int_to_shwi (double_int);
unsigned long double_int_to_uhwi (double_int);
double_int double_int_div (double_int, double_int, unsigned char, unsigned);
double_int double_int_sdiv (double_int, double_int, unsigned);
double_int double_int_udiv (double_int, double_int, unsigned);
double_int double_int_mod (double_int, double_int, unsigned char, unsigned);
double_int double_int_smod (double_int, double_int, unsigned);
double_int double_int_umod (double_int, double_int, unsigned);
double_int double_int_divmod (double_int, double_int, unsigned char, unsigned, double_int *);
double_int double_int_sdivmod (double_int, double_int, unsigned, double_int *);
double_int double_int_udivmod (double_int, double_int, unsigned, double_int *);
unsigned char double_int_negative_p (double_int);
int double_int_cmp (double_int, double_int, unsigned char);
int double_int_scmp (double_int, double_int);
int double_int_ucmp (double_int, double_int);
void dump_double_int (FILE *, double_int, unsigned char);



double_int double_int_ext (double_int, unsigned, unsigned char);
double_int double_int_sext (double_int, unsigned);
double_int double_int_zext (double_int, unsigned);
double_int double_int_mask (unsigned);
# 151 "../../gcc/double-int.h"
static __inline__ unsigned char
double_int_zero_p (double_int cst)
{
  return cst.low == 0 && cst.high == 0;
}



static __inline__ unsigned char
double_int_one_p (double_int cst)
{
  return cst.low == 1 && cst.high == 0;
}



static __inline__ unsigned char
double_int_minus_one_p (double_int cst)
{
  return (cst.low == (~((unsigned long) 0)) && cst.high == -1);
}



static __inline__ unsigned char
double_int_equal_p (double_int cst1, double_int cst2)
{
  return cst1.low == cst2.low && cst1.high == cst2.high;
}
# 26 "../../gcc/fixed-value.h" 2

struct fixed_value
{
  double_int data;
  enum machine_mode mode;
};
# 40 "../../gcc/fixed-value.h"
extern struct fixed_value fconst0[18];
extern struct fixed_value fconst1[8];
# 50 "../../gcc/fixed-value.h"
extern rtx const_fixed_from_fixed_value (struct fixed_value, enum machine_mode);


extern void fixed_from_string (struct fixed_value *, const char *,
          enum machine_mode);


extern tree build_fixed (tree, struct fixed_value);


extern unsigned char fixed_convert (struct fixed_value *, enum machine_mode,
      const struct fixed_value *, unsigned char);


extern unsigned char fixed_convert_from_int (struct fixed_value *, enum machine_mode,
        double_int, unsigned char, unsigned char);


extern unsigned char fixed_convert_from_real (struct fixed_value *, enum machine_mode,
         const struct real_value *, unsigned char);


extern void real_convert_from_fixed (struct real_value *, enum machine_mode,
         const struct fixed_value *);


extern unsigned char fixed_identical (const struct fixed_value *, const struct fixed_value *);


extern unsigned int fixed_hash (const struct fixed_value *);







extern void fixed_to_decimal (char *str, const struct fixed_value *, size_t);


extern unsigned char fixed_arithmetic (struct fixed_value *, int, const struct fixed_value *,
         const struct fixed_value *, unsigned char);


extern unsigned char fixed_compare (int, const struct fixed_value *,
      const struct fixed_value *);


extern unsigned char fixed_isneg (const struct fixed_value *);
# 31 "../../gcc/rtl.h" 2
# 1 "../../gcc/alias.h" 1
# 31 "../../gcc/alias.h"
typedef int alias_set_type;

extern alias_set_type new_alias_set (void);
extern alias_set_type get_alias_set (tree);
extern alias_set_type get_deref_alias_set (tree);
extern alias_set_type get_varargs_alias_set (void);
extern alias_set_type get_frame_alias_set (void);
extern unsigned char component_uses_parent_alias_set (const_tree);
extern unsigned char alias_set_subset_of (alias_set_type, alias_set_type);
extern void record_alias_subset (alias_set_type, alias_set_type);
extern void record_component_aliases (tree);
extern int alias_sets_conflict_p (alias_set_type, alias_set_type);
extern int alias_sets_must_conflict_p (alias_set_type, alias_set_type);
extern int objects_must_conflict_p (tree, tree);
extern int nonoverlapping_memrefs_p (const_rtx, const_rtx);
extern unsigned char insn_alias_sets_conflict_p (rtx, rtx);
# 32 "../../gcc/rtl.h" 2
# 45 "../../gcc/rtl.h"
enum rtx_code {


# 1 "../../gcc/rtl.def" 1
# 82 "../../gcc/rtl.def"
UNKNOWN ,






VALUE ,



DEBUG_EXPR ,






EXPR_LIST ,



INSN_LIST ,





SEQUENCE ,


ADDRESS ,
# 126 "../../gcc/rtl.def"
DEBUG_INSN ,


INSN ,



JUMP_INSN ,






CALL_INSN ,


BARRIER ,







CODE_LABEL ,






NOTE ,
# 171 "../../gcc/rtl.def"
COND_EXEC ,


PARALLEL ,







ASM_INPUT ,
# 196 "../../gcc/rtl.def"
ASM_OPERANDS ,
# 214 "../../gcc/rtl.def"
UNSPEC ,


UNSPEC_VOLATILE ,



ADDR_VEC ,
# 246 "../../gcc/rtl.def"
ADDR_DIFF_VEC ,
# 257 "../../gcc/rtl.def"
PREFETCH ,
# 269 "../../gcc/rtl.def"
SET ,
# 278 "../../gcc/rtl.def"
USE ,
# 287 "../../gcc/rtl.def"
CLOBBER ,





CALL ,



RETURN ,



EH_RETURN ,





TRAP_IF ,






CONST_INT ,


CONST_FIXED ,




CONST_DOUBLE ,


CONST_VECTOR ,




CONST_STRING ,





CONST ,



PC ,
# 350 "../../gcc/rtl.def"
REG ,






SCRATCH ,



SUBREG ,
# 374 "../../gcc/rtl.def"
STRICT_LOW_PART ,





CONCAT ,





CONCATN ,




MEM ,



LABEL_REF ,






SYMBOL_REF ,






CC0 ,
# 421 "../../gcc/rtl.def"
IF_THEN_ELSE ,


COMPARE ,


PLUS ,


MINUS ,


NEG ,

MULT ,


SS_MULT ,

US_MULT ,


DIV ,

SS_DIV ,

US_DIV ,


MOD ,


UDIV ,
UMOD ,


AND ,
IOR ,
XOR ,
NOT ,




ASHIFT ,
ROTATE ,
ASHIFTRT ,
LSHIFTRT ,
ROTATERT ,
# 478 "../../gcc/rtl.def"
SMIN ,
SMAX ,
UMIN ,
UMAX ,
# 490 "../../gcc/rtl.def"
PRE_DEC ,
PRE_INC ,
POST_DEC ,
POST_INC ,
# 507 "../../gcc/rtl.def"
PRE_MODIFY ,
POST_MODIFY ,



NE ,
EQ ,
GE ,
GT ,
LE ,
LT ,
GEU ,
GTU ,
LEU ,
LTU ,


UNORDERED ,
ORDERED ,


UNEQ ,
UNGE ,
UNGT ,
UNLE ,
UNLT ,


LTGT ,




SIGN_EXTEND ,


ZERO_EXTEND ,


TRUNCATE ,


FLOAT_EXTEND ,
FLOAT_TRUNCATE ,


FLOAT ,







FIX ,


UNSIGNED_FLOAT ,




UNSIGNED_FIX ,
# 579 "../../gcc/rtl.def"
FRACT_CONVERT ,






UNSIGNED_FRACT_CONVERT ,







SAT_FRACT ,





UNSIGNED_SAT_FRACT ,


ABS ,


SQRT ,


BSWAP ,




FFS ,


CLZ ,


CTZ ,


POPCOUNT ,


PARITY ,
# 638 "../../gcc/rtl.def"
SIGN_EXTRACT ,



ZERO_EXTRACT ,




HIGH ,



LO_SUM ,






VEC_MERGE ,





VEC_SELECT ,




VEC_CONCAT ,





VEC_DUPLICATE ,


SS_PLUS ,


US_PLUS ,


SS_MINUS ,


SS_NEG ,

US_NEG ,


SS_ABS ,


SS_ASHIFT ,


US_ASHIFT ,


US_MINUS ,


SS_TRUNCATE ,


US_TRUNCATE ,




VAR_LOCATION ,






INCLUDE ,
# 754 "../../gcc/rtl.def"
MATCH_OPERAND ,





MATCH_SCRATCH ,






MATCH_OPERATOR ,







MATCH_PARALLEL ,



MATCH_DUP ,



MATCH_OP_DUP ,



MATCH_PAR_DUP ,
# 797 "../../gcc/rtl.def"
MATCH_CODE ,




MATCH_TEST ,
# 822 "../../gcc/rtl.def"
DEFINE_INSN ,
# 831 "../../gcc/rtl.def"
DEFINE_PEEPHOLE ,
# 842 "../../gcc/rtl.def"
DEFINE_SPLIT ,
# 870 "../../gcc/rtl.def"
DEFINE_INSN_AND_SPLIT ,



DEFINE_PEEPHOLE2 ,
# 887 "../../gcc/rtl.def"
DEFINE_EXPAND ,
# 903 "../../gcc/rtl.def"
DEFINE_DELAY ,


DEFINE_ASM_ATTRIBUTES ,
# 919 "../../gcc/rtl.def"
DEFINE_COND_EXEC ,
# 935 "../../gcc/rtl.def"
DEFINE_PREDICATE ,
DEFINE_SPECIAL_PREDICATE ,
# 949 "../../gcc/rtl.def"
DEFINE_REGISTER_CONSTRAINT ,
# 988 "../../gcc/rtl.def"
DEFINE_CONSTRAINT ,
DEFINE_MEMORY_CONSTRAINT ,
DEFINE_ADDRESS_CONSTRAINT ,
# 1004 "../../gcc/rtl.def"
DEFINE_CPU_UNIT ,




DEFINE_QUERY_CPU_UNIT ,
# 1019 "../../gcc/rtl.def"
EXCLUSION_SET ,
# 1041 "../../gcc/rtl.def"
PRESENCE_SET ,
# 1062 "../../gcc/rtl.def"
FINAL_PRESENCE_SET ,
# 1085 "../../gcc/rtl.def"
ABSENCE_SET ,




FINAL_ABSENCE_SET ,
# 1105 "../../gcc/rtl.def"
DEFINE_BYPASS ,
# 1114 "../../gcc/rtl.def"
DEFINE_AUTOMATON ,
# 1137 "../../gcc/rtl.def"
AUTOMATA_OPTION ,
# 1146 "../../gcc/rtl.def"
DEFINE_RESERVATION ,
# 1194 "../../gcc/rtl.def"
DEFINE_INSN_RESERVATION ,







DEFINE_ATTR ,


ATTR ,







SET_ATTR ,
# 1228 "../../gcc/rtl.def"
SET_ATTR_ALTERNATIVE ,




EQ_ATTR ,



EQ_ATTR_ALT ,
# 1247 "../../gcc/rtl.def"
ATTR_FLAG ,






COND ,
# 49 "../../gcc/rtl.h" 2


  LAST_AND_UNUSED_RTX_CODE};
# 60 "../../gcc/rtl.h"
enum rtx_class {




  RTX_COMPARE,
  RTX_COMM_COMPARE,
  RTX_BIN_ARITH,
  RTX_COMM_ARITH,


  RTX_UNARY,

  RTX_EXTRA,
  RTX_MATCH,
  RTX_INSN,


  RTX_OBJ,
  RTX_CONST_OBJ,

  RTX_TERNARY,
  RTX_BITFIELD_OPS,
  RTX_AUTOINC
};
# 98 "../../gcc/rtl.h"
extern const unsigned char rtx_length[((int) LAST_AND_UNUSED_RTX_CODE)];


extern const char * const rtx_name[((int) LAST_AND_UNUSED_RTX_CODE)];


extern const char * const rtx_format[((int) LAST_AND_UNUSED_RTX_CODE)];


extern const enum rtx_class rtx_class[((int) LAST_AND_UNUSED_RTX_CODE)];


extern const unsigned char rtx_code_size[((int) LAST_AND_UNUSED_RTX_CODE)];
extern const unsigned char rtx_next[((int) LAST_AND_UNUSED_RTX_CODE)];



typedef struct
{

  unsigned min_align: 8;

  unsigned base_after_vec: 1;
  unsigned min_after_vec: 1;

  unsigned max_after_vec: 1;

  unsigned min_after_base: 1;

  unsigned max_after_base: 1;


  unsigned offset_unsigned: 1;
  unsigned : 2;
  unsigned scale : 8;
} addr_diff_vec_flags;
# 142 "../../gcc/rtl.h"
typedef struct mem_attrs
{
  tree expr;
  rtx offset;
  rtx size;
  alias_set_type alias;
  unsigned int align;
  unsigned char addrspace;
} mem_attrs;
# 159 "../../gcc/rtl.h"
typedef struct reg_attrs {
  tree decl;
  long offset;
} reg_attrs;



union rtunion_def
{
  int rt_int;
  unsigned int rt_uint;
  const char *rt_str;
  rtx rt_rtx;
  rtvec rt_rtvec;
  enum machine_mode rt_type;
  addr_diff_vec_flags rt_addr_diff_vec_flags;
  struct cselib_val_struct *rt_cselib;
  struct bitmap_head_def *rt_bit;
  tree rt_tree;
  struct basic_block_def *rt_bb;
  mem_attrs *rt_mem;
  reg_attrs *rt_reg;
  struct constant_descriptor_rtx *rt_constant;
};
typedef union rtunion_def rtunion;




struct block_symbol {

  rtunion fld[3];


  struct object_block *block;



  long offset;
};

static __inline__ void VEC_rtx_must_be_pointer_type (void) { (void)((rtx)1 == (void *)1); } typedef struct VEC_rtx_base { unsigned num; unsigned alloc; rtx vec[1]; } VEC_rtx_base; typedef struct VEC_rtx_none { VEC_rtx_base base; } VEC_rtx_none; static __inline__ unsigned VEC_rtx_base_length (const VEC_rtx_base *vec_) { return vec_ ? vec_->num : 0; } static __inline__ rtx VEC_rtx_base_last (const VEC_rtx_base *vec_ ) { (void)(vec_ && vec_->num); return vec_->vec[vec_->num - 1]; } static __inline__ rtx VEC_rtx_base_index (const VEC_rtx_base *vec_, unsigned ix_ ) { (void)(vec_ && ix_ < vec_->num); return vec_->vec[ix_]; } static __inline__ int VEC_rtx_base_iterate (const VEC_rtx_base *vec_, unsigned ix_, rtx *ptr) { if (vec_ && ix_ < vec_->num) { *ptr = vec_->vec[ix_]; return 1; } else { *ptr = (rtx) 0; return 0; } } static __inline__ size_t VEC_rtx_base_embedded_size (int alloc_) { return __builtin_offsetof (VEC_rtx_base, vec) + alloc_ * sizeof(rtx); } static __inline__ void VEC_rtx_base_embedded_init (VEC_rtx_base *vec_, int alloc_) { vec_->num = 0; vec_->alloc = alloc_; } static __inline__ int VEC_rtx_base_space (VEC_rtx_base *vec_, int alloc_ ) { (void)(alloc_ >= 0); return vec_ ? vec_->alloc - vec_->num >= (unsigned)alloc_ : !alloc_; } static __inline__ rtx *VEC_rtx_base_quick_push (VEC_rtx_base *vec_, rtx obj_ ) { rtx *slot_; (void)(vec_->num < vec_->alloc); slot_ = &vec_->vec[vec_->num++]; *slot_ = obj_; return slot_; } static __inline__ rtx VEC_rtx_base_pop (VEC_rtx_base *vec_ ) { rtx obj_; (void)(vec_->num); obj_ = vec_->vec[--vec_->num]; return obj_; } static __inline__ void VEC_rtx_base_truncate (VEC_rtx_base *vec_, unsigned size_ ) { (void)(vec_ ? vec_->num >= size_ : !size_); if (vec_) vec_->num = size_; } static __inline__ rtx VEC_rtx_base_replace (VEC_rtx_base *vec_, unsigned ix_, rtx obj_ ) { rtx old_obj_; (void)(ix_ < vec_->num); old_obj_ = vec_->vec[ix_]; vec_->vec[ix_] = obj_; return old_obj_; } static __inline__ rtx *VEC_rtx_base_quick_insert (VEC_rtx_base *vec_, unsigned ix_, rtx obj_ ) { rtx *slot_; (void)(vec_->num < vec_->alloc); (void)(ix_ <= vec_->num); slot_ = &vec_->vec[ix_]; memmove (slot_ + 1, slot_, (vec_->num++ - ix_) * sizeof (rtx)); *slot_ = obj_; return slot_; } static __inline__ rtx VEC_rtx_base_ordered_remove (VEC_rtx_base *vec_, unsigned ix_ ) { rtx *slot_; rtx obj_; (void)(ix_ < vec_->num); slot_ = &vec_->vec[ix_]; obj_ = *slot_; memmove (slot_, slot_ + 1, (--vec_->num - ix_) * sizeof (rtx)); return obj_; } static __inline__ rtx VEC_rtx_base_unordered_remove (VEC_rtx_base *vec_, unsigned ix_ ) { rtx *slot_; rtx obj_; (void)(ix_ < vec_->num); slot_ = &vec_->vec[ix_]; obj_ = *slot_; *slot_ = vec_->vec[--vec_->num]; return obj_; } static __inline__ void VEC_rtx_base_block_remove (VEC_rtx_base *vec_, unsigned ix_, unsigned len_ ) { rtx *slot_; (void)(ix_ + len_ <= vec_->num); slot_ = &vec_->vec[ix_]; vec_->num -= len_; memmove (slot_, slot_ + len_, (vec_->num - ix_) * sizeof (rtx)); } static __inline__ rtx *VEC_rtx_base_address (VEC_rtx_base *vec_) { return vec_ ? vec_->vec : 0; } static __inline__ unsigned VEC_rtx_base_lower_bound (VEC_rtx_base *vec_, const rtx obj_, unsigned char (*lessthan_)(const rtx, const rtx) ) { unsigned int len_ = VEC_rtx_base_length (vec_); unsigned int half_, middle_; unsigned int first_ = 0; while (len_ > 0) { rtx middle_elem_; half_ = len_ >> 1; middle_ = first_; middle_ += half_; middle_elem_ = VEC_rtx_base_index (vec_, middle_ ); if (lessthan_ (middle_elem_, obj_)) { first_ = middle_; ++first_; len_ = len_ - half_ - 1; } else len_ = half_; } return first_; } struct vec_swallow_trailing_semi;
typedef struct VEC_rtx_heap { VEC_rtx_base base; } VEC_rtx_heap; static __inline__ VEC_rtx_heap *VEC_rtx_heap_alloc (int alloc_ ) { return (VEC_rtx_heap *) vec_heap_p_reserve_exact (((void *)0), alloc_ ); } static __inline__ void VEC_rtx_heap_free (VEC_rtx_heap **vec_) { if (*vec_) free (*vec_); *vec_ = ((void *)0); } static __inline__ VEC_rtx_heap *VEC_rtx_heap_copy (VEC_rtx_base *vec_ ) { size_t len_ = vec_ ? vec_->num : 0; VEC_rtx_heap *new_vec_ = ((void *)0); if (len_) { new_vec_ = (VEC_rtx_heap *)(vec_heap_p_reserve_exact (((void *)0), len_ )); new_vec_->base.num = len_; memcpy (new_vec_->base.vec, vec_->vec, sizeof (rtx) * len_); } return new_vec_; } static __inline__ int VEC_rtx_heap_reserve (VEC_rtx_heap **vec_, int alloc_ ) { int extend = !VEC_rtx_base_space (((*vec_) ? &(*vec_)->base : 0), alloc_ ); if (extend) *vec_ = (VEC_rtx_heap *) vec_heap_p_reserve (*vec_, alloc_ ); return extend; } static __inline__ int VEC_rtx_heap_reserve_exact (VEC_rtx_heap **vec_, int alloc_ ) { int extend = !VEC_rtx_base_space (((*vec_) ? &(*vec_)->base : 0), alloc_ ); if (extend) *vec_ = (VEC_rtx_heap *) vec_heap_p_reserve_exact (*vec_, alloc_ ); return extend; } static __inline__ void VEC_rtx_heap_safe_grow (VEC_rtx_heap **vec_, int size_ ) { (void)(size_ >= 0 && VEC_rtx_base_length ((*vec_) ? &(*vec_)->base : 0) <= (unsigned)size_); VEC_rtx_heap_reserve_exact (vec_, size_ - (int)(*vec_ ? ((*vec_) ? &(*vec_)->base : 0)->num : 0) ); ((*vec_) ? &(*vec_)->base : 0)->num = size_; } static __inline__ void VEC_rtx_heap_safe_grow_cleared (VEC_rtx_heap **vec_, int size_ ) { int oldsize = VEC_rtx_base_length ((*vec_) ? &(*vec_)->base : 0); VEC_rtx_heap_safe_grow (vec_, size_ ); memset (&(VEC_rtx_base_address ((*vec_) ? &(*vec_)->base : 0))[oldsize], 0, sizeof (rtx) * (size_ - oldsize)); } static __inline__ rtx *VEC_rtx_heap_safe_push (VEC_rtx_heap **vec_, rtx obj_ ) { VEC_rtx_heap_reserve (vec_, 1 ); return VEC_rtx_base_quick_push (((*vec_) ? &(*vec_)->base : 0), obj_ ); } static __inline__ rtx *VEC_rtx_heap_safe_insert (VEC_rtx_heap **vec_, unsigned ix_, rtx obj_ ) { VEC_rtx_heap_reserve (vec_, 1 ); return VEC_rtx_base_quick_insert (((*vec_) ? &(*vec_)->base : 0), ix_, obj_ ); } struct vec_swallow_trailing_semi;
typedef struct VEC_rtx_gc { VEC_rtx_base base; } VEC_rtx_gc; static __inline__ VEC_rtx_gc *VEC_rtx_gc_alloc (int alloc_ ) { return (VEC_rtx_gc *) vec_gc_p_reserve_exact (((void *)0), alloc_ ); } static __inline__ void VEC_rtx_gc_free (VEC_rtx_gc **vec_) { if (*vec_) ggc_free (*vec_); *vec_ = ((void *)0); } static __inline__ VEC_rtx_gc *VEC_rtx_gc_copy (VEC_rtx_base *vec_ ) { size_t len_ = vec_ ? vec_->num : 0; VEC_rtx_gc *new_vec_ = ((void *)0); if (len_) { new_vec_ = (VEC_rtx_gc *)(vec_gc_p_reserve_exact (((void *)0), len_ )); new_vec_->base.num = len_; memcpy (new_vec_->base.vec, vec_->vec, sizeof (rtx) * len_); } return new_vec_; } static __inline__ int VEC_rtx_gc_reserve (VEC_rtx_gc **vec_, int alloc_ ) { int extend = !VEC_rtx_base_space (((*vec_) ? &(*vec_)->base : 0), alloc_ ); if (extend) *vec_ = (VEC_rtx_gc *) vec_gc_p_reserve (*vec_, alloc_ ); return extend; } static __inline__ int VEC_rtx_gc_reserve_exact (VEC_rtx_gc **vec_, int alloc_ ) { int extend = !VEC_rtx_base_space (((*vec_) ? &(*vec_)->base : 0), alloc_ ); if (extend) *vec_ = (VEC_rtx_gc *) vec_gc_p_reserve_exact (*vec_, alloc_ ); return extend; } static __inline__ void VEC_rtx_gc_safe_grow (VEC_rtx_gc **vec_, int size_ ) { (void)(size_ >= 0 && VEC_rtx_base_length ((*vec_) ? &(*vec_)->base : 0) <= (unsigned)size_); VEC_rtx_gc_reserve_exact (vec_, size_ - (int)(*vec_ ? ((*vec_) ? &(*vec_)->base : 0)->num : 0) ); ((*vec_) ? &(*vec_)->base : 0)->num = size_; } static __inline__ void VEC_rtx_gc_safe_grow_cleared (VEC_rtx_gc **vec_, int size_ ) { int oldsize = VEC_rtx_base_length ((*vec_) ? &(*vec_)->base : 0); VEC_rtx_gc_safe_grow (vec_, size_ ); memset (&(VEC_rtx_base_address ((*vec_) ? &(*vec_)->base : 0))[oldsize], 0, sizeof (rtx) * (size_ - oldsize)); } static __inline__ rtx *VEC_rtx_gc_safe_push (VEC_rtx_gc **vec_, rtx obj_ ) { VEC_rtx_gc_reserve (vec_, 1 ); return VEC_rtx_base_quick_push (((*vec_) ? &(*vec_)->base : 0), obj_ ); } static __inline__ rtx *VEC_rtx_gc_safe_insert (VEC_rtx_gc **vec_, unsigned ix_, rtx obj_ ) { VEC_rtx_gc_reserve (vec_, 1 ); return VEC_rtx_base_quick_insert (((*vec_) ? &(*vec_)->base : 0), ix_, obj_ ); } struct vec_swallow_trailing_semi;



struct object_block {

  section *sect;


  unsigned int alignment;


  long size;
# 224 "../../gcc/rtl.h"
  VEC_rtx_gc *objects;
# 234 "../../gcc/rtl.h"
  VEC_rtx_gc *anchors;
};



struct
                                      rtx_def {

  __extension__ enum rtx_code code: 16;


  __extension__ enum machine_mode mode : 8;






  unsigned int jump : 1;




  unsigned int call : 1;







  unsigned int unchanging : 1;
# 277 "../../gcc/rtl.h"
  unsigned int volatil : 1;
# 291 "../../gcc/rtl.h"
  unsigned int in_struct : 1;






  unsigned int used : 1;






  unsigned frame_related : 1;




  unsigned return_val : 1;




  union u {
    rtunion fld[1];
    long hwint[1];
    struct block_symbol block_sym;
    struct real_value rv;
    struct fixed_value fv;
  } u;
};
# 359 "../../gcc/rtl.h"
struct rtvec_def {
  int num_elem;
  rtx elem[1];
};
# 836 "../../gcc/rtl.h"
enum reg_note
{

# 1 "../../gcc/reg-notes.def" 1
# 33 "../../gcc/reg-notes.def"
REG_DEP_TRUE,




REG_DEAD,


REG_INC,
# 52 "../../gcc/reg-notes.def"
REG_EQUIV,




REG_EQUAL,






REG_NONNEG,


REG_UNUSED,
# 76 "../../gcc/reg-notes.def"
REG_CC_SETTER,
REG_CC_USER,




REG_LABEL_TARGET,





REG_LABEL_OPERAND,




REG_DEP_OUTPUT,
REG_DEP_ANTI,





REG_BR_PROB,




REG_VALUE_PROFILE,



REG_NOALIAS,





REG_BR_PRED,




REG_FRAME_RELATED_EXPR,
# 130 "../../gcc/reg-notes.def"
REG_CFA_DEF_CFA,







REG_CFA_ADJUST_CFA,





REG_CFA_OFFSET,




REG_CFA_REGISTER,





REG_CFA_RESTORE,




REG_CFA_SET_VDRAP,




REG_EH_CONTEXT,





REG_EH_REGION,


REG_SAVE_NOTE,


REG_NORETURN,



REG_NON_LOCAL_GOTO,




REG_CROSSING_JUMP,



REG_SETJMP,
# 840 "../../gcc/rtl.h" 2

  REG_NOTE_MAX
};
# 851 "../../gcc/rtl.h"
extern const char * const reg_note_name[];
# 940 "../../gcc/rtl.h"
enum var_init_status
{
  VAR_INIT_STATUS_UNKNOWN,
  VAR_INIT_STATUS_UNINITIALIZED,
  VAR_INIT_STATUS_INITIALIZED
};
# 956 "../../gcc/rtl.h"
enum insn_note
{

# 1 "../../gcc/insn-notes.def" 1
# 35 "../../gcc/insn-notes.def"
NOTE_INSN_DELETED,


NOTE_INSN_DELETED_LABEL,



NOTE_INSN_BLOCK_BEG,
NOTE_INSN_BLOCK_END,




NOTE_INSN_FUNCTION_BEG,


NOTE_INSN_PROLOGUE_END,


NOTE_INSN_EPILOGUE_BEG,



NOTE_INSN_EH_REGION_BEG,
NOTE_INSN_EH_REGION_END,


NOTE_INSN_VAR_LOCATION,




NOTE_INSN_BASIC_BLOCK,



NOTE_INSN_SWITCH_TEXT_SECTIONS,



NOTE_INSN_CFA_RESTORE_STATE,
# 960 "../../gcc/rtl.h" 2


  NOTE_INSN_MAX
};



extern const char * const note_insn_name[NOTE_INSN_MAX];
# 982 "../../gcc/rtl.h"
enum label_kind
{
  LABEL_NORMAL = 0,
  LABEL_STATIC_ENTRY,
  LABEL_GLOBAL_ENTRY,
  LABEL_WEAK_ENTRY
};
# 1050 "../../gcc/rtl.h"
static __inline__ unsigned int
rhs_regno (const_rtx x)
{
  return (((x)->u.fld[0]).rt_uint);
}
# 1124 "../../gcc/rtl.h"
extern void init_rtlanal (void);
extern int rtx_cost (rtx, enum rtx_code, unsigned char);
extern int address_cost (rtx, enum machine_mode, addr_space_t, unsigned char);
extern unsigned int subreg_lsb (const_rtx);
extern unsigned int subreg_lsb_1 (enum machine_mode, enum machine_mode,
      unsigned int);
extern unsigned int subreg_regno_offset (unsigned int, enum machine_mode,
      unsigned int, enum machine_mode);
extern unsigned char subreg_offset_representable_p (unsigned int, enum machine_mode,
        unsigned int, enum machine_mode);
extern unsigned int subreg_regno (const_rtx);
extern int simplify_subreg_regno (unsigned int, enum machine_mode,
      unsigned int, enum machine_mode);
extern unsigned int subreg_nregs (const_rtx);
extern unsigned int subreg_nregs_with_regno (unsigned int, const_rtx);
extern unsigned long nonzero_bits (const_rtx, enum machine_mode);
extern unsigned int num_sign_bit_copies (const_rtx, enum machine_mode);
extern unsigned char constant_pool_constant_p (rtx);
extern unsigned char truncated_to_mode (enum machine_mode, const_rtx);
extern int low_bitmask_len (enum machine_mode, unsigned long);
# 1543 "../../gcc/rtl.h"
extern int generating_concat_p;


extern int currently_expanding_to_rtl;




extern int ceil_log2 (unsigned long);


extern void set_stack_check_libfunc (rtx);
extern long trunc_int_for_mode (long, enum machine_mode);
extern rtx plus_constant (rtx, long);


extern rtx gen_blockage (void);
extern rtvec gen_rtvec (int, ...);
extern rtx copy_insn_1 (rtx);
extern rtx copy_insn (rtx);
extern rtx gen_int_mode (long, enum machine_mode);
extern rtx emit_copy_of_insn_after (rtx, rtx);
extern void set_reg_attrs_from_value (rtx, rtx);
extern void set_reg_attrs_for_parm (rtx, rtx);
extern void set_reg_attrs_for_decl_rtl (tree t, rtx x);
extern void adjust_reg_mode (rtx, enum machine_mode);
extern int mem_expr_equal_p (const_tree, const_tree);


extern rtx rtx_alloc_stat (enum rtx_code );


extern rtvec rtvec_alloc (int);
extern rtvec shallow_copy_rtvec (rtvec);
extern unsigned char shared_const_p (const_rtx);
extern rtx copy_rtx (rtx);
extern void dump_rtx_statistics (void);


extern rtx copy_rtx_if_shared (rtx);


extern unsigned int rtx_size (const_rtx);
extern rtx shallow_copy_rtx_stat (const_rtx );

extern int rtx_equal_p (const_rtx, const_rtx);


extern rtvec gen_rtvec_v (int, rtx *);
extern rtx gen_reg_rtx (enum machine_mode);
extern rtx gen_rtx_REG_offset (rtx, enum machine_mode, unsigned int, int);
extern rtx gen_reg_rtx_offset (rtx, enum machine_mode, int);
extern rtx gen_reg_rtx_and_attrs (rtx);
extern rtx gen_label_rtx (void);
extern rtx gen_lowpart_common (enum machine_mode, rtx);


extern rtx gen_lowpart_if_possible (enum machine_mode, rtx);


extern rtx gen_highpart (enum machine_mode, rtx);
extern rtx gen_highpart_mode (enum machine_mode, enum machine_mode, rtx);
extern rtx operand_subword (rtx, unsigned int, int, enum machine_mode);


extern rtx operand_subword_force (rtx, unsigned int, enum machine_mode);
extern int subreg_lowpart_p (const_rtx);
extern unsigned int subreg_lowpart_offset (enum machine_mode,
        enum machine_mode);
extern unsigned int subreg_highpart_offset (enum machine_mode,
         enum machine_mode);
extern int byte_lowpart_offset (enum machine_mode, enum machine_mode);
extern rtx make_safe_from (rtx, rtx);
extern rtx convert_memory_address_addr_space (enum machine_mode, rtx,
           addr_space_t);


extern rtx get_insns (void);
extern const char *get_insn_name (int);
extern rtx get_last_insn (void);
extern rtx get_last_insn_anywhere (void);
extern rtx get_first_nonnote_insn (void);
extern rtx get_last_nonnote_insn (void);
extern void start_sequence (void);
extern void push_to_sequence (rtx);
extern void push_to_sequence2 (rtx, rtx);
extern void end_sequence (void);
extern rtx immed_double_const (long, long,
          enum machine_mode);



extern rtx lowpart_subreg (enum machine_mode, rtx, enum machine_mode);


extern rtx force_const_mem (enum machine_mode, rtx);



struct function;
extern rtx get_pool_constant (rtx);
extern rtx get_pool_constant_mark (rtx, unsigned char *);
extern enum machine_mode get_pool_mode (const_rtx);
extern rtx simplify_subtraction (rtx);


extern rtx assign_stack_local (enum machine_mode, long, int);
extern rtx assign_stack_local_1 (enum machine_mode, long, int, unsigned char);
extern rtx assign_stack_temp (enum machine_mode, long, int);
extern rtx assign_stack_temp_for_type (enum machine_mode,
           long, int, tree);
extern rtx assign_temp (tree, int, int, int);


extern rtx emit_insn_before (rtx, rtx);
extern rtx emit_insn_before_noloc (rtx, rtx, struct basic_block_def *);
extern rtx emit_insn_before_setloc (rtx, rtx, int);
extern rtx emit_jump_insn_before (rtx, rtx);
extern rtx emit_jump_insn_before_noloc (rtx, rtx);
extern rtx emit_jump_insn_before_setloc (rtx, rtx, int);
extern rtx emit_call_insn_before (rtx, rtx);
extern rtx emit_call_insn_before_noloc (rtx, rtx);
extern rtx emit_call_insn_before_setloc (rtx, rtx, int);
extern rtx emit_debug_insn_before (rtx, rtx);
extern rtx emit_debug_insn_before_noloc (rtx, rtx);
extern rtx emit_debug_insn_before_setloc (rtx, rtx, int);
extern rtx emit_barrier_before (rtx);
extern rtx emit_label_before (rtx, rtx);
extern rtx emit_note_before (enum insn_note, rtx);
extern rtx emit_insn_after (rtx, rtx);
extern rtx emit_insn_after_noloc (rtx, rtx, struct basic_block_def *);
extern rtx emit_insn_after_setloc (rtx, rtx, int);
extern rtx emit_jump_insn_after (rtx, rtx);
extern rtx emit_jump_insn_after_noloc (rtx, rtx);
extern rtx emit_jump_insn_after_setloc (rtx, rtx, int);
extern rtx emit_call_insn_after (rtx, rtx);
extern rtx emit_call_insn_after_noloc (rtx, rtx);
extern rtx emit_call_insn_after_setloc (rtx, rtx, int);
extern rtx emit_debug_insn_after (rtx, rtx);
extern rtx emit_debug_insn_after_noloc (rtx, rtx);
extern rtx emit_debug_insn_after_setloc (rtx, rtx, int);
extern rtx emit_barrier_after (rtx);
extern rtx emit_label_after (rtx, rtx);
extern rtx emit_note_after (enum insn_note, rtx);
extern rtx emit_insn (rtx);
extern rtx emit_debug_insn (rtx);
extern rtx emit_jump_insn (rtx);
extern rtx emit_call_insn (rtx);
extern rtx emit_label (rtx);
extern rtx emit_barrier (void);
extern rtx emit_note (enum insn_note);
extern rtx emit_note_copy (rtx);
extern rtx gen_clobber (rtx);
extern rtx emit_clobber (rtx);
extern rtx gen_use (rtx);
extern rtx emit_use (rtx);
extern rtx make_insn_raw (rtx);
extern rtx make_debug_insn_raw (rtx);
extern rtx make_jump_insn_raw (rtx);
extern void add_function_usage_to (rtx, rtx);
extern rtx last_call_insn (void);
extern rtx previous_insn (rtx);
extern rtx next_insn (rtx);
extern rtx prev_nonnote_insn (rtx);
extern rtx prev_nonnote_insn_bb (rtx);
extern rtx next_nonnote_insn (rtx);
extern rtx next_nonnote_insn_bb (rtx);
extern rtx prev_nondebug_insn (rtx);
extern rtx next_nondebug_insn (rtx);
extern rtx prev_real_insn (rtx);
extern rtx next_real_insn (rtx);
extern rtx prev_active_insn (rtx);
extern rtx next_active_insn (rtx);
extern int active_insn_p (const_rtx);
extern rtx prev_label (rtx);
extern rtx next_label (rtx);
extern rtx skip_consecutive_labels (rtx);
extern rtx next_cc0_user (rtx);
extern rtx prev_cc0_setter (rtx);


extern int insn_line (const_rtx);
extern const char * insn_file (const_rtx);
extern location_t locator_location (int);
extern int locator_line (int);
extern const char * locator_file (int);
extern unsigned char locator_eq (int, int);
extern int prologue_locator, epilogue_locator;


extern enum rtx_code reverse_condition (enum rtx_code);
extern enum rtx_code reverse_condition_maybe_unordered (enum rtx_code);
extern enum rtx_code swap_condition (enum rtx_code);
extern enum rtx_code unsigned_condition (enum rtx_code);
extern enum rtx_code signed_condition (enum rtx_code);
extern void mark_jump_label (rtx, rtx, int);
extern unsigned int cleanup_barriers (void);


extern rtx delete_related_insns (rtx);


extern rtx *find_constant_term_loc (rtx *);


extern rtx try_split (rtx, rtx, int);
extern int split_branch_probability;


extern rtx split_insns (rtx, rtx);


extern rtx simplify_const_unary_operation (enum rtx_code, enum machine_mode,
        rtx, enum machine_mode);
extern rtx simplify_unary_operation (enum rtx_code, enum machine_mode, rtx,
         enum machine_mode);
extern rtx simplify_const_binary_operation (enum rtx_code, enum machine_mode,
         rtx, rtx);
extern rtx simplify_binary_operation (enum rtx_code, enum machine_mode, rtx,
          rtx);
extern rtx simplify_ternary_operation (enum rtx_code, enum machine_mode,
           enum machine_mode, rtx, rtx, rtx);
extern rtx simplify_const_relational_operation (enum rtx_code,
      enum machine_mode, rtx, rtx);
extern rtx simplify_relational_operation (enum rtx_code, enum machine_mode,
       enum machine_mode, rtx, rtx);
extern rtx simplify_gen_binary (enum rtx_code, enum machine_mode, rtx, rtx);
extern rtx simplify_gen_unary (enum rtx_code, enum machine_mode, rtx,
          enum machine_mode);
extern rtx simplify_gen_ternary (enum rtx_code, enum machine_mode,
     enum machine_mode, rtx, rtx, rtx);
extern rtx simplify_gen_relational (enum rtx_code, enum machine_mode,
        enum machine_mode, rtx, rtx);
extern rtx simplify_subreg (enum machine_mode, rtx, enum machine_mode,
       unsigned int);
extern rtx simplify_gen_subreg (enum machine_mode, rtx, enum machine_mode,
    unsigned int);
extern rtx simplify_replace_fn_rtx (rtx, const_rtx,
        rtx (*fn) (rtx, const_rtx, void *), void *);
extern rtx simplify_replace_rtx (rtx, const_rtx, rtx);
extern rtx simplify_rtx (const_rtx);
extern rtx avoid_constant_pool_reference (rtx);
extern rtx delegitimize_mem_from_attrs (rtx);
extern unsigned char mode_signbit_p (enum machine_mode, const_rtx);


extern enum machine_mode choose_hard_reg_mode (unsigned int, unsigned int,
            unsigned char);


extern rtx set_unique_reg_note (rtx, enum reg_note, rtx);
extern void set_insn_deleted (rtx);
# 1806 "../../gcc/rtl.h"
typedef struct replace_label_data
{
  rtx r1;
  rtx r2;
  unsigned char update_label_nuses;
} replace_label_data;

extern int rtx_addr_can_trap_p (const_rtx);
extern unsigned char nonzero_address_p (const_rtx);
extern int rtx_unstable_p (const_rtx);
extern unsigned char rtx_varies_p (const_rtx, unsigned char);
extern unsigned char rtx_addr_varies_p (const_rtx, unsigned char);
extern long get_integer_term (const_rtx);
extern rtx get_related_value (const_rtx);
extern unsigned char offset_within_block_p (const_rtx, long);
extern void split_const (rtx, rtx *, rtx *);
extern int reg_mentioned_p (const_rtx, const_rtx);
extern int count_occurrences (const_rtx, const_rtx, int);
extern int reg_referenced_p (const_rtx, const_rtx);
extern int reg_used_between_p (const_rtx, const_rtx, const_rtx);
extern int reg_set_between_p (const_rtx, const_rtx, const_rtx);
extern int commutative_operand_precedence (rtx);
extern unsigned char swap_commutative_operands_p (rtx, rtx);
extern int modified_between_p (const_rtx, const_rtx, const_rtx);
extern int no_labels_between_p (const_rtx, const_rtx);
extern int modified_in_p (const_rtx, const_rtx);
extern int reg_set_p (const_rtx, const_rtx);
extern rtx single_set_2 (const_rtx, const_rtx);
extern int multiple_sets (const_rtx);
extern int set_noop_p (const_rtx);
extern int noop_move_p (const_rtx);
extern rtx find_last_value (rtx, rtx *, rtx, int);
extern int refers_to_regno_p (unsigned int, unsigned int, const_rtx, rtx *);
extern int reg_overlap_mentioned_p (const_rtx, const_rtx);
extern const_rtx set_of (const_rtx, const_rtx);
extern void note_stores (const_rtx, void (*) (rtx, const_rtx, void *), void *);
extern void note_uses (rtx *, void (*) (rtx *, void *), void *);
extern int dead_or_set_p (const_rtx, const_rtx);
extern int dead_or_set_regno_p (const_rtx, unsigned int);
extern rtx find_reg_note (const_rtx, enum reg_note, const_rtx);
extern rtx find_regno_note (const_rtx, enum reg_note, unsigned int);
extern rtx find_reg_equal_equiv_note (const_rtx);
extern rtx find_constant_src (const_rtx);
extern int find_reg_fusage (const_rtx, enum rtx_code, const_rtx);
extern int find_regno_fusage (const_rtx, enum rtx_code, unsigned int);
extern rtx alloc_reg_note (enum reg_note, rtx, rtx);
extern void add_reg_note (rtx, enum reg_note, rtx);
extern void remove_note (rtx, const_rtx);
extern void remove_reg_equal_equiv_notes (rtx);
extern int side_effects_p (const_rtx);
extern int volatile_refs_p (const_rtx);
extern int volatile_insn_p (const_rtx);
extern int may_trap_p_1 (const_rtx, unsigned);
extern int may_trap_p (const_rtx);
extern int may_trap_or_fault_p (const_rtx);
extern unsigned char can_throw_internal (const_rtx);
extern unsigned char can_throw_external (const_rtx);
extern unsigned char insn_could_throw_p (const_rtx);
extern unsigned char insn_nothrow_p (const_rtx);
extern unsigned char can_nonlocal_goto (const_rtx);
extern void copy_reg_eh_region_note_forward (rtx, rtx, rtx);
extern void copy_reg_eh_region_note_backward(rtx, rtx, rtx);
extern int inequality_comparisons_p (const_rtx);
extern rtx replace_rtx (rtx, rtx, rtx);
extern int replace_label (rtx *, void *);
extern int rtx_referenced_p (rtx, rtx);
extern unsigned char tablejump_p (const_rtx, rtx *, rtx *);
extern int computed_jump_p (const_rtx);

typedef int (*rtx_function) (rtx *, void *);
extern int for_each_rtx (rtx *, rtx_function, void *);

typedef int (*rtx_equal_p_callback_function) (const_rtx *, const_rtx *,
                                              rtx *, rtx *);
extern int rtx_equal_p_cb (const_rtx, const_rtx,
                           rtx_equal_p_callback_function);

typedef int (*hash_rtx_callback_function) (const_rtx, enum machine_mode, rtx *,
                                           enum machine_mode *);
extern unsigned hash_rtx_cb (const_rtx, enum machine_mode, int *, int *,
                             unsigned char, hash_rtx_callback_function);

extern rtx regno_use_in (unsigned int, rtx);
extern int auto_inc_p (const_rtx);
extern int in_expr_list_p (const_rtx, const_rtx);
extern void remove_node_from_expr_list (const_rtx, rtx *);
extern int loc_mentioned_in_p (rtx *, const_rtx);
extern rtx find_first_parameter_load (rtx, rtx);
extern unsigned char keep_with_call_p (const_rtx);
extern unsigned char label_is_jump_target_p (const_rtx, const_rtx);
extern int insn_rtx_cost (rtx, unsigned char);



extern rtx canonicalize_condition (rtx, rtx, int, rtx *, rtx, int, int);



extern rtx get_condition (rtx, rtx *, int, int);


struct subreg_info
{

  int offset;

  int nregs;


  unsigned char representable_p;
};

extern void subreg_get_info (unsigned int, enum machine_mode,
        unsigned int, enum machine_mode,
        struct subreg_info *);



extern void free_EXPR_LIST_list (rtx *);
extern void free_INSN_LIST_list (rtx *);
extern void free_EXPR_LIST_node (rtx);
extern void free_INSN_LIST_node (rtx);
extern rtx alloc_INSN_LIST (rtx, rtx);
extern rtx alloc_EXPR_LIST (int, rtx, rtx);
extern void remove_free_INSN_LIST_elem (rtx, rtx *);
extern rtx remove_list_elem (rtx, rtx *);
extern rtx remove_free_INSN_LIST_node (rtx *);
extern rtx remove_free_EXPR_LIST_node (rtx *);





extern void init_move_cost (enum machine_mode);

extern unsigned char resize_reg_info (void);

extern void free_reg_info (void);
extern void init_subregs_of_mode (void);
extern void finish_subregs_of_mode (void);


extern rtx extract_asm_operands (rtx);
extern int asm_noperands (const_rtx);
extern const char *decode_asm_operands (rtx, rtx *, rtx **, const char **,
     enum machine_mode *, location_t *);

extern enum reg_class reg_preferred_class (int);
extern enum reg_class reg_alternate_class (int);
extern enum reg_class reg_cover_class (int);
extern void setup_reg_classes (int, enum reg_class, enum reg_class,
          enum reg_class);

extern void split_all_insns (void);
extern unsigned int split_all_insns_noflow (void);


extern rtx const_int_rtx[64 * 2 + 1];





extern rtx const_true_rtx;

extern rtx const_tiny_rtx[3][(int) MAX_MACHINE_MODE];
# 1994 "../../gcc/rtl.h"
enum global_rtl_index
{
  GR_PC,
  GR_CC0,
  GR_STACK_POINTER,
  GR_FRAME_POINTER,
# 2009 "../../gcc/rtl.h"
  GR_HARD_FRAME_POINTER,





  GR_ARG_POINTER,


  GR_VIRTUAL_INCOMING_ARGS,
  GR_VIRTUAL_STACK_ARGS,
  GR_VIRTUAL_STACK_DYNAMIC,
  GR_VIRTUAL_OUTGOING_ARGS,
  GR_VIRTUAL_CFA,

  GR_MAX
};


extern rtx global_rtl[GR_MAX];
# 2042 "../../gcc/rtl.h"
extern rtx pic_offset_table_rtx;
extern rtx return_address_pointer_rtx;
# 2060 "../../gcc/rtl.h"
extern rtx gen_rtx_CONST_INT (enum machine_mode, long);
extern rtx gen_rtx_CONST_VECTOR (enum machine_mode, rtvec);
extern rtx gen_raw_REG (enum machine_mode, int);
extern rtx gen_rtx_REG (enum machine_mode, unsigned);
extern rtx gen_rtx_SUBREG (enum machine_mode, rtx, int);
extern rtx gen_rtx_MEM (enum machine_mode, rtx);
# 2133 "../../gcc/rtl.h"
extern rtx output_constant_def (tree, int);
extern rtx lookup_constant_def (tree);




extern int reload_completed;


extern int epilogue_completed;




extern int reload_in_progress;
# 2157 "../../gcc/rtl.h"
extern int regstack_completed;
# 2166 "../../gcc/rtl.h"
extern int cse_not_expected;





extern int rtx_to_tree_code (enum rtx_code);


extern int delete_trivially_dead_insns (rtx, int);
extern int cse_main (rtx, int);
extern int exp_equiv_p (const_rtx, const_rtx, int, unsigned char);
extern unsigned hash_rtx (const_rtx x, enum machine_mode, int *, int *, unsigned char);


extern int comparison_dominates_p (enum rtx_code, enum rtx_code);
extern int condjump_p (const_rtx);
extern int any_condjump_p (const_rtx);
extern int any_uncondjump_p (const_rtx);
extern rtx pc_set (const_rtx);
extern rtx condjump_label (const_rtx);
extern int simplejump_p (const_rtx);
extern int returnjump_p (rtx);
extern int eh_returnjump_p (rtx);
extern int onlyjump_p (const_rtx);
extern int only_sets_cc0_p (const_rtx);
extern int sets_cc0_p (const_rtx);
extern int invert_jump_1 (rtx, rtx);
extern int invert_jump (rtx, rtx, int);
extern int rtx_renumbered_equal_p (const_rtx, const_rtx);
extern int true_regnum (const_rtx);
extern unsigned int reg_or_subregno (const_rtx);
extern int redirect_jump_1 (rtx, rtx);
extern void redirect_jump_2 (rtx, rtx, rtx, int, int);
extern int redirect_jump (rtx, rtx, int);
extern void rebuild_jump_labels (rtx);
extern rtx reversed_comparison (const_rtx, enum machine_mode);
extern enum rtx_code reversed_comparison_code (const_rtx, const_rtx);
extern enum rtx_code reversed_comparison_code_parts (enum rtx_code, const_rtx,
           const_rtx, const_rtx);
extern void delete_for_peephole (rtx, rtx);
extern int condjump_in_parallel_p (const_rtx);


extern int max_reg_num (void);
extern int max_label_num (void);
extern int get_first_label_num (void);
extern void maybe_set_first_label_num (rtx);
extern void delete_insns_since (rtx);
extern void mark_reg_pointer (rtx, int);
extern void mark_user_reg (rtx);
extern void reset_used_flags (rtx);
extern void set_used_flags (rtx);
extern void reorder_insns (rtx, rtx, rtx);
extern void reorder_insns_nobb (rtx, rtx, rtx);
extern int get_max_uid (void);
extern int get_max_insn_count (void);
extern int in_sequence_p (void);
extern void force_next_line_note (void);
extern void init_emit (void);
extern void init_emit_regs (void);
extern void init_emit_once (void);
extern void push_topmost_sequence (void);
extern void pop_topmost_sequence (void);
extern void set_new_first_and_last_insn (rtx, rtx);
extern unsigned int unshare_all_rtl (void);
extern void unshare_all_rtl_again (rtx);
extern void unshare_all_rtl_in_chain (rtx);
extern void verify_rtl_sharing (void);
extern void set_first_insn (rtx);
extern void set_last_insn (rtx);
extern void link_cc0_insns (rtx);
extern void add_insn (rtx);
extern void add_insn_before (rtx, rtx, struct basic_block_def *);
extern void add_insn_after (rtx, rtx, struct basic_block_def *);
extern void remove_insn (rtx);
extern rtx emit (rtx);
extern rtx delete_insn (rtx);
extern rtx entry_of_function (void);
extern void emit_insn_at_entry (rtx);
extern void delete_insn_chain (rtx, rtx, unsigned char);
extern rtx unlink_insn_chain (rtx, rtx);
extern rtx delete_insn_and_edges (rtx);
extern rtx gen_lowpart_SUBREG (enum machine_mode, rtx);
extern rtx gen_const_mem (enum machine_mode, rtx);
extern rtx gen_frame_mem (enum machine_mode, rtx);
extern rtx gen_tmp_stack_mem (enum machine_mode, rtx);
extern unsigned char validate_subreg (enum machine_mode, enum machine_mode,
        const_rtx, unsigned int);


extern unsigned int extended_count (const_rtx, enum machine_mode, int);
extern rtx remove_death (unsigned int, rtx);
extern void dump_combine_stats (FILE *);
extern void dump_combine_total_stats (FILE *);


extern void delete_dead_jumptables (void);


extern void debug_bb_n_slim (int);
extern void debug_bb_slim (struct basic_block_def *);
extern void print_rtl_slim (FILE *, rtx, rtx, int, int);
extern void print_rtl_slim_with_bb (FILE *, rtx, int);
extern void dump_insn_slim (FILE *f, rtx x);
extern void debug_insn_slim (rtx x);


extern void schedule_insns (void);


extern void schedule_ebbs (void);


extern void fix_sched_param (const char *, const char *);


extern void sel_sched_fix_param (const char *param, const char *val);


extern const char *print_rtx_head;
extern void debug_rtx (const_rtx);
extern void debug_rtx_list (const_rtx, int);
extern void debug_rtx_range (const_rtx, const_rtx);
extern const_rtx debug_rtx_find (const_rtx, int);
extern void print_mem_expr (FILE *, const_tree);
extern void print_rtl (FILE *, const_rtx);
extern void print_simple_rtl (FILE *, const_rtx);
extern int print_rtl_single (FILE *, const_rtx);
extern void print_inline_rtx (FILE *, const_rtx, int);


extern void reposition_prologue_and_epilogue_notes (void);
extern int prologue_epilogue_contains (const_rtx);
extern int sibcall_epilogue_contains (const_rtx);
extern void mark_temp_addr_taken (rtx);
extern void update_temp_slot_address (rtx, rtx);
extern void maybe_copy_epilogue_insn (rtx, rtx);


extern void expand_null_return (void);
extern void expand_naked_return (void);
extern void emit_jump (rtx);


extern rtx move_by_pieces (rtx, rtx, unsigned long,
      unsigned int, int);


extern void print_rtl_with_bb (FILE *, const_rtx);


extern void dump_reg_info (FILE *);
extern void dump_flow_info (FILE *, int);


extern void init_expmed (void);
extern void expand_inc (rtx, rtx);
extern void expand_dec (rtx, rtx);


extern unsigned char can_copy_p (enum machine_mode);
extern unsigned char can_assign_to_reg_without_clobbers_p (rtx);
extern rtx fis_get_condition (rtx);





extern void mark_elimination (int, int);


extern int reg_classes_intersect_p (enum reg_class, enum reg_class);
extern int reg_class_subset_p (enum reg_class, enum reg_class);
extern void globalize_reg (int);
extern void init_reg_modes_target (void);
extern void init_regs (void);
extern void reinit_regs (void);
extern void init_fake_stack_mems (void);
extern void save_register_info (void);
extern void init_reg_sets (void);
extern void regclass (rtx, int);
extern void reg_scan (rtx, unsigned int);
extern void fix_register (const char *, int, int);
extern unsigned char invalid_mode_change_p (unsigned int, enum reg_class,
       enum machine_mode);


extern void dbr_schedule (rtx);


extern int function_invariant_p (const_rtx);


enum libcall_type
{
  LCT_NORMAL = 0,
  LCT_CONST = 1,
  LCT_PURE = 2,
  LCT_NORETURN = 3,
  LCT_THROW = 4,
  LCT_RETURNS_TWICE = 5
};

extern void emit_library_call (rtx, enum libcall_type, enum machine_mode, int,
          ...);
extern rtx emit_library_call_value (rtx, rtx, enum libcall_type,
        enum machine_mode, int, ...);


extern void init_varasm_once (void);
extern enum tls_model decl_default_tls_model (const_tree);


extern void traverse_md_constants (int (*) (void **, void *), void *);
struct md_constant { char *name, *value; };


extern int read_skip_spaces (FILE *);
extern unsigned char read_rtx (FILE *, rtx *, int *);
extern void copy_rtx_ptr_loc (const void *, const void *);
extern void print_rtx_ptr_loc (const void *);
extern const char *join_c_conditions (const char *, const char *);
extern void print_c_condition (const char *);
extern const char *read_rtx_filename;
extern int read_rtx_lineno;


extern rtx canon_rtx (rtx);
extern int true_dependence (const_rtx, enum machine_mode, const_rtx, unsigned char (*)(const_rtx, unsigned char));
extern rtx get_addr (rtx);
extern int canon_true_dependence (const_rtx, enum machine_mode, rtx, const_rtx,
      rtx, unsigned char (*)(const_rtx, unsigned char));
extern int read_dependence (const_rtx, const_rtx);
extern int anti_dependence (const_rtx, const_rtx);
extern int output_dependence (const_rtx, const_rtx);
extern void init_alias_target (void);
extern void init_alias_analysis (void);
extern void end_alias_analysis (void);
extern unsigned char memory_modified_in_insn_p (const_rtx, const_rtx);
extern rtx find_base_term (rtx);
extern rtx gen_hard_reg_clobber (enum machine_mode, unsigned int);
extern rtx get_reg_known_value (unsigned int);
extern unsigned char get_reg_known_equiv_p (unsigned int);


extern int stack_regs_mentioned (const_rtx insn);



extern rtx stack_limit_rtx;


extern void invert_br_probabilities (rtx);
extern unsigned char expensive_function_p (int);


extern unsigned int variable_tracking_main (void);


extern void get_mode_bounds (enum machine_mode, int, enum machine_mode,
        rtx *, rtx *);


extern rtx reversed_condition (rtx);
extern rtx compare_and_jump_seq (rtx, rtx, enum rtx_code, rtx, int, rtx);


extern rtx canon_condition (rtx);
extern void simplify_using_condition (rtx, rtx *, struct bitmap_head_def *);


extern unsigned int compute_alignments (void);
extern int asm_str_count (const char *templ);

struct rtl_hooks
{
  rtx (*gen_lowpart) (enum machine_mode, rtx);
  rtx (*gen_lowpart_no_emit) (enum machine_mode, rtx);
  rtx (*reg_nonzero_bits) (const_rtx, enum machine_mode, const_rtx, enum machine_mode,
      unsigned long, unsigned long *);
  rtx (*reg_num_sign_bit_copies) (const_rtx, enum machine_mode, const_rtx, enum machine_mode,
      unsigned int, unsigned int *);
  unsigned char (*reg_truncated_to_mode) (enum machine_mode, const_rtx);


};


extern struct rtl_hooks rtl_hooks;


extern const struct rtl_hooks general_rtl_hooks;




extern void insn_locators_alloc (void);
extern void insn_locators_free (void);
extern void insn_locators_finalize (void);
extern void set_curr_insn_source_location (location_t);
extern location_t get_curr_insn_source_location (void);
extern void set_curr_insn_block (tree);
extern tree get_curr_insn_block (void);
extern int curr_insn_locator (void);
extern unsigned char optimize_insn_for_size_p (void);
extern unsigned char optimize_insn_for_speed_p (void);
# 33 "../../gcc/rtl.c" 2

# 1 "../../gcc/ggc.h" 1
# 30 "../../gcc/ggc.h"
extern const char empty_string[];
extern const char digit_vector[];






typedef void (*gt_pointer_operator) (void *, void *);

# 1 "./gtype-desc.h" 1
# 23 "./gtype-desc.h"
enum gt_types_enum {
 gt_ggc_e_15interface_tuple,
 gt_ggc_e_16volatilized_type,
 gt_ggc_e_17string_descriptor,
 gt_ggc_e_15c_inline_static,
 gt_ggc_e_24VEC_c_goto_bindings_p_gc,
 gt_ggc_e_15c_goto_bindings,
 gt_ggc_e_7c_scope,
 gt_ggc_e_9c_binding,
 gt_ggc_e_12c_label_vars,
 gt_ggc_e_8c_parser,
 gt_ggc_e_9imp_entry,
 gt_ggc_e_16hashed_attribute,
 gt_ggc_e_12hashed_entry,
 gt_ggc_e_14type_assertion,
 gt_ggc_e_18treetreehash_entry,
 gt_ggc_e_5CPool,
 gt_ggc_e_3JCF,
 gt_ggc_e_17module_htab_entry,
 gt_ggc_e_13binding_level,
 gt_ggc_e_9opt_stack,
 gt_ggc_e_11align_stack,
 gt_ggc_e_18VEC_tree_gc_vec_gc,
 gt_ggc_e_19VEC_const_char_p_gc,
 gt_ggc_e_21pending_abstract_type,
 gt_ggc_e_15VEC_tree_int_gc,
 gt_ggc_e_9cp_parser,
 gt_ggc_e_17cp_parser_context,
 gt_ggc_e_8cp_lexer,
 gt_ggc_e_10tree_check,
 gt_ggc_e_22VEC_deferred_access_gc,
 gt_ggc_e_10spec_entry,
 gt_ggc_e_16pending_template,
 gt_ggc_e_21named_label_use_entry,
 gt_ggc_e_28VEC_deferred_access_check_gc,
 gt_ggc_e_18sorted_fields_type,
 gt_ggc_e_18VEC_tree_pair_s_gc,
 gt_ggc_e_17named_label_entry,
 gt_ggc_e_32VEC_qualified_typedef_usage_t_gc,
 gt_ggc_e_14cp_token_cache,
 gt_ggc_e_11saved_scope,
 gt_ggc_e_16cxx_int_tree_map,
 gt_ggc_e_23VEC_cp_class_binding_gc,
 gt_ggc_e_24VEC_cxx_saved_binding_gc,
 gt_ggc_e_16cp_binding_level,
 gt_ggc_e_11cxx_binding,
 gt_ggc_e_15binding_entry_s,
 gt_ggc_e_15binding_table_s,
 gt_ggc_e_11tinst_level,
 gt_ggc_e_14VEC_tinfo_s_gc,
 gt_ggc_e_18gnat_binding_level,
 gt_ggc_e_9elab_info,
 gt_ggc_e_10stmt_group,
 gt_ggc_e_16VEC_parm_attr_gc,
 gt_ggc_e_11parm_attr_d,
 gt_ggc_e_22VEC_ipa_edge_args_t_gc,
 gt_ggc_e_20lto_symtab_entry_def,
 gt_ggc_e_20ssa_operand_memory_d,
 gt_ggc_e_13scev_info_str,
 gt_ggc_e_24VEC_mem_addr_template_gc,
 gt_ggc_e_13VEC_gimple_gc,
 gt_ggc_e_9type_hash,
 gt_ggc_e_16string_pool_data,
 gt_ggc_e_13libfunc_entry,
 gt_ggc_e_23temp_slot_address_entry,
 gt_ggc_e_15throw_stmt_node,
 gt_ggc_e_21VEC_eh_landing_pad_gc,
 gt_ggc_e_16VEC_eh_region_gc,
 gt_ggc_e_10eh_catch_d,
 gt_ggc_e_16eh_landing_pad_d,
 gt_ggc_e_11eh_region_d,
 gt_ggc_e_10vcall_insn,
 gt_ggc_e_18VEC_vcall_entry_gc,
 gt_ggc_e_18VEC_dcall_entry_gc,
 gt_ggc_e_16var_loc_list_def,
 gt_ggc_e_12var_loc_node,
 gt_ggc_e_20VEC_die_arg_entry_gc,
 gt_ggc_e_16limbo_die_struct,
 gt_ggc_e_20VEC_pubname_entry_gc,
 gt_ggc_e_19VEC_dw_attr_node_gc,
 gt_ggc_e_18comdat_type_struct,
 gt_ggc_e_25dw_ranges_by_label_struct,
 gt_ggc_e_16dw_ranges_struct,
 gt_ggc_e_28dw_separate_line_info_struct,
 gt_ggc_e_19dw_line_info_struct,
 gt_ggc_e_25VEC_deferred_locations_gc,
 gt_ggc_e_18dw_loc_list_struct,
 gt_ggc_e_15dwarf_file_data,
 gt_ggc_e_15queued_reg_save,
 gt_ggc_e_20indirect_string_node,
 gt_ggc_e_19dw_loc_descr_struct,
 gt_ggc_e_13dw_fde_struct,
 gt_ggc_e_13dw_cfi_struct,
 gt_ggc_e_8typeinfo,
 gt_ggc_e_22VEC_alias_set_entry_gc,
 gt_ggc_e_17alias_set_entry_d,
 gt_ggc_e_24constant_descriptor_tree,
 gt_ggc_e_15cgraph_asm_node,
 gt_ggc_e_12varpool_node,
 gt_ggc_e_22VEC_cgraph_node_set_gc,
 gt_ggc_e_19cgraph_node_set_def,
 gt_ggc_e_27cgraph_node_set_element_def,
 gt_ggc_e_22VEC_cgraph_node_ptr_gc,
 gt_ggc_e_11cgraph_edge,
 gt_ggc_e_24VEC_ipa_replace_map_p_gc,
 gt_ggc_e_15ipa_replace_map,
 gt_ggc_e_11cgraph_node,
 gt_ggc_e_18VEC_basic_block_gc,
 gt_ggc_e_14gimple_bb_info,
 gt_ggc_e_11rtl_bb_info,
 gt_ggc_e_11VEC_edge_gc,
 gt_ggc_e_17cselib_val_struct,
 gt_ggc_e_12elt_loc_list,
 gt_ggc_e_13VEC_loop_p_gc,
 gt_ggc_e_4loop,
 gt_ggc_e_9loop_exit,
 gt_ggc_e_13nb_iter_bound,
 gt_ggc_e_24types_used_by_vars_entry,
 gt_ggc_e_17language_function,
 gt_ggc_e_5loops,
 gt_ggc_e_18control_flow_graph,
 gt_ggc_e_9eh_status,
 gt_ggc_e_20initial_value_struct,
 gt_ggc_e_17rtx_constant_pool,
 gt_ggc_e_18VEC_temp_slot_p_gc,
 gt_ggc_e_9temp_slot,
 gt_ggc_e_9gimple_df,
 gt_ggc_e_23VEC_call_site_record_gc,
 gt_ggc_e_18call_site_record_d,
 gt_ggc_e_14sequence_stack,
 gt_ggc_e_8elt_list,
 gt_ggc_e_17tree_priority_map,
 gt_ggc_e_12tree_int_map,
 gt_ggc_e_8tree_map,
 gt_ggc_e_14lang_tree_node,
 gt_ggc_e_24tree_statement_list_node,
 gt_ggc_e_9var_ann_d,
 gt_ggc_e_9lang_decl,
 gt_ggc_e_9lang_type,
 gt_ggc_e_10die_struct,
 gt_ggc_e_15varray_head_tag,
 gt_ggc_e_12ptr_info_def,
 gt_ggc_e_22VEC_constructor_elt_gc,
 gt_ggc_e_17VEC_alias_pair_gc,
 gt_ggc_e_11VEC_tree_gc,
 gt_ggc_e_12VEC_uchar_gc,
 gt_ggc_e_8function,
 gt_ggc_e_23constant_descriptor_rtx,
 gt_ggc_e_11fixed_value,
 gt_ggc_e_10real_value,
 gt_ggc_e_10VEC_rtx_gc,
 gt_ggc_e_12object_block,
 gt_ggc_e_9reg_attrs,
 gt_ggc_e_9mem_attrs,
 gt_ggc_e_14bitmap_obstack,
 gt_ggc_e_18bitmap_element_def,
 gt_ggc_e_16machine_function,
 gt_ggc_e_17stack_local_entry,
 gt_ggc_e_15basic_block_def,
 gt_ggc_e_8edge_def,
 gt_ggc_e_17gimple_seq_node_d,
 gt_ggc_e_12gimple_seq_d,
 gt_ggc_e_7section,
 gt_ggc_e_18gimple_statement_d,
 gt_ggc_e_9rtvec_def,
 gt_ggc_e_7rtx_def,
 gt_ggc_e_15bitmap_head_def,
 gt_ggc_e_9tree_node,
 gt_ggc_e_6answer,
 gt_ggc_e_9cpp_macro,
 gt_ggc_e_9cpp_token,
 gt_ggc_e_9line_maps,
 gt_e_II17splay_tree_node_s,
 gt_e_SP9tree_node17splay_tree_node_s,
 gt_e_P9tree_nodeP9tree_node17splay_tree_node_s,
 gt_e_IP9tree_node17splay_tree_node_s,
 gt_e_P15interface_tuple4htab,
 gt_e_P16volatilized_type4htab,
 gt_e_P17string_descriptor4htab,
 gt_e_P14type_assertion4htab,
 gt_e_P18treetreehash_entry4htab,
 gt_e_P17module_htab_entry4htab,
 gt_e_P21pending_abstract_type4htab,
 gt_e_P10spec_entry4htab,
 gt_e_P16cxx_int_tree_map4htab,
 gt_e_P17named_label_entry4htab,
 gt_e_P12tree_int_map4htab,
 gt_e_P20lto_symtab_entry_def4htab,
 gt_e_IP9tree_node12splay_tree_s,
 gt_e_P9tree_nodeP9tree_node12splay_tree_s,
 gt_e_P12varpool_node4htab,
 gt_e_P13scev_info_str4htab,
 gt_e_P23constant_descriptor_rtx4htab,
 gt_e_P24constant_descriptor_tree4htab,
 gt_e_P12object_block4htab,
 gt_e_P7section4htab,
 gt_e_P17tree_priority_map4htab,
 gt_e_P8tree_map4htab,
 gt_e_P9type_hash4htab,
 gt_e_P13libfunc_entry4htab,
 gt_e_P23temp_slot_address_entry4htab,
 gt_e_P15throw_stmt_node4htab,
 gt_e_P9reg_attrs4htab,
 gt_e_P9mem_attrs4htab,
 gt_e_P7rtx_def4htab,
 gt_e_SP9tree_node12splay_tree_s,
 gt_e_P10vcall_insn4htab,
 gt_e_P16var_loc_list_def4htab,
 gt_e_P10die_struct4htab,
 gt_e_P15dwarf_file_data4htab,
 gt_e_P20indirect_string_node4htab,
 gt_e_P11cgraph_node4htab,
 gt_e_II12splay_tree_s,
 gt_e_P27cgraph_node_set_element_def4htab,
 gt_e_P11cgraph_edge4htab,
 gt_e_P9loop_exit4htab,
 gt_e_P24types_used_by_vars_entry4htab,
 gt_e_P9tree_node4htab,
 gt_types_enum_last
};






extern void gt_ggc_mx_interface_tuple (void *);



extern void gt_ggc_mx_volatilized_type (void *);



extern void gt_ggc_mx_string_descriptor (void *);



extern void gt_ggc_mx_c_inline_static (void *);



extern void gt_ggc_mx_VEC_c_goto_bindings_p_gc (void *);



extern void gt_ggc_mx_c_goto_bindings (void *);



extern void gt_ggc_mx_c_scope (void *);



extern void gt_ggc_mx_c_binding (void *);



extern void gt_ggc_mx_c_label_vars (void *);



extern void gt_ggc_mx_c_parser (void *);



extern void gt_ggc_mx_imp_entry (void *);



extern void gt_ggc_mx_hashed_attribute (void *);



extern void gt_ggc_mx_hashed_entry (void *);



extern void gt_ggc_mx_type_assertion (void *);



extern void gt_ggc_mx_treetreehash_entry (void *);



extern void gt_ggc_mx_CPool (void *);



extern void gt_ggc_mx_JCF (void *);



extern void gt_ggc_mx_module_htab_entry (void *);



extern void gt_ggc_mx_binding_level (void *);



extern void gt_ggc_mx_opt_stack (void *);



extern void gt_ggc_mx_align_stack (void *);



extern void gt_ggc_mx_VEC_tree_gc_vec_gc (void *);



extern void gt_ggc_mx_VEC_const_char_p_gc (void *);



extern void gt_ggc_mx_pending_abstract_type (void *);



extern void gt_ggc_mx_VEC_tree_int_gc (void *);



extern void gt_ggc_mx_cp_parser (void *);



extern void gt_ggc_mx_cp_parser_context (void *);



extern void gt_ggc_mx_cp_lexer (void *);



extern void gt_ggc_mx_tree_check (void *);



extern void gt_ggc_mx_VEC_deferred_access_gc (void *);



extern void gt_ggc_mx_spec_entry (void *);



extern void gt_ggc_mx_pending_template (void *);



extern void gt_ggc_mx_named_label_use_entry (void *);



extern void gt_ggc_mx_VEC_deferred_access_check_gc (void *);



extern void gt_ggc_mx_sorted_fields_type (void *);



extern void gt_ggc_mx_VEC_tree_pair_s_gc (void *);



extern void gt_ggc_mx_named_label_entry (void *);



extern void gt_ggc_mx_VEC_qualified_typedef_usage_t_gc (void *);



extern void gt_ggc_mx_cp_token_cache (void *);



extern void gt_ggc_mx_saved_scope (void *);



extern void gt_ggc_mx_cxx_int_tree_map (void *);



extern void gt_ggc_mx_VEC_cp_class_binding_gc (void *);



extern void gt_ggc_mx_VEC_cxx_saved_binding_gc (void *);



extern void gt_ggc_mx_cp_binding_level (void *);



extern void gt_ggc_mx_cxx_binding (void *);



extern void gt_ggc_mx_binding_entry_s (void *);



extern void gt_ggc_mx_binding_table_s (void *);



extern void gt_ggc_mx_tinst_level (void *);



extern void gt_ggc_mx_VEC_tinfo_s_gc (void *);



extern void gt_ggc_mx_gnat_binding_level (void *);



extern void gt_ggc_mx_elab_info (void *);



extern void gt_ggc_mx_stmt_group (void *);



extern void gt_ggc_mx_VEC_parm_attr_gc (void *);



extern void gt_ggc_mx_parm_attr_d (void *);



extern void gt_ggc_mx_VEC_ipa_edge_args_t_gc (void *);



extern void gt_ggc_mx_lto_symtab_entry_def (void *);



extern void gt_ggc_mx_ssa_operand_memory_d (void *);



extern void gt_ggc_mx_scev_info_str (void *);



extern void gt_ggc_mx_VEC_mem_addr_template_gc (void *);



extern void gt_ggc_mx_VEC_gimple_gc (void *);



extern void gt_ggc_mx_type_hash (void *);



extern void gt_ggc_mx_string_pool_data (void *);



extern void gt_ggc_mx_libfunc_entry (void *);



extern void gt_ggc_mx_temp_slot_address_entry (void *);



extern void gt_ggc_mx_throw_stmt_node (void *);



extern void gt_ggc_mx_VEC_eh_landing_pad_gc (void *);



extern void gt_ggc_mx_VEC_eh_region_gc (void *);



extern void gt_ggc_mx_eh_catch_d (void *);



extern void gt_ggc_mx_eh_landing_pad_d (void *);



extern void gt_ggc_mx_eh_region_d (void *);



extern void gt_ggc_mx_vcall_insn (void *);



extern void gt_ggc_mx_VEC_vcall_entry_gc (void *);



extern void gt_ggc_mx_VEC_dcall_entry_gc (void *);



extern void gt_ggc_mx_var_loc_list_def (void *);



extern void gt_ggc_mx_var_loc_node (void *);



extern void gt_ggc_mx_VEC_die_arg_entry_gc (void *);



extern void gt_ggc_mx_limbo_die_struct (void *);



extern void gt_ggc_mx_VEC_pubname_entry_gc (void *);



extern void gt_ggc_mx_VEC_dw_attr_node_gc (void *);



extern void gt_ggc_mx_comdat_type_struct (void *);



extern void gt_ggc_mx_dw_ranges_by_label_struct (void *);



extern void gt_ggc_mx_dw_ranges_struct (void *);



extern void gt_ggc_mx_dw_separate_line_info_struct (void *);



extern void gt_ggc_mx_dw_line_info_struct (void *);



extern void gt_ggc_mx_VEC_deferred_locations_gc (void *);



extern void gt_ggc_mx_dw_loc_list_struct (void *);



extern void gt_ggc_mx_dwarf_file_data (void *);



extern void gt_ggc_mx_queued_reg_save (void *);



extern void gt_ggc_mx_indirect_string_node (void *);



extern void gt_ggc_mx_dw_loc_descr_struct (void *);



extern void gt_ggc_mx_dw_fde_struct (void *);



extern void gt_ggc_mx_dw_cfi_struct (void *);



extern void gt_ggc_mx_typeinfo (void *);



extern void gt_ggc_mx_VEC_alias_set_entry_gc (void *);



extern void gt_ggc_mx_alias_set_entry_d (void *);



extern void gt_ggc_mx_constant_descriptor_tree (void *);



extern void gt_ggc_mx_cgraph_asm_node (void *);



extern void gt_ggc_mx_varpool_node (void *);



extern void gt_ggc_mx_VEC_cgraph_node_set_gc (void *);



extern void gt_ggc_mx_cgraph_node_set_def (void *);



extern void gt_ggc_mx_cgraph_node_set_element_def (void *);



extern void gt_ggc_mx_VEC_cgraph_node_ptr_gc (void *);



extern void gt_ggc_mx_cgraph_edge (void *);



extern void gt_ggc_mx_VEC_ipa_replace_map_p_gc (void *);



extern void gt_ggc_mx_ipa_replace_map (void *);



extern void gt_ggc_mx_cgraph_node (void *);



extern void gt_ggc_mx_VEC_basic_block_gc (void *);



extern void gt_ggc_mx_gimple_bb_info (void *);



extern void gt_ggc_mx_rtl_bb_info (void *);



extern void gt_ggc_mx_VEC_edge_gc (void *);



extern void gt_ggc_mx_cselib_val_struct (void *);



extern void gt_ggc_mx_elt_loc_list (void *);



extern void gt_ggc_mx_VEC_loop_p_gc (void *);



extern void gt_ggc_mx_loop (void *);



extern void gt_ggc_mx_loop_exit (void *);



extern void gt_ggc_mx_nb_iter_bound (void *);



extern void gt_ggc_mx_types_used_by_vars_entry (void *);



extern void gt_ggc_mx_language_function (void *);



extern void gt_ggc_mx_loops (void *);



extern void gt_ggc_mx_control_flow_graph (void *);



extern void gt_ggc_mx_eh_status (void *);



extern void gt_ggc_mx_initial_value_struct (void *);



extern void gt_ggc_mx_rtx_constant_pool (void *);



extern void gt_ggc_mx_VEC_temp_slot_p_gc (void *);



extern void gt_ggc_mx_temp_slot (void *);



extern void gt_ggc_mx_gimple_df (void *);



extern void gt_ggc_mx_VEC_call_site_record_gc (void *);



extern void gt_ggc_mx_call_site_record_d (void *);



extern void gt_ggc_mx_sequence_stack (void *);



extern void gt_ggc_mx_elt_list (void *);



extern void gt_ggc_mx_tree_priority_map (void *);



extern void gt_ggc_mx_tree_int_map (void *);



extern void gt_ggc_mx_tree_map (void *);



extern void gt_ggc_mx_lang_tree_node (void *);



extern void gt_ggc_mx_tree_statement_list_node (void *);



extern void gt_ggc_mx_var_ann_d (void *);



extern void gt_ggc_mx_lang_decl (void *);



extern void gt_ggc_mx_lang_type (void *);



extern void gt_ggc_mx_die_struct (void *);



extern void gt_ggc_mx_varray_head_tag (void *);



extern void gt_ggc_mx_ptr_info_def (void *);



extern void gt_ggc_mx_VEC_constructor_elt_gc (void *);



extern void gt_ggc_mx_VEC_alias_pair_gc (void *);



extern void gt_ggc_mx_VEC_tree_gc (void *);



extern void gt_ggc_mx_VEC_uchar_gc (void *);



extern void gt_ggc_mx_function (void *);



extern void gt_ggc_mx_constant_descriptor_rtx (void *);



extern void gt_ggc_mx_fixed_value (void *);



extern void gt_ggc_mx_real_value (void *);



extern void gt_ggc_mx_VEC_rtx_gc (void *);



extern void gt_ggc_mx_object_block (void *);



extern void gt_ggc_mx_reg_attrs (void *);



extern void gt_ggc_mx_mem_attrs (void *);



extern void gt_ggc_mx_bitmap_obstack (void *);



extern void gt_ggc_mx_bitmap_element_def (void *);



extern void gt_ggc_mx_machine_function (void *);



extern void gt_ggc_mx_stack_local_entry (void *);



extern void gt_ggc_mx_basic_block_def (void *);



extern void gt_ggc_mx_edge_def (void *);



extern void gt_ggc_mx_gimple_seq_node_d (void *);



extern void gt_ggc_mx_gimple_seq_d (void *);



extern void gt_ggc_mx_section (void *);



extern void gt_ggc_mx_gimple_statement_d (void *);



extern void gt_ggc_mx_rtvec_def (void *);



extern void gt_ggc_mx_rtx_def (void *);



extern void gt_ggc_mx_bitmap_head_def (void *);







extern void gt_ggc_mx_answer (void *);



extern void gt_ggc_mx_cpp_macro (void *);



extern void gt_ggc_mx_cpp_token (void *);



extern void gt_ggc_mx_line_maps (void *);
extern void gt_ggc_m_II17splay_tree_node_s (void *);
extern void gt_ggc_m_SP9tree_node17splay_tree_node_s (void *);
extern void gt_ggc_m_P9tree_nodeP9tree_node17splay_tree_node_s (void *);
extern void gt_ggc_m_IP9tree_node17splay_tree_node_s (void *);
extern void gt_ggc_m_P15interface_tuple4htab (void *);
extern void gt_ggc_m_P16volatilized_type4htab (void *);
extern void gt_ggc_m_P17string_descriptor4htab (void *);
extern void gt_ggc_m_P14type_assertion4htab (void *);
extern void gt_ggc_m_P18treetreehash_entry4htab (void *);
extern void gt_ggc_m_P17module_htab_entry4htab (void *);
extern void gt_ggc_m_P21pending_abstract_type4htab (void *);
extern void gt_ggc_m_P10spec_entry4htab (void *);
extern void gt_ggc_m_P16cxx_int_tree_map4htab (void *);
extern void gt_ggc_m_P17named_label_entry4htab (void *);
extern void gt_ggc_m_P12tree_int_map4htab (void *);
extern void gt_ggc_m_P20lto_symtab_entry_def4htab (void *);
extern void gt_ggc_m_IP9tree_node12splay_tree_s (void *);
extern void gt_ggc_m_P9tree_nodeP9tree_node12splay_tree_s (void *);
extern void gt_ggc_m_P12varpool_node4htab (void *);
extern void gt_ggc_m_P13scev_info_str4htab (void *);
extern void gt_ggc_m_P23constant_descriptor_rtx4htab (void *);
extern void gt_ggc_m_P24constant_descriptor_tree4htab (void *);
extern void gt_ggc_m_P12object_block4htab (void *);
extern void gt_ggc_m_P7section4htab (void *);
extern void gt_ggc_m_P17tree_priority_map4htab (void *);
extern void gt_ggc_m_P8tree_map4htab (void *);
extern void gt_ggc_m_P9type_hash4htab (void *);
extern void gt_ggc_m_P13libfunc_entry4htab (void *);
extern void gt_ggc_m_P23temp_slot_address_entry4htab (void *);
extern void gt_ggc_m_P15throw_stmt_node4htab (void *);
extern void gt_ggc_m_P9reg_attrs4htab (void *);
extern void gt_ggc_m_P9mem_attrs4htab (void *);
extern void gt_ggc_m_P7rtx_def4htab (void *);
extern void gt_ggc_m_SP9tree_node12splay_tree_s (void *);
extern void gt_ggc_m_P10vcall_insn4htab (void *);
extern void gt_ggc_m_P16var_loc_list_def4htab (void *);
extern void gt_ggc_m_P10die_struct4htab (void *);
extern void gt_ggc_m_P15dwarf_file_data4htab (void *);
extern void gt_ggc_m_P20indirect_string_node4htab (void *);
extern void gt_ggc_m_P11cgraph_node4htab (void *);
extern void gt_ggc_m_II12splay_tree_s (void *);
extern void gt_ggc_m_P27cgraph_node_set_element_def4htab (void *);
extern void gt_ggc_m_P11cgraph_edge4htab (void *);
extern void gt_ggc_m_P9loop_exit4htab (void *);
extern void gt_ggc_m_P24types_used_by_vars_entry4htab (void *);
extern void gt_ggc_m_P9tree_node4htab (void *);
# 984 "./gtype-desc.h"
extern void gt_pch_nx_interface_tuple (void *);



extern void gt_pch_nx_volatilized_type (void *);



extern void gt_pch_nx_string_descriptor (void *);



extern void gt_pch_nx_c_inline_static (void *);



extern void gt_pch_nx_VEC_c_goto_bindings_p_gc (void *);



extern void gt_pch_nx_c_goto_bindings (void *);



extern void gt_pch_nx_c_scope (void *);



extern void gt_pch_nx_c_binding (void *);



extern void gt_pch_nx_c_label_vars (void *);



extern void gt_pch_nx_c_parser (void *);



extern void gt_pch_nx_imp_entry (void *);



extern void gt_pch_nx_hashed_attribute (void *);



extern void gt_pch_nx_hashed_entry (void *);



extern void gt_pch_nx_type_assertion (void *);



extern void gt_pch_nx_treetreehash_entry (void *);



extern void gt_pch_nx_CPool (void *);



extern void gt_pch_nx_JCF (void *);



extern void gt_pch_nx_module_htab_entry (void *);



extern void gt_pch_nx_binding_level (void *);



extern void gt_pch_nx_opt_stack (void *);



extern void gt_pch_nx_align_stack (void *);



extern void gt_pch_nx_VEC_tree_gc_vec_gc (void *);



extern void gt_pch_nx_VEC_const_char_p_gc (void *);



extern void gt_pch_nx_pending_abstract_type (void *);



extern void gt_pch_nx_VEC_tree_int_gc (void *);



extern void gt_pch_nx_cp_parser (void *);



extern void gt_pch_nx_cp_parser_context (void *);



extern void gt_pch_nx_cp_lexer (void *);



extern void gt_pch_nx_tree_check (void *);



extern void gt_pch_nx_VEC_deferred_access_gc (void *);



extern void gt_pch_nx_spec_entry (void *);



extern void gt_pch_nx_pending_template (void *);



extern void gt_pch_nx_named_label_use_entry (void *);



extern void gt_pch_nx_VEC_deferred_access_check_gc (void *);



extern void gt_pch_nx_sorted_fields_type (void *);



extern void gt_pch_nx_VEC_tree_pair_s_gc (void *);



extern void gt_pch_nx_named_label_entry (void *);



extern void gt_pch_nx_VEC_qualified_typedef_usage_t_gc (void *);



extern void gt_pch_nx_cp_token_cache (void *);



extern void gt_pch_nx_saved_scope (void *);



extern void gt_pch_nx_cxx_int_tree_map (void *);



extern void gt_pch_nx_VEC_cp_class_binding_gc (void *);



extern void gt_pch_nx_VEC_cxx_saved_binding_gc (void *);



extern void gt_pch_nx_cp_binding_level (void *);



extern void gt_pch_nx_cxx_binding (void *);



extern void gt_pch_nx_binding_entry_s (void *);



extern void gt_pch_nx_binding_table_s (void *);



extern void gt_pch_nx_tinst_level (void *);



extern void gt_pch_nx_VEC_tinfo_s_gc (void *);



extern void gt_pch_nx_gnat_binding_level (void *);



extern void gt_pch_nx_elab_info (void *);



extern void gt_pch_nx_stmt_group (void *);



extern void gt_pch_nx_VEC_parm_attr_gc (void *);



extern void gt_pch_nx_parm_attr_d (void *);



extern void gt_pch_nx_VEC_ipa_edge_args_t_gc (void *);



extern void gt_pch_nx_lto_symtab_entry_def (void *);



extern void gt_pch_nx_ssa_operand_memory_d (void *);



extern void gt_pch_nx_scev_info_str (void *);



extern void gt_pch_nx_VEC_mem_addr_template_gc (void *);



extern void gt_pch_nx_VEC_gimple_gc (void *);



extern void gt_pch_nx_type_hash (void *);



extern void gt_pch_nx_string_pool_data (void *);



extern void gt_pch_nx_libfunc_entry (void *);



extern void gt_pch_nx_temp_slot_address_entry (void *);



extern void gt_pch_nx_throw_stmt_node (void *);



extern void gt_pch_nx_VEC_eh_landing_pad_gc (void *);



extern void gt_pch_nx_VEC_eh_region_gc (void *);



extern void gt_pch_nx_eh_catch_d (void *);



extern void gt_pch_nx_eh_landing_pad_d (void *);



extern void gt_pch_nx_eh_region_d (void *);



extern void gt_pch_nx_vcall_insn (void *);



extern void gt_pch_nx_VEC_vcall_entry_gc (void *);



extern void gt_pch_nx_VEC_dcall_entry_gc (void *);



extern void gt_pch_nx_var_loc_list_def (void *);



extern void gt_pch_nx_var_loc_node (void *);



extern void gt_pch_nx_VEC_die_arg_entry_gc (void *);



extern void gt_pch_nx_limbo_die_struct (void *);



extern void gt_pch_nx_VEC_pubname_entry_gc (void *);



extern void gt_pch_nx_VEC_dw_attr_node_gc (void *);



extern void gt_pch_nx_comdat_type_struct (void *);



extern void gt_pch_nx_dw_ranges_by_label_struct (void *);



extern void gt_pch_nx_dw_ranges_struct (void *);



extern void gt_pch_nx_dw_separate_line_info_struct (void *);



extern void gt_pch_nx_dw_line_info_struct (void *);



extern void gt_pch_nx_VEC_deferred_locations_gc (void *);



extern void gt_pch_nx_dw_loc_list_struct (void *);



extern void gt_pch_nx_dwarf_file_data (void *);



extern void gt_pch_nx_queued_reg_save (void *);



extern void gt_pch_nx_indirect_string_node (void *);



extern void gt_pch_nx_dw_loc_descr_struct (void *);



extern void gt_pch_nx_dw_fde_struct (void *);



extern void gt_pch_nx_dw_cfi_struct (void *);



extern void gt_pch_nx_typeinfo (void *);



extern void gt_pch_nx_VEC_alias_set_entry_gc (void *);



extern void gt_pch_nx_alias_set_entry_d (void *);



extern void gt_pch_nx_constant_descriptor_tree (void *);



extern void gt_pch_nx_cgraph_asm_node (void *);



extern void gt_pch_nx_varpool_node (void *);



extern void gt_pch_nx_VEC_cgraph_node_set_gc (void *);



extern void gt_pch_nx_cgraph_node_set_def (void *);



extern void gt_pch_nx_cgraph_node_set_element_def (void *);



extern void gt_pch_nx_VEC_cgraph_node_ptr_gc (void *);



extern void gt_pch_nx_cgraph_edge (void *);



extern void gt_pch_nx_VEC_ipa_replace_map_p_gc (void *);



extern void gt_pch_nx_ipa_replace_map (void *);



extern void gt_pch_nx_cgraph_node (void *);



extern void gt_pch_nx_VEC_basic_block_gc (void *);



extern void gt_pch_nx_gimple_bb_info (void *);



extern void gt_pch_nx_rtl_bb_info (void *);



extern void gt_pch_nx_VEC_edge_gc (void *);



extern void gt_pch_nx_cselib_val_struct (void *);



extern void gt_pch_nx_elt_loc_list (void *);



extern void gt_pch_nx_VEC_loop_p_gc (void *);



extern void gt_pch_nx_loop (void *);



extern void gt_pch_nx_loop_exit (void *);



extern void gt_pch_nx_nb_iter_bound (void *);



extern void gt_pch_nx_types_used_by_vars_entry (void *);



extern void gt_pch_nx_language_function (void *);



extern void gt_pch_nx_loops (void *);



extern void gt_pch_nx_control_flow_graph (void *);



extern void gt_pch_nx_eh_status (void *);



extern void gt_pch_nx_initial_value_struct (void *);



extern void gt_pch_nx_rtx_constant_pool (void *);



extern void gt_pch_nx_VEC_temp_slot_p_gc (void *);



extern void gt_pch_nx_temp_slot (void *);



extern void gt_pch_nx_gimple_df (void *);



extern void gt_pch_nx_VEC_call_site_record_gc (void *);



extern void gt_pch_nx_call_site_record_d (void *);



extern void gt_pch_nx_sequence_stack (void *);



extern void gt_pch_nx_elt_list (void *);



extern void gt_pch_nx_tree_priority_map (void *);



extern void gt_pch_nx_tree_int_map (void *);



extern void gt_pch_nx_tree_map (void *);



extern void gt_pch_nx_lang_tree_node (void *);



extern void gt_pch_nx_tree_statement_list_node (void *);



extern void gt_pch_nx_var_ann_d (void *);



extern void gt_pch_nx_lang_decl (void *);



extern void gt_pch_nx_lang_type (void *);



extern void gt_pch_nx_die_struct (void *);



extern void gt_pch_nx_varray_head_tag (void *);



extern void gt_pch_nx_ptr_info_def (void *);



extern void gt_pch_nx_VEC_constructor_elt_gc (void *);



extern void gt_pch_nx_VEC_alias_pair_gc (void *);



extern void gt_pch_nx_VEC_tree_gc (void *);



extern void gt_pch_nx_VEC_uchar_gc (void *);



extern void gt_pch_nx_function (void *);



extern void gt_pch_nx_constant_descriptor_rtx (void *);



extern void gt_pch_nx_fixed_value (void *);



extern void gt_pch_nx_real_value (void *);



extern void gt_pch_nx_VEC_rtx_gc (void *);



extern void gt_pch_nx_object_block (void *);



extern void gt_pch_nx_reg_attrs (void *);



extern void gt_pch_nx_mem_attrs (void *);



extern void gt_pch_nx_bitmap_obstack (void *);



extern void gt_pch_nx_bitmap_element_def (void *);



extern void gt_pch_nx_machine_function (void *);



extern void gt_pch_nx_stack_local_entry (void *);



extern void gt_pch_nx_basic_block_def (void *);



extern void gt_pch_nx_edge_def (void *);



extern void gt_pch_nx_gimple_seq_node_d (void *);



extern void gt_pch_nx_gimple_seq_d (void *);



extern void gt_pch_nx_section (void *);



extern void gt_pch_nx_gimple_statement_d (void *);



extern void gt_pch_nx_rtvec_def (void *);



extern void gt_pch_nx_rtx_def (void *);



extern void gt_pch_nx_bitmap_head_def (void *);







extern void gt_pch_nx_answer (void *);



extern void gt_pch_nx_cpp_macro (void *);



extern void gt_pch_nx_cpp_token (void *);



extern void gt_pch_nx_line_maps (void *);
extern void gt_pch_n_II17splay_tree_node_s (void *);
extern void gt_pch_n_SP9tree_node17splay_tree_node_s (void *);
extern void gt_pch_n_P9tree_nodeP9tree_node17splay_tree_node_s (void *);
extern void gt_pch_n_IP9tree_node17splay_tree_node_s (void *);
extern void gt_pch_n_P15interface_tuple4htab (void *);
extern void gt_pch_n_P16volatilized_type4htab (void *);
extern void gt_pch_n_P17string_descriptor4htab (void *);
extern void gt_pch_n_P14type_assertion4htab (void *);
extern void gt_pch_n_P18treetreehash_entry4htab (void *);
extern void gt_pch_n_P17module_htab_entry4htab (void *);
extern void gt_pch_n_P21pending_abstract_type4htab (void *);
extern void gt_pch_n_P10spec_entry4htab (void *);
extern void gt_pch_n_P16cxx_int_tree_map4htab (void *);
extern void gt_pch_n_P17named_label_entry4htab (void *);
extern void gt_pch_n_P12tree_int_map4htab (void *);
extern void gt_pch_n_P20lto_symtab_entry_def4htab (void *);
extern void gt_pch_n_IP9tree_node12splay_tree_s (void *);
extern void gt_pch_n_P9tree_nodeP9tree_node12splay_tree_s (void *);
extern void gt_pch_n_P12varpool_node4htab (void *);
extern void gt_pch_n_P13scev_info_str4htab (void *);
extern void gt_pch_n_P23constant_descriptor_rtx4htab (void *);
extern void gt_pch_n_P24constant_descriptor_tree4htab (void *);
extern void gt_pch_n_P12object_block4htab (void *);
extern void gt_pch_n_P7section4htab (void *);
extern void gt_pch_n_P17tree_priority_map4htab (void *);
extern void gt_pch_n_P8tree_map4htab (void *);
extern void gt_pch_n_P9type_hash4htab (void *);
extern void gt_pch_n_P13libfunc_entry4htab (void *);
extern void gt_pch_n_P23temp_slot_address_entry4htab (void *);
extern void gt_pch_n_P15throw_stmt_node4htab (void *);
extern void gt_pch_n_P9reg_attrs4htab (void *);
extern void gt_pch_n_P9mem_attrs4htab (void *);
extern void gt_pch_n_P7rtx_def4htab (void *);
extern void gt_pch_n_SP9tree_node12splay_tree_s (void *);
extern void gt_pch_n_P10vcall_insn4htab (void *);
extern void gt_pch_n_P16var_loc_list_def4htab (void *);
extern void gt_pch_n_P10die_struct4htab (void *);
extern void gt_pch_n_P15dwarf_file_data4htab (void *);
extern void gt_pch_n_P20indirect_string_node4htab (void *);
extern void gt_pch_n_P11cgraph_node4htab (void *);
extern void gt_pch_n_II12splay_tree_s (void *);
extern void gt_pch_n_P27cgraph_node_set_element_def4htab (void *);
extern void gt_pch_n_P11cgraph_edge4htab (void *);
extern void gt_pch_n_P9loop_exit4htab (void *);
extern void gt_pch_n_P24types_used_by_vars_entry4htab (void *);
extern void gt_pch_n_P9tree_node4htab (void *);




extern void gt_pch_p_15interface_tuple
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16volatilized_type
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17string_descriptor
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15c_inline_static
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24VEC_c_goto_bindings_p_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15c_goto_bindings
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_7c_scope
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9c_binding
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12c_label_vars
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8c_parser
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9imp_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16hashed_attribute
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12hashed_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14type_assertion
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18treetreehash_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_5CPool
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_3JCF
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17module_htab_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13binding_level
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9opt_stack
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11align_stack
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18VEC_tree_gc_vec_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_19VEC_const_char_p_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_21pending_abstract_type
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15VEC_tree_int_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9cp_parser
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17cp_parser_context
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8cp_lexer
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10tree_check
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_22VEC_deferred_access_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10spec_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16pending_template
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_21named_label_use_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_28VEC_deferred_access_check_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18sorted_fields_type
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18VEC_tree_pair_s_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17named_label_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_32VEC_qualified_typedef_usage_t_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14cp_token_cache
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11saved_scope
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16cxx_int_tree_map
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_23VEC_cp_class_binding_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24VEC_cxx_saved_binding_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16cp_binding_level
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11cxx_binding
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15binding_entry_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15binding_table_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11tinst_level
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14VEC_tinfo_s_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18gnat_binding_level
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9elab_info
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10stmt_group
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16VEC_parm_attr_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11parm_attr_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_22VEC_ipa_edge_args_t_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_20lto_symtab_entry_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_20ssa_operand_memory_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13scev_info_str
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24VEC_mem_addr_template_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13VEC_gimple_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9type_hash
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16string_pool_data
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13libfunc_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_23temp_slot_address_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15throw_stmt_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_21VEC_eh_landing_pad_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16VEC_eh_region_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10eh_catch_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16eh_landing_pad_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11eh_region_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10vcall_insn
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18VEC_vcall_entry_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18VEC_dcall_entry_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16var_loc_list_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12var_loc_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_20VEC_die_arg_entry_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16limbo_die_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_20VEC_pubname_entry_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_19VEC_dw_attr_node_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18comdat_type_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_25dw_ranges_by_label_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16dw_ranges_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_28dw_separate_line_info_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_19dw_line_info_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_25VEC_deferred_locations_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18dw_loc_list_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15dwarf_file_data
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15queued_reg_save
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_20indirect_string_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_19dw_loc_descr_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13dw_fde_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13dw_cfi_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8typeinfo
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_22VEC_alias_set_entry_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17alias_set_entry_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24constant_descriptor_tree
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15cgraph_asm_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12varpool_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_22VEC_cgraph_node_set_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_19cgraph_node_set_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_27cgraph_node_set_element_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_22VEC_cgraph_node_ptr_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11cgraph_edge
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24VEC_ipa_replace_map_p_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15ipa_replace_map
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11cgraph_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18VEC_basic_block_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14gimple_bb_info
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11rtl_bb_info
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11VEC_edge_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17cselib_val_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12elt_loc_list
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13VEC_loop_p_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_4loop
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9loop_exit
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_13nb_iter_bound
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24types_used_by_vars_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17language_function
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_5loops
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18control_flow_graph
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9eh_status
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_20initial_value_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17rtx_constant_pool
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18VEC_temp_slot_p_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9temp_slot
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9gimple_df
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_23VEC_call_site_record_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18call_site_record_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14sequence_stack
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8elt_list
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17tree_priority_map
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12tree_int_map
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8tree_map
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14lang_tree_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_24tree_statement_list_node
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9var_ann_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9lang_decl
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9lang_type
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10die_struct
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15varray_head_tag
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12ptr_info_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_22VEC_constructor_elt_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17VEC_alias_pair_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11VEC_tree_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12VEC_uchar_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8function
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_23constant_descriptor_rtx
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_11fixed_value
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10real_value
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_10VEC_rtx_gc
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12object_block
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9reg_attrs
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9mem_attrs
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_14bitmap_obstack
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18bitmap_element_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_16machine_function
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17stack_local_entry
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15basic_block_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_8edge_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_17gimple_seq_node_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_12gimple_seq_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_7section
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_18gimple_statement_d
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9rtvec_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_7rtx_def
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_15bitmap_head_def
    (void *, void *, gt_pointer_operator, void *);

extern void gt_pch_p_6answer
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9cpp_macro
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9cpp_token
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_9line_maps
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_II17splay_tree_node_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_SP9tree_node17splay_tree_node_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9tree_nodeP9tree_node17splay_tree_node_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_IP9tree_node17splay_tree_node_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P15interface_tuple4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P16volatilized_type4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P17string_descriptor4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P14type_assertion4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P18treetreehash_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P17module_htab_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P21pending_abstract_type4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P10spec_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P16cxx_int_tree_map4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P17named_label_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P12tree_int_map4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P20lto_symtab_entry_def4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_IP9tree_node12splay_tree_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9tree_nodeP9tree_node12splay_tree_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P12varpool_node4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P13scev_info_str4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P23constant_descriptor_rtx4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P24constant_descriptor_tree4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P12object_block4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P7section4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P17tree_priority_map4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P8tree_map4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9type_hash4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P13libfunc_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P23temp_slot_address_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P15throw_stmt_node4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9reg_attrs4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9mem_attrs4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P7rtx_def4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_SP9tree_node12splay_tree_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P10vcall_insn4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P16var_loc_list_def4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P10die_struct4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P15dwarf_file_data4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P20indirect_string_node4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P11cgraph_node4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_II12splay_tree_s
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P27cgraph_node_set_element_def4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P11cgraph_edge4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9loop_exit4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P24types_used_by_vars_entry4htab
    (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_p_P9tree_node4htab
    (void *, void *, gt_pointer_operator, void *);
# 41 "../../gcc/ggc.h" 2




typedef void (*gt_note_pointers) (void *, void *, gt_pointer_operator,
      void *);






typedef void (*gt_handle_reorder) (void *, void *, gt_pointer_operator,
       void *);


extern int gt_pch_note_object (void *, void *, gt_note_pointers,
          enum gt_types_enum);



extern void gt_pch_note_reorder (void *, void *, gt_handle_reorder);


typedef void (*gt_pointer_walker) (void *);



struct ggc_root_tab {
  void *base;
  size_t nelt;
  size_t stride;
  gt_pointer_walker cb;
  gt_pointer_walker pchw;
};


extern const struct ggc_root_tab * const gt_ggc_rtab[];
extern const struct ggc_root_tab * const gt_ggc_deletable_rtab[];
extern const struct ggc_root_tab * const gt_pch_cache_rtab[];
extern const struct ggc_root_tab * const gt_pch_scalar_rtab[];


struct htab;
struct ggc_cache_tab {
  struct htab * *base;
  size_t nelt;
  size_t stride;
  gt_pointer_walker cb;
  gt_pointer_walker pchw;
  int (*marked_p) (const void *);
};


extern const struct ggc_cache_tab * const gt_ggc_cache_rtab[];
# 114 "../../gcc/ggc.h"
extern int ggc_set_mark (const void *);




extern int ggc_marked_p (const void *);


extern void ggc_mark_stringpool (void);


extern void ggc_purge_stringpool (void);



extern void ggc_mark_roots (void);



extern void gt_pch_save_stringpool (void);
extern void gt_pch_fixup_stringpool (void);
extern void gt_pch_restore_stringpool (void);



extern void gt_pch_p_S (void *, void *, gt_pointer_operator, void *);
extern void gt_pch_n_S (const void *);
extern void gt_ggc_m_S (const void *);


extern void init_stringpool (void);





struct alloc_zone;


extern void init_ggc (void);


extern struct alloc_zone *new_ggc_zone (const char *);


extern void destroy_ggc_zone (struct alloc_zone *);

struct ggc_pch_data;


extern struct ggc_pch_data *init_ggc_pch (void);





extern void ggc_pch_count_object (struct ggc_pch_data *, void *, size_t, unsigned char,
      enum gt_types_enum);



extern size_t ggc_pch_total_size (struct ggc_pch_data *);



extern void ggc_pch_this_base (struct ggc_pch_data *, void *);




extern char *ggc_pch_alloc_object (struct ggc_pch_data *, void *, size_t, unsigned char,
       enum gt_types_enum);


extern void ggc_pch_prepare_write (struct ggc_pch_data *, FILE *);


extern void ggc_pch_write_object (struct ggc_pch_data *, FILE *, void *,
      void *, size_t, unsigned char);


extern void ggc_pch_finish (struct ggc_pch_data *, FILE *);



extern void ggc_pch_read (FILE *, void *);





extern unsigned char ggc_force_collect;





extern unsigned char ggc_protect_identifiers;


extern void *ggc_alloc_stat (size_t );


extern void *ggc_alloc_typed_stat (enum gt_types_enum, size_t );


extern void *ggc_alloc_cleared_stat (size_t );


extern void *ggc_realloc_stat (void *, size_t );


extern void *ggc_calloc (size_t, size_t);

extern void ggc_free (void *);

extern void ggc_record_overhead (size_t, size_t, void * );
extern void ggc_free_overhead (void *);
extern void ggc_prune_overhead_list (void);

extern void dump_ggc_loc_statistics (unsigned char);
# 259 "../../gcc/ggc.h"
extern void *ggc_splay_alloc (int, void *);
extern void ggc_splay_dont_free (void *, void *);




extern const char *ggc_alloc_string (const char *contents, int length);






extern void ggc_collect (void);



extern void ggc_register_root_tab (const struct ggc_root_tab *);



extern void ggc_register_cache_tab (const struct ggc_cache_tab *);


extern size_t ggc_get_size (const void *);


extern void gt_pch_save (FILE *f);


extern void gt_pch_restore (FILE *f);





typedef struct ggc_statistics
{

  int unused;
} ggc_statistics;



extern void ggc_print_common_statistics (FILE *, ggc_statistics *);


extern void ggc_print_statistics (void);
extern void stringpool_statistics (void);


extern int ggc_min_expand_heuristic (void);
extern int ggc_min_heapsize_heuristic (void);
extern void init_ggc_heuristics (void);
# 35 "../../gcc/rtl.c" 2

# 1 "../../gcc/errors.h" 1
# 32 "../../gcc/errors.h"
extern void warning (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2))) __attribute__ ((__nonnull__ (1))) __attribute__ ((__cold__));
extern void error (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2))) __attribute__ ((__nonnull__ (1))) __attribute__ ((__cold__));
extern void fatal (const char *, ...) __attribute__ ((__noreturn__)) __attribute__ ((__format__ (__printf__, 1, 2))) __attribute__ ((__nonnull__ (1))) __attribute__ ((__cold__));
extern void internal_error (const char *, ...) __attribute__ ((__noreturn__)) __attribute__ ((__format__ (__printf__, 1, 2))) __attribute__ ((__nonnull__ (1))) __attribute__ ((__cold__));
extern const char *trim_filename (const char *);

extern int have_error;
extern const char *progname;
# 37 "../../gcc/rtl.c" 2
# 47 "../../gcc/rtl.c"
const unsigned char rtx_length[((int) LAST_AND_UNUSED_RTX_CODE)] = {
# 1 "../../gcc/rtl.def" 1
# 82 "../../gcc/rtl.def"
sizeof "*" - 1 ,






sizeof "0" - 1 ,



sizeof "0" - 1 ,






sizeof "ee" - 1 ,



sizeof "ue" - 1 ,





sizeof "E" - 1 ,


sizeof "e" - 1 ,
# 126 "../../gcc/rtl.def"
sizeof "iuuBieie" - 1 ,


sizeof "iuuBieie" - 1 ,



sizeof "iuuBieie0" - 1 ,






sizeof "iuuBieiee" - 1 ,


sizeof "iuu00000" - 1 ,







sizeof "iuuB00is" - 1 ,






sizeof "iuuB0ni" - 1 ,
# 171 "../../gcc/rtl.def"
sizeof "ee" - 1 ,


sizeof "E" - 1 ,







sizeof "si" - 1 ,
# 196 "../../gcc/rtl.def"
sizeof "ssiEEEi" - 1 ,
# 214 "../../gcc/rtl.def"
sizeof "Ei" - 1 ,


sizeof "Ei" - 1 ,



sizeof "E" - 1 ,
# 246 "../../gcc/rtl.def"
sizeof "eEee0" - 1 ,
# 257 "../../gcc/rtl.def"
sizeof "eee" - 1 ,
# 269 "../../gcc/rtl.def"
sizeof "ee" - 1 ,
# 278 "../../gcc/rtl.def"
sizeof "e" - 1 ,
# 287 "../../gcc/rtl.def"
sizeof "e" - 1 ,





sizeof "ee" - 1 ,



sizeof "" - 1 ,



sizeof "" - 1 ,





sizeof "ee" - 1 ,






sizeof "w" - 1 ,


sizeof "www" - 1 ,




sizeof "wwwwww" - 1 ,


sizeof "E" - 1 ,




sizeof "s" - 1 ,





sizeof "e" - 1 ,



sizeof "" - 1 ,
# 350 "../../gcc/rtl.def"
sizeof "i00" - 1 ,






sizeof "0" - 1 ,



sizeof "ei" - 1 ,
# 374 "../../gcc/rtl.def"
sizeof "e" - 1 ,





sizeof "ee" - 1 ,





sizeof "E" - 1 ,




sizeof "e0" - 1 ,



sizeof "u" - 1 ,






sizeof "s00" - 1 ,






sizeof "" - 1 ,
# 421 "../../gcc/rtl.def"
sizeof "eee" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "e" - 1 ,

sizeof "ee" - 1 ,


sizeof "ee" - 1 ,

sizeof "ee" - 1 ,


sizeof "ee" - 1 ,

sizeof "ee" - 1 ,

sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,
sizeof "ee" - 1 ,


sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "e" - 1 ,




sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
# 478 "../../gcc/rtl.def"
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
# 490 "../../gcc/rtl.def"
sizeof "e" - 1 ,
sizeof "e" - 1 ,
sizeof "e" - 1 ,
sizeof "e" - 1 ,
# 507 "../../gcc/rtl.def"
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,



sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,


sizeof "ee" - 1 ,
sizeof "ee" - 1 ,


sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,
sizeof "ee" - 1 ,


sizeof "ee" - 1 ,




sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,
sizeof "e" - 1 ,


sizeof "e" - 1 ,







sizeof "e" - 1 ,


sizeof "e" - 1 ,




sizeof "e" - 1 ,
# 579 "../../gcc/rtl.def"
sizeof "e" - 1 ,






sizeof "e" - 1 ,







sizeof "e" - 1 ,





sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,




sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,
# 638 "../../gcc/rtl.def"
sizeof "eee" - 1 ,



sizeof "eee" - 1 ,




sizeof "e" - 1 ,



sizeof "ee" - 1 ,






sizeof "eee" - 1 ,





sizeof "ee" - 1 ,




sizeof "ee" - 1 ,





sizeof "e" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "e" - 1 ,

sizeof "e" - 1 ,


sizeof "e" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "ee" - 1 ,


sizeof "e" - 1 ,


sizeof "e" - 1 ,




sizeof "tei" - 1 ,






sizeof "s" - 1 ,
# 754 "../../gcc/rtl.def"
sizeof "iss" - 1 ,





sizeof "is" - 1 ,






sizeof "isE" - 1 ,







sizeof "isE" - 1 ,



sizeof "i" - 1 ,



sizeof "iE" - 1 ,



sizeof "iE" - 1 ,
# 797 "../../gcc/rtl.def"
sizeof "ss" - 1 ,




sizeof "s" - 1 ,
# 822 "../../gcc/rtl.def"
sizeof "sEsTV" - 1 ,
# 831 "../../gcc/rtl.def"
sizeof "EsTV" - 1 ,
# 842 "../../gcc/rtl.def"
sizeof "EsES" - 1 ,
# 870 "../../gcc/rtl.def"
sizeof "sEsTsESV" - 1 ,



sizeof "EsES" - 1 ,
# 887 "../../gcc/rtl.def"
sizeof "sEss" - 1 ,
# 903 "../../gcc/rtl.def"
sizeof "eE" - 1 ,


sizeof "V" - 1 ,
# 919 "../../gcc/rtl.def"
sizeof "Ess" - 1 ,
# 935 "../../gcc/rtl.def"
sizeof "ses" - 1 ,
sizeof "ses" - 1 ,
# 949 "../../gcc/rtl.def"
sizeof "sss" - 1 ,
# 988 "../../gcc/rtl.def"
sizeof "sse" - 1 ,
sizeof "sse" - 1 ,
sizeof "sse" - 1 ,
# 1004 "../../gcc/rtl.def"
sizeof "sS" - 1 ,




sizeof "sS" - 1 ,
# 1019 "../../gcc/rtl.def"
sizeof "ss" - 1 ,
# 1041 "../../gcc/rtl.def"
sizeof "ss" - 1 ,
# 1062 "../../gcc/rtl.def"
sizeof "ss" - 1 ,
# 1085 "../../gcc/rtl.def"
sizeof "ss" - 1 ,




sizeof "ss" - 1 ,
# 1105 "../../gcc/rtl.def"
sizeof "issS" - 1 ,
# 1114 "../../gcc/rtl.def"
sizeof "s" - 1 ,
# 1137 "../../gcc/rtl.def"
sizeof "s" - 1 ,
# 1146 "../../gcc/rtl.def"
sizeof "ss" - 1 ,
# 1194 "../../gcc/rtl.def"
sizeof "sies" - 1 ,







sizeof "sse" - 1 ,


sizeof "s" - 1 ,







sizeof "ss" - 1 ,
# 1228 "../../gcc/rtl.def"
sizeof "sE" - 1 ,




sizeof "ss" - 1 ,



sizeof "ii" - 1 ,
# 1247 "../../gcc/rtl.def"
sizeof "s" - 1 ,






sizeof "Ee" - 1 ,
# 49 "../../gcc/rtl.c" 2
};







const char * const rtx_name[((int) LAST_AND_UNUSED_RTX_CODE)] = {
# 1 "../../gcc/rtl.def" 1
# 82 "../../gcc/rtl.def"
"UnKnown" ,






"value" ,



"debug_expr" ,






"expr_list" ,



"insn_list" ,





"sequence" ,


"address" ,
# 126 "../../gcc/rtl.def"
"debug_insn" ,


"insn" ,



"jump_insn" ,






"call_insn" ,


"barrier" ,







"code_label" ,






"note" ,
# 171 "../../gcc/rtl.def"
"cond_exec" ,


"parallel" ,







"asm_input" ,
# 196 "../../gcc/rtl.def"
"asm_operands" ,
# 214 "../../gcc/rtl.def"
"unspec" ,


"unspec_volatile" ,



"addr_vec" ,
# 246 "../../gcc/rtl.def"
"addr_diff_vec" ,
# 257 "../../gcc/rtl.def"
"prefetch" ,
# 269 "../../gcc/rtl.def"
"set" ,
# 278 "../../gcc/rtl.def"
"use" ,
# 287 "../../gcc/rtl.def"
"clobber" ,





"call" ,



"return" ,



"eh_return" ,





"trap_if" ,






"const_int" ,


"const_fixed" ,




"const_double" ,


"const_vector" ,




"const_string" ,





"const" ,



"pc" ,
# 350 "../../gcc/rtl.def"
"reg" ,






"scratch" ,



"subreg" ,
# 374 "../../gcc/rtl.def"
"strict_low_part" ,





"concat" ,





"concatn" ,




"mem" ,



"label_ref" ,






"symbol_ref" ,






"cc0" ,
# 421 "../../gcc/rtl.def"
"if_then_else" ,


"compare" ,


"plus" ,


"minus" ,


"neg" ,

"mult" ,


"ss_mult" ,

"us_mult" ,


"div" ,

"ss_div" ,

"us_div" ,


"mod" ,


"udiv" ,
"umod" ,


"and" ,
"ior" ,
"xor" ,
"not" ,




"ashift" ,
"rotate" ,
"ashiftrt" ,
"lshiftrt" ,
"rotatert" ,
# 478 "../../gcc/rtl.def"
"smin" ,
"smax" ,
"umin" ,
"umax" ,
# 490 "../../gcc/rtl.def"
"pre_dec" ,
"pre_inc" ,
"post_dec" ,
"post_inc" ,
# 507 "../../gcc/rtl.def"
"pre_modify" ,
"post_modify" ,



"ne" ,
"eq" ,
"ge" ,
"gt" ,
"le" ,
"lt" ,
"geu" ,
"gtu" ,
"leu" ,
"ltu" ,


"unordered" ,
"ordered" ,


"uneq" ,
"unge" ,
"ungt" ,
"unle" ,
"unlt" ,


"ltgt" ,




"sign_extend" ,


"zero_extend" ,


"truncate" ,


"float_extend" ,
"float_truncate" ,


"float" ,







"fix" ,


"unsigned_float" ,




"unsigned_fix" ,
# 579 "../../gcc/rtl.def"
"fract_convert" ,






"unsigned_fract_convert" ,







"sat_fract" ,





"unsigned_sat_fract" ,


"abs" ,


"sqrt" ,


"bswap" ,




"ffs" ,


"clz" ,


"ctz" ,


"popcount" ,


"parity" ,
# 638 "../../gcc/rtl.def"
"sign_extract" ,



"zero_extract" ,




"high" ,



"lo_sum" ,






"vec_merge" ,





"vec_select" ,




"vec_concat" ,





"vec_duplicate" ,


"ss_plus" ,


"us_plus" ,


"ss_minus" ,


"ss_neg" ,

"us_neg" ,


"ss_abs" ,


"ss_ashift" ,


"us_ashift" ,


"us_minus" ,


"ss_truncate" ,


"us_truncate" ,




"var_location" ,






"include" ,
# 754 "../../gcc/rtl.def"
"match_operand" ,





"match_scratch" ,






"match_operator" ,







"match_parallel" ,



"match_dup" ,



"match_op_dup" ,



"match_par_dup" ,
# 797 "../../gcc/rtl.def"
"match_code" ,




"match_test" ,
# 822 "../../gcc/rtl.def"
"define_insn" ,
# 831 "../../gcc/rtl.def"
"define_peephole" ,
# 842 "../../gcc/rtl.def"
"define_split" ,
# 870 "../../gcc/rtl.def"
"define_insn_and_split" ,



"define_peephole2" ,
# 887 "../../gcc/rtl.def"
"define_expand" ,
# 903 "../../gcc/rtl.def"
"define_delay" ,


"define_asm_attributes" ,
# 919 "../../gcc/rtl.def"
"define_cond_exec" ,
# 935 "../../gcc/rtl.def"
"define_predicate" ,
"define_special_predicate" ,
# 949 "../../gcc/rtl.def"
"define_register_constraint" ,
# 988 "../../gcc/rtl.def"
"define_constraint" ,
"define_memory_constraint" ,
"define_address_constraint" ,
# 1004 "../../gcc/rtl.def"
"define_cpu_unit" ,




"define_query_cpu_unit" ,
# 1019 "../../gcc/rtl.def"
"exclusion_set" ,
# 1041 "../../gcc/rtl.def"
"presence_set" ,
# 1062 "../../gcc/rtl.def"
"final_presence_set" ,
# 1085 "../../gcc/rtl.def"
"absence_set" ,




"final_absence_set" ,
# 1105 "../../gcc/rtl.def"
"define_bypass" ,
# 1114 "../../gcc/rtl.def"
"define_automaton" ,
# 1137 "../../gcc/rtl.def"
"automata_option" ,
# 1146 "../../gcc/rtl.def"
"define_reservation" ,
# 1194 "../../gcc/rtl.def"
"define_insn_reservation" ,







"define_attr" ,


"attr" ,







"set_attr" ,
# 1228 "../../gcc/rtl.def"
"set_attr_alternative" ,




"eq_attr" ,



"eq_attr_alt" ,
# 1247 "../../gcc/rtl.def"
"attr_flag" ,






"cond" ,
# 59 "../../gcc/rtl.c" 2
};







const char * const rtx_format[((int) LAST_AND_UNUSED_RTX_CODE)] = {
# 96 "../../gcc/rtl.c"
# 1 "../../gcc/rtl.def" 1
# 82 "../../gcc/rtl.def"
"*" ,






"0" ,



"0" ,






"ee" ,



"ue" ,





"E" ,


"e" ,
# 126 "../../gcc/rtl.def"
"iuuBieie" ,


"iuuBieie" ,



"iuuBieie0" ,






"iuuBieiee" ,


"iuu00000" ,







"iuuB00is" ,






"iuuB0ni" ,
# 171 "../../gcc/rtl.def"
"ee" ,


"E" ,







"si" ,
# 196 "../../gcc/rtl.def"
"ssiEEEi" ,
# 214 "../../gcc/rtl.def"
"Ei" ,


"Ei" ,



"E" ,
# 246 "../../gcc/rtl.def"
"eEee0" ,
# 257 "../../gcc/rtl.def"
"eee" ,
# 269 "../../gcc/rtl.def"
"ee" ,
# 278 "../../gcc/rtl.def"
"e" ,
# 287 "../../gcc/rtl.def"
"e" ,





"ee" ,



"" ,



"" ,





"ee" ,






"w" ,


"www" ,




"wwwwww" ,


"E" ,




"s" ,





"e" ,



"" ,
# 350 "../../gcc/rtl.def"
"i00" ,






"0" ,



"ei" ,
# 374 "../../gcc/rtl.def"
"e" ,





"ee" ,





"E" ,




"e0" ,



"u" ,






"s00" ,






"" ,
# 421 "../../gcc/rtl.def"
"eee" ,


"ee" ,


"ee" ,


"ee" ,


"e" ,

"ee" ,


"ee" ,

"ee" ,


"ee" ,

"ee" ,

"ee" ,


"ee" ,


"ee" ,
"ee" ,


"ee" ,
"ee" ,
"ee" ,
"e" ,




"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,
# 478 "../../gcc/rtl.def"
"ee" ,
"ee" ,
"ee" ,
"ee" ,
# 490 "../../gcc/rtl.def"
"e" ,
"e" ,
"e" ,
"e" ,
# 507 "../../gcc/rtl.def"
"ee" ,
"ee" ,



"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,


"ee" ,
"ee" ,


"ee" ,
"ee" ,
"ee" ,
"ee" ,
"ee" ,


"ee" ,




"e" ,


"e" ,


"e" ,


"e" ,
"e" ,


"e" ,







"e" ,


"e" ,




"e" ,
# 579 "../../gcc/rtl.def"
"e" ,






"e" ,







"e" ,





"e" ,


"e" ,


"e" ,


"e" ,




"e" ,


"e" ,


"e" ,


"e" ,


"e" ,
# 638 "../../gcc/rtl.def"
"eee" ,



"eee" ,




"e" ,



"ee" ,






"eee" ,





"ee" ,




"ee" ,





"e" ,


"ee" ,


"ee" ,


"ee" ,


"e" ,

"e" ,


"e" ,


"ee" ,


"ee" ,


"ee" ,


"e" ,


"e" ,




"tei" ,






"s" ,
# 754 "../../gcc/rtl.def"
"iss" ,





"is" ,






"isE" ,







"isE" ,



"i" ,



"iE" ,



"iE" ,
# 797 "../../gcc/rtl.def"
"ss" ,




"s" ,
# 822 "../../gcc/rtl.def"
"sEsTV" ,
# 831 "../../gcc/rtl.def"
"EsTV" ,
# 842 "../../gcc/rtl.def"
"EsES" ,
# 870 "../../gcc/rtl.def"
"sEsTsESV" ,



"EsES" ,
# 887 "../../gcc/rtl.def"
"sEss" ,
# 903 "../../gcc/rtl.def"
"eE" ,


"V" ,
# 919 "../../gcc/rtl.def"
"Ess" ,
# 935 "../../gcc/rtl.def"
"ses" ,
"ses" ,
# 949 "../../gcc/rtl.def"
"sss" ,
# 988 "../../gcc/rtl.def"
"sse" ,
"sse" ,
"sse" ,
# 1004 "../../gcc/rtl.def"
"sS" ,




"sS" ,
# 1019 "../../gcc/rtl.def"
"ss" ,
# 1041 "../../gcc/rtl.def"
"ss" ,
# 1062 "../../gcc/rtl.def"
"ss" ,
# 1085 "../../gcc/rtl.def"
"ss" ,




"ss" ,
# 1105 "../../gcc/rtl.def"
"issS" ,
# 1114 "../../gcc/rtl.def"
"s" ,
# 1137 "../../gcc/rtl.def"
"s" ,
# 1146 "../../gcc/rtl.def"
"ss" ,
# 1194 "../../gcc/rtl.def"
"sies" ,







"sse" ,


"s" ,







"ss" ,
# 1228 "../../gcc/rtl.def"
"sE" ,




"ss" ,



"ii" ,
# 1247 "../../gcc/rtl.def"
"s" ,






"Ee" ,
# 97 "../../gcc/rtl.c" 2

};




const enum rtx_class rtx_class[((int) LAST_AND_UNUSED_RTX_CODE)] = {

# 1 "../../gcc/rtl.def" 1
# 82 "../../gcc/rtl.def"
RTX_EXTRA,






RTX_OBJ,



RTX_OBJ,






RTX_EXTRA,



RTX_EXTRA,





RTX_EXTRA,


RTX_MATCH,
# 126 "../../gcc/rtl.def"
RTX_INSN,


RTX_INSN,



RTX_INSN,






RTX_INSN,


RTX_EXTRA,







RTX_EXTRA,






RTX_EXTRA,
# 171 "../../gcc/rtl.def"
RTX_EXTRA,


RTX_EXTRA,







RTX_EXTRA,
# 196 "../../gcc/rtl.def"
RTX_EXTRA,
# 214 "../../gcc/rtl.def"
RTX_EXTRA,


RTX_EXTRA,



RTX_EXTRA,
# 246 "../../gcc/rtl.def"
RTX_EXTRA,
# 257 "../../gcc/rtl.def"
RTX_EXTRA,
# 269 "../../gcc/rtl.def"
RTX_EXTRA,
# 278 "../../gcc/rtl.def"
RTX_EXTRA,
# 287 "../../gcc/rtl.def"
RTX_EXTRA,





RTX_EXTRA,



RTX_EXTRA,



RTX_EXTRA,





RTX_EXTRA,






RTX_CONST_OBJ,


RTX_CONST_OBJ,




RTX_CONST_OBJ,


RTX_CONST_OBJ,




RTX_OBJ,





RTX_CONST_OBJ,



RTX_OBJ,
# 350 "../../gcc/rtl.def"
RTX_OBJ,






RTX_OBJ,



RTX_EXTRA,
# 374 "../../gcc/rtl.def"
RTX_EXTRA,





RTX_OBJ,





RTX_OBJ,




RTX_OBJ,



RTX_CONST_OBJ,






RTX_CONST_OBJ,






RTX_OBJ,
# 421 "../../gcc/rtl.def"
RTX_TERNARY,


RTX_BIN_ARITH,


RTX_COMM_ARITH,


RTX_BIN_ARITH,


RTX_UNARY,

RTX_COMM_ARITH,


RTX_COMM_ARITH,

RTX_COMM_ARITH,


RTX_BIN_ARITH,

RTX_BIN_ARITH,

RTX_BIN_ARITH,


RTX_BIN_ARITH,


RTX_BIN_ARITH,
RTX_BIN_ARITH,


RTX_COMM_ARITH,
RTX_COMM_ARITH,
RTX_COMM_ARITH,
RTX_UNARY,




RTX_BIN_ARITH,
RTX_BIN_ARITH,
RTX_BIN_ARITH,
RTX_BIN_ARITH,
RTX_BIN_ARITH,
# 478 "../../gcc/rtl.def"
RTX_COMM_ARITH,
RTX_COMM_ARITH,
RTX_COMM_ARITH,
RTX_COMM_ARITH,
# 490 "../../gcc/rtl.def"
RTX_AUTOINC,
RTX_AUTOINC,
RTX_AUTOINC,
RTX_AUTOINC,
# 507 "../../gcc/rtl.def"
RTX_AUTOINC,
RTX_AUTOINC,



RTX_COMM_COMPARE,
RTX_COMM_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,


RTX_COMM_COMPARE,
RTX_COMM_COMPARE,


RTX_COMM_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,
RTX_COMPARE,


RTX_COMM_COMPARE,




RTX_UNARY,


RTX_UNARY,


RTX_UNARY,


RTX_UNARY,
RTX_UNARY,


RTX_UNARY,







RTX_UNARY,


RTX_UNARY,




RTX_UNARY,
# 579 "../../gcc/rtl.def"
RTX_UNARY,






RTX_UNARY,







RTX_UNARY,





RTX_UNARY,


RTX_UNARY,


RTX_UNARY,


RTX_UNARY,




RTX_UNARY,


RTX_UNARY,


RTX_UNARY,


RTX_UNARY,


RTX_UNARY,
# 638 "../../gcc/rtl.def"
RTX_BITFIELD_OPS,



RTX_BITFIELD_OPS,




RTX_CONST_OBJ,



RTX_OBJ,






RTX_TERNARY,





RTX_BIN_ARITH,




RTX_BIN_ARITH,





RTX_UNARY,


RTX_COMM_ARITH,


RTX_COMM_ARITH,


RTX_BIN_ARITH,


RTX_UNARY,

RTX_UNARY,


RTX_UNARY,


RTX_BIN_ARITH,


RTX_BIN_ARITH,


RTX_BIN_ARITH,


RTX_UNARY,


RTX_UNARY,




RTX_EXTRA,






RTX_EXTRA,
# 754 "../../gcc/rtl.def"
RTX_MATCH,





RTX_MATCH,






RTX_MATCH,







RTX_MATCH,



RTX_MATCH,



RTX_MATCH,



RTX_MATCH,
# 797 "../../gcc/rtl.def"
RTX_MATCH,




RTX_MATCH,
# 822 "../../gcc/rtl.def"
RTX_EXTRA,
# 831 "../../gcc/rtl.def"
RTX_EXTRA,
# 842 "../../gcc/rtl.def"
RTX_EXTRA,
# 870 "../../gcc/rtl.def"
RTX_EXTRA,



RTX_EXTRA,
# 887 "../../gcc/rtl.def"
RTX_EXTRA,
# 903 "../../gcc/rtl.def"
RTX_EXTRA,


RTX_EXTRA,
# 919 "../../gcc/rtl.def"
RTX_EXTRA,
# 935 "../../gcc/rtl.def"
RTX_EXTRA,
RTX_EXTRA,
# 949 "../../gcc/rtl.def"
RTX_EXTRA,
# 988 "../../gcc/rtl.def"
RTX_EXTRA,
RTX_EXTRA,
RTX_EXTRA,
# 1004 "../../gcc/rtl.def"
RTX_EXTRA,




RTX_EXTRA,
# 1019 "../../gcc/rtl.def"
RTX_EXTRA,
# 1041 "../../gcc/rtl.def"
RTX_EXTRA,
# 1062 "../../gcc/rtl.def"
RTX_EXTRA,
# 1085 "../../gcc/rtl.def"
RTX_EXTRA,




RTX_EXTRA,
# 1105 "../../gcc/rtl.def"
RTX_EXTRA,
# 1114 "../../gcc/rtl.def"
RTX_EXTRA,
# 1137 "../../gcc/rtl.def"
RTX_EXTRA,
# 1146 "../../gcc/rtl.def"
RTX_EXTRA,
# 1194 "../../gcc/rtl.def"
RTX_EXTRA,







RTX_EXTRA,


RTX_EXTRA,







RTX_EXTRA,
# 1228 "../../gcc/rtl.def"
RTX_EXTRA,




RTX_EXTRA,



RTX_EXTRA,
# 1247 "../../gcc/rtl.def"
RTX_EXTRA,






RTX_EXTRA,
# 106 "../../gcc/rtl.c" 2

};



const unsigned char rtx_code_size[((int) LAST_AND_UNUSED_RTX_CODE)] = {





# 1 "../../gcc/rtl.def" 1
# 82 "../../gcc/rtl.def"
((UNKNOWN) == CONST_INT || (UNKNOWN) == CONST_DOUBLE || (UNKNOWN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "*" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "*" - 1) * sizeof (rtunion)),






((VALUE) == CONST_INT || (VALUE) == CONST_DOUBLE || (VALUE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "0" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "0" - 1) * sizeof (rtunion)),



((DEBUG_EXPR) == CONST_INT || (DEBUG_EXPR) == CONST_DOUBLE || (DEBUG_EXPR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "0" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "0" - 1) * sizeof (rtunion)),






((EXPR_LIST) == CONST_INT || (EXPR_LIST) == CONST_DOUBLE || (EXPR_LIST) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),



((INSN_LIST) == CONST_INT || (INSN_LIST) == CONST_DOUBLE || (INSN_LIST) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ue" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ue" - 1) * sizeof (rtunion)),





((SEQUENCE) == CONST_INT || (SEQUENCE) == CONST_DOUBLE || (SEQUENCE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (rtunion)),


((ADDRESS) == CONST_INT || (ADDRESS) == CONST_DOUBLE || (ADDRESS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
# 126 "../../gcc/rtl.def"
((DEBUG_INSN) == CONST_INT || (DEBUG_INSN) == CONST_DOUBLE || (DEBUG_INSN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieie" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieie" - 1) * sizeof (rtunion)),


((INSN) == CONST_INT || (INSN) == CONST_DOUBLE || (INSN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieie" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieie" - 1) * sizeof (rtunion)),



((JUMP_INSN) == CONST_INT || (JUMP_INSN) == CONST_DOUBLE || (JUMP_INSN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieie0" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieie0" - 1) * sizeof (rtunion)),






((CALL_INSN) == CONST_INT || (CALL_INSN) == CONST_DOUBLE || (CALL_INSN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieiee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuBieiee" - 1) * sizeof (rtunion)),


((BARRIER) == CONST_INT || (BARRIER) == CONST_DOUBLE || (BARRIER) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuu00000" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuu00000" - 1) * sizeof (rtunion)),







((CODE_LABEL) == CONST_INT || (CODE_LABEL) == CONST_DOUBLE || (CODE_LABEL) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuB00is" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuB00is" - 1) * sizeof (rtunion)),






((NOTE) == CONST_INT || (NOTE) == CONST_DOUBLE || (NOTE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuB0ni" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iuuB0ni" - 1) * sizeof (rtunion)),
# 171 "../../gcc/rtl.def"
((COND_EXEC) == CONST_INT || (COND_EXEC) == CONST_DOUBLE || (COND_EXEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((PARALLEL) == CONST_INT || (PARALLEL) == CONST_DOUBLE || (PARALLEL) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (rtunion)),







((ASM_INPUT) == CONST_INT || (ASM_INPUT) == CONST_DOUBLE || (ASM_INPUT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "si" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "si" - 1) * sizeof (rtunion)),
# 196 "../../gcc/rtl.def"
((ASM_OPERANDS) == CONST_INT || (ASM_OPERANDS) == CONST_DOUBLE || (ASM_OPERANDS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ssiEEEi" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ssiEEEi" - 1) * sizeof (rtunion)),
# 214 "../../gcc/rtl.def"
((UNSPEC) == CONST_INT || (UNSPEC) == CONST_DOUBLE || (UNSPEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "Ei" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "Ei" - 1) * sizeof (rtunion)),


((UNSPEC_VOLATILE) == CONST_INT || (UNSPEC_VOLATILE) == CONST_DOUBLE || (UNSPEC_VOLATILE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "Ei" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "Ei" - 1) * sizeof (rtunion)),



((ADDR_VEC) == CONST_INT || (ADDR_VEC) == CONST_DOUBLE || (ADDR_VEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (rtunion)),
# 246 "../../gcc/rtl.def"
((ADDR_DIFF_VEC) == CONST_INT || (ADDR_DIFF_VEC) == CONST_DOUBLE || (ADDR_DIFF_VEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eEee0" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eEee0" - 1) * sizeof (rtunion)),
# 257 "../../gcc/rtl.def"
((PREFETCH) == CONST_INT || (PREFETCH) == CONST_DOUBLE || (PREFETCH) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (rtunion)),
# 269 "../../gcc/rtl.def"
((SET) == CONST_INT || (SET) == CONST_DOUBLE || (SET) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
# 278 "../../gcc/rtl.def"
((USE) == CONST_INT || (USE) == CONST_DOUBLE || (USE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
# 287 "../../gcc/rtl.def"
((CLOBBER) == CONST_INT || (CLOBBER) == CONST_DOUBLE || (CLOBBER) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),





((CALL) == CONST_INT || (CALL) == CONST_DOUBLE || (CALL) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),



((RETURN) == CONST_INT || (RETURN) == CONST_DOUBLE || (RETURN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (rtunion)),



((EH_RETURN) == CONST_INT || (EH_RETURN) == CONST_DOUBLE || (EH_RETURN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (rtunion)),





((TRAP_IF) == CONST_INT || (TRAP_IF) == CONST_DOUBLE || (TRAP_IF) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),






((CONST_INT) == CONST_INT || (CONST_INT) == CONST_DOUBLE || (CONST_INT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "w" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "w" - 1) * sizeof (rtunion)),


((CONST_FIXED) == CONST_INT || (CONST_FIXED) == CONST_DOUBLE || (CONST_FIXED) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "www" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "www" - 1) * sizeof (rtunion)),




((CONST_DOUBLE) == CONST_INT || (CONST_DOUBLE) == CONST_DOUBLE || (CONST_DOUBLE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "wwwwww" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "wwwwww" - 1) * sizeof (rtunion)),


((CONST_VECTOR) == CONST_INT || (CONST_VECTOR) == CONST_DOUBLE || (CONST_VECTOR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (rtunion)),




((CONST_STRING) == CONST_INT || (CONST_STRING) == CONST_DOUBLE || (CONST_STRING) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),





((CONST) == CONST_INT || (CONST) == CONST_DOUBLE || (CONST) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),



((PC) == CONST_INT || (PC) == CONST_DOUBLE || (PC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (rtunion)),
# 350 "../../gcc/rtl.def"
((REG) == CONST_INT || (REG) == CONST_DOUBLE || (REG) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "i00" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "i00" - 1) * sizeof (rtunion)),






((SCRATCH) == CONST_INT || (SCRATCH) == CONST_DOUBLE || (SCRATCH) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "0" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "0" - 1) * sizeof (rtunion)),



((SUBREG) == CONST_INT || (SUBREG) == CONST_DOUBLE || (SUBREG) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ei" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ei" - 1) * sizeof (rtunion)),
# 374 "../../gcc/rtl.def"
((STRICT_LOW_PART) == CONST_INT || (STRICT_LOW_PART) == CONST_DOUBLE || (STRICT_LOW_PART) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),





((CONCAT) == CONST_INT || (CONCAT) == CONST_DOUBLE || (CONCAT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),





((CONCATN) == CONST_INT || (CONCATN) == CONST_DOUBLE || (CONCATN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "E" - 1) * sizeof (rtunion)),




((MEM) == CONST_INT || (MEM) == CONST_DOUBLE || (MEM) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e0" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e0" - 1) * sizeof (rtunion)),



((LABEL_REF) == CONST_INT || (LABEL_REF) == CONST_DOUBLE || (LABEL_REF) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "u" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "u" - 1) * sizeof (rtunion)),






((SYMBOL_REF) == CONST_INT || (SYMBOL_REF) == CONST_DOUBLE || (SYMBOL_REF) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s00" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s00" - 1) * sizeof (rtunion)),






((CC0) == CONST_INT || (CC0) == CONST_DOUBLE || (CC0) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "" - 1) * sizeof (rtunion)),
# 421 "../../gcc/rtl.def"
((IF_THEN_ELSE) == CONST_INT || (IF_THEN_ELSE) == CONST_DOUBLE || (IF_THEN_ELSE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (rtunion)),


((COMPARE) == CONST_INT || (COMPARE) == CONST_DOUBLE || (COMPARE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((PLUS) == CONST_INT || (PLUS) == CONST_DOUBLE || (PLUS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((MINUS) == CONST_INT || (MINUS) == CONST_DOUBLE || (MINUS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((NEG) == CONST_INT || (NEG) == CONST_DOUBLE || (NEG) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),

((MULT) == CONST_INT || (MULT) == CONST_DOUBLE || (MULT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((SS_MULT) == CONST_INT || (SS_MULT) == CONST_DOUBLE || (SS_MULT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),

((US_MULT) == CONST_INT || (US_MULT) == CONST_DOUBLE || (US_MULT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((DIV) == CONST_INT || (DIV) == CONST_DOUBLE || (DIV) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),

((SS_DIV) == CONST_INT || (SS_DIV) == CONST_DOUBLE || (SS_DIV) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),

((US_DIV) == CONST_INT || (US_DIV) == CONST_DOUBLE || (US_DIV) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((MOD) == CONST_INT || (MOD) == CONST_DOUBLE || (MOD) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((UDIV) == CONST_INT || (UDIV) == CONST_DOUBLE || (UDIV) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UMOD) == CONST_INT || (UMOD) == CONST_DOUBLE || (UMOD) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((AND) == CONST_INT || (AND) == CONST_DOUBLE || (AND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((IOR) == CONST_INT || (IOR) == CONST_DOUBLE || (IOR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((XOR) == CONST_INT || (XOR) == CONST_DOUBLE || (XOR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((NOT) == CONST_INT || (NOT) == CONST_DOUBLE || (NOT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),




((ASHIFT) == CONST_INT || (ASHIFT) == CONST_DOUBLE || (ASHIFT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((ROTATE) == CONST_INT || (ROTATE) == CONST_DOUBLE || (ROTATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((ASHIFTRT) == CONST_INT || (ASHIFTRT) == CONST_DOUBLE || (ASHIFTRT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((LSHIFTRT) == CONST_INT || (LSHIFTRT) == CONST_DOUBLE || (LSHIFTRT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((ROTATERT) == CONST_INT || (ROTATERT) == CONST_DOUBLE || (ROTATERT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
# 478 "../../gcc/rtl.def"
((SMIN) == CONST_INT || (SMIN) == CONST_DOUBLE || (SMIN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((SMAX) == CONST_INT || (SMAX) == CONST_DOUBLE || (SMAX) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UMIN) == CONST_INT || (UMIN) == CONST_DOUBLE || (UMIN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UMAX) == CONST_INT || (UMAX) == CONST_DOUBLE || (UMAX) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
# 490 "../../gcc/rtl.def"
((PRE_DEC) == CONST_INT || (PRE_DEC) == CONST_DOUBLE || (PRE_DEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
((PRE_INC) == CONST_INT || (PRE_INC) == CONST_DOUBLE || (PRE_INC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
((POST_DEC) == CONST_INT || (POST_DEC) == CONST_DOUBLE || (POST_DEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
((POST_INC) == CONST_INT || (POST_INC) == CONST_DOUBLE || (POST_INC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
# 507 "../../gcc/rtl.def"
((PRE_MODIFY) == CONST_INT || (PRE_MODIFY) == CONST_DOUBLE || (PRE_MODIFY) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((POST_MODIFY) == CONST_INT || (POST_MODIFY) == CONST_DOUBLE || (POST_MODIFY) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),



((NE) == CONST_INT || (NE) == CONST_DOUBLE || (NE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((EQ) == CONST_INT || (EQ) == CONST_DOUBLE || (EQ) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((GE) == CONST_INT || (GE) == CONST_DOUBLE || (GE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((GT) == CONST_INT || (GT) == CONST_DOUBLE || (GT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((LE) == CONST_INT || (LE) == CONST_DOUBLE || (LE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((LT) == CONST_INT || (LT) == CONST_DOUBLE || (LT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((GEU) == CONST_INT || (GEU) == CONST_DOUBLE || (GEU) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((GTU) == CONST_INT || (GTU) == CONST_DOUBLE || (GTU) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((LEU) == CONST_INT || (LEU) == CONST_DOUBLE || (LEU) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((LTU) == CONST_INT || (LTU) == CONST_DOUBLE || (LTU) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((UNORDERED) == CONST_INT || (UNORDERED) == CONST_DOUBLE || (UNORDERED) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((ORDERED) == CONST_INT || (ORDERED) == CONST_DOUBLE || (ORDERED) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((UNEQ) == CONST_INT || (UNEQ) == CONST_DOUBLE || (UNEQ) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UNGE) == CONST_INT || (UNGE) == CONST_DOUBLE || (UNGE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UNGT) == CONST_INT || (UNGT) == CONST_DOUBLE || (UNGT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UNLE) == CONST_INT || (UNLE) == CONST_DOUBLE || (UNLE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),
((UNLT) == CONST_INT || (UNLT) == CONST_DOUBLE || (UNLT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((LTGT) == CONST_INT || (LTGT) == CONST_DOUBLE || (LTGT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),




((SIGN_EXTEND) == CONST_INT || (SIGN_EXTEND) == CONST_DOUBLE || (SIGN_EXTEND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((ZERO_EXTEND) == CONST_INT || (ZERO_EXTEND) == CONST_DOUBLE || (ZERO_EXTEND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((TRUNCATE) == CONST_INT || (TRUNCATE) == CONST_DOUBLE || (TRUNCATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((FLOAT_EXTEND) == CONST_INT || (FLOAT_EXTEND) == CONST_DOUBLE || (FLOAT_EXTEND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
((FLOAT_TRUNCATE) == CONST_INT || (FLOAT_TRUNCATE) == CONST_DOUBLE || (FLOAT_TRUNCATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((FLOAT) == CONST_INT || (FLOAT) == CONST_DOUBLE || (FLOAT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),







((FIX) == CONST_INT || (FIX) == CONST_DOUBLE || (FIX) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((UNSIGNED_FLOAT) == CONST_INT || (UNSIGNED_FLOAT) == CONST_DOUBLE || (UNSIGNED_FLOAT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),




((UNSIGNED_FIX) == CONST_INT || (UNSIGNED_FIX) == CONST_DOUBLE || (UNSIGNED_FIX) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
# 579 "../../gcc/rtl.def"
((FRACT_CONVERT) == CONST_INT || (FRACT_CONVERT) == CONST_DOUBLE || (FRACT_CONVERT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),






((UNSIGNED_FRACT_CONVERT) == CONST_INT || (UNSIGNED_FRACT_CONVERT) == CONST_DOUBLE || (UNSIGNED_FRACT_CONVERT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),







((SAT_FRACT) == CONST_INT || (SAT_FRACT) == CONST_DOUBLE || (SAT_FRACT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),





((UNSIGNED_SAT_FRACT) == CONST_INT || (UNSIGNED_SAT_FRACT) == CONST_DOUBLE || (UNSIGNED_SAT_FRACT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((ABS) == CONST_INT || (ABS) == CONST_DOUBLE || (ABS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((SQRT) == CONST_INT || (SQRT) == CONST_DOUBLE || (SQRT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((BSWAP) == CONST_INT || (BSWAP) == CONST_DOUBLE || (BSWAP) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),




((FFS) == CONST_INT || (FFS) == CONST_DOUBLE || (FFS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((CLZ) == CONST_INT || (CLZ) == CONST_DOUBLE || (CLZ) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((CTZ) == CONST_INT || (CTZ) == CONST_DOUBLE || (CTZ) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((POPCOUNT) == CONST_INT || (POPCOUNT) == CONST_DOUBLE || (POPCOUNT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((PARITY) == CONST_INT || (PARITY) == CONST_DOUBLE || (PARITY) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),
# 638 "../../gcc/rtl.def"
((SIGN_EXTRACT) == CONST_INT || (SIGN_EXTRACT) == CONST_DOUBLE || (SIGN_EXTRACT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (rtunion)),



((ZERO_EXTRACT) == CONST_INT || (ZERO_EXTRACT) == CONST_DOUBLE || (ZERO_EXTRACT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (rtunion)),




((HIGH) == CONST_INT || (HIGH) == CONST_DOUBLE || (HIGH) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),



((LO_SUM) == CONST_INT || (LO_SUM) == CONST_DOUBLE || (LO_SUM) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),






((VEC_MERGE) == CONST_INT || (VEC_MERGE) == CONST_DOUBLE || (VEC_MERGE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eee" - 1) * sizeof (rtunion)),





((VEC_SELECT) == CONST_INT || (VEC_SELECT) == CONST_DOUBLE || (VEC_SELECT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),




((VEC_CONCAT) == CONST_INT || (VEC_CONCAT) == CONST_DOUBLE || (VEC_CONCAT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),





((VEC_DUPLICATE) == CONST_INT || (VEC_DUPLICATE) == CONST_DOUBLE || (VEC_DUPLICATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((SS_PLUS) == CONST_INT || (SS_PLUS) == CONST_DOUBLE || (SS_PLUS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((US_PLUS) == CONST_INT || (US_PLUS) == CONST_DOUBLE || (US_PLUS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((SS_MINUS) == CONST_INT || (SS_MINUS) == CONST_DOUBLE || (SS_MINUS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((SS_NEG) == CONST_INT || (SS_NEG) == CONST_DOUBLE || (SS_NEG) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),

((US_NEG) == CONST_INT || (US_NEG) == CONST_DOUBLE || (US_NEG) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((SS_ABS) == CONST_INT || (SS_ABS) == CONST_DOUBLE || (SS_ABS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((SS_ASHIFT) == CONST_INT || (SS_ASHIFT) == CONST_DOUBLE || (SS_ASHIFT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((US_ASHIFT) == CONST_INT || (US_ASHIFT) == CONST_DOUBLE || (US_ASHIFT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((US_MINUS) == CONST_INT || (US_MINUS) == CONST_DOUBLE || (US_MINUS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ee" - 1) * sizeof (rtunion)),


((SS_TRUNCATE) == CONST_INT || (SS_TRUNCATE) == CONST_DOUBLE || (SS_TRUNCATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),


((US_TRUNCATE) == CONST_INT || (US_TRUNCATE) == CONST_DOUBLE || (US_TRUNCATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "e" - 1) * sizeof (rtunion)),




((VAR_LOCATION) == CONST_INT || (VAR_LOCATION) == CONST_DOUBLE || (VAR_LOCATION) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "tei" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "tei" - 1) * sizeof (rtunion)),






((INCLUDE) == CONST_INT || (INCLUDE) == CONST_DOUBLE || (INCLUDE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),
# 754 "../../gcc/rtl.def"
((MATCH_OPERAND) == CONST_INT || (MATCH_OPERAND) == CONST_DOUBLE || (MATCH_OPERAND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iss" - 1) * sizeof (rtunion)),





((MATCH_SCRATCH) == CONST_INT || (MATCH_SCRATCH) == CONST_DOUBLE || (MATCH_SCRATCH) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "is" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "is" - 1) * sizeof (rtunion)),






((MATCH_OPERATOR) == CONST_INT || (MATCH_OPERATOR) == CONST_DOUBLE || (MATCH_OPERATOR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "isE" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "isE" - 1) * sizeof (rtunion)),







((MATCH_PARALLEL) == CONST_INT || (MATCH_PARALLEL) == CONST_DOUBLE || (MATCH_PARALLEL) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "isE" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "isE" - 1) * sizeof (rtunion)),



((MATCH_DUP) == CONST_INT || (MATCH_DUP) == CONST_DOUBLE || (MATCH_DUP) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "i" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "i" - 1) * sizeof (rtunion)),



((MATCH_OP_DUP) == CONST_INT || (MATCH_OP_DUP) == CONST_DOUBLE || (MATCH_OP_DUP) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iE" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iE" - 1) * sizeof (rtunion)),



((MATCH_PAR_DUP) == CONST_INT || (MATCH_PAR_DUP) == CONST_DOUBLE || (MATCH_PAR_DUP) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "iE" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "iE" - 1) * sizeof (rtunion)),
# 797 "../../gcc/rtl.def"
((MATCH_CODE) == CONST_INT || (MATCH_CODE) == CONST_DOUBLE || (MATCH_CODE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),




((MATCH_TEST) == CONST_INT || (MATCH_TEST) == CONST_DOUBLE || (MATCH_TEST) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),
# 822 "../../gcc/rtl.def"
((DEFINE_INSN) == CONST_INT || (DEFINE_INSN) == CONST_DOUBLE || (DEFINE_INSN) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sEsTV" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sEsTV" - 1) * sizeof (rtunion)),
# 831 "../../gcc/rtl.def"
((DEFINE_PEEPHOLE) == CONST_INT || (DEFINE_PEEPHOLE) == CONST_DOUBLE || (DEFINE_PEEPHOLE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "EsTV" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "EsTV" - 1) * sizeof (rtunion)),
# 842 "../../gcc/rtl.def"
((DEFINE_SPLIT) == CONST_INT || (DEFINE_SPLIT) == CONST_DOUBLE || (DEFINE_SPLIT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "EsES" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "EsES" - 1) * sizeof (rtunion)),
# 870 "../../gcc/rtl.def"
((DEFINE_INSN_AND_SPLIT) == CONST_INT || (DEFINE_INSN_AND_SPLIT) == CONST_DOUBLE || (DEFINE_INSN_AND_SPLIT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sEsTsESV" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sEsTsESV" - 1) * sizeof (rtunion)),



((DEFINE_PEEPHOLE2) == CONST_INT || (DEFINE_PEEPHOLE2) == CONST_DOUBLE || (DEFINE_PEEPHOLE2) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "EsES" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "EsES" - 1) * sizeof (rtunion)),
# 887 "../../gcc/rtl.def"
((DEFINE_EXPAND) == CONST_INT || (DEFINE_EXPAND) == CONST_DOUBLE || (DEFINE_EXPAND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sEss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sEss" - 1) * sizeof (rtunion)),
# 903 "../../gcc/rtl.def"
((DEFINE_DELAY) == CONST_INT || (DEFINE_DELAY) == CONST_DOUBLE || (DEFINE_DELAY) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "eE" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "eE" - 1) * sizeof (rtunion)),


((DEFINE_ASM_ATTRIBUTES) == CONST_INT || (DEFINE_ASM_ATTRIBUTES) == CONST_DOUBLE || (DEFINE_ASM_ATTRIBUTES) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "V" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "V" - 1) * sizeof (rtunion)),
# 919 "../../gcc/rtl.def"
((DEFINE_COND_EXEC) == CONST_INT || (DEFINE_COND_EXEC) == CONST_DOUBLE || (DEFINE_COND_EXEC) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "Ess" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "Ess" - 1) * sizeof (rtunion)),
# 935 "../../gcc/rtl.def"
((DEFINE_PREDICATE) == CONST_INT || (DEFINE_PREDICATE) == CONST_DOUBLE || (DEFINE_PREDICATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ses" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ses" - 1) * sizeof (rtunion)),
((DEFINE_SPECIAL_PREDICATE) == CONST_INT || (DEFINE_SPECIAL_PREDICATE) == CONST_DOUBLE || (DEFINE_SPECIAL_PREDICATE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ses" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ses" - 1) * sizeof (rtunion)),
# 949 "../../gcc/rtl.def"
((DEFINE_REGISTER_CONSTRAINT) == CONST_INT || (DEFINE_REGISTER_CONSTRAINT) == CONST_DOUBLE || (DEFINE_REGISTER_CONSTRAINT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sss" - 1) * sizeof (rtunion)),
# 988 "../../gcc/rtl.def"
((DEFINE_CONSTRAINT) == CONST_INT || (DEFINE_CONSTRAINT) == CONST_DOUBLE || (DEFINE_CONSTRAINT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (rtunion)),
((DEFINE_MEMORY_CONSTRAINT) == CONST_INT || (DEFINE_MEMORY_CONSTRAINT) == CONST_DOUBLE || (DEFINE_MEMORY_CONSTRAINT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (rtunion)),
((DEFINE_ADDRESS_CONSTRAINT) == CONST_INT || (DEFINE_ADDRESS_CONSTRAINT) == CONST_DOUBLE || (DEFINE_ADDRESS_CONSTRAINT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (rtunion)),
# 1004 "../../gcc/rtl.def"
((DEFINE_CPU_UNIT) == CONST_INT || (DEFINE_CPU_UNIT) == CONST_DOUBLE || (DEFINE_CPU_UNIT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sS" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sS" - 1) * sizeof (rtunion)),




((DEFINE_QUERY_CPU_UNIT) == CONST_INT || (DEFINE_QUERY_CPU_UNIT) == CONST_DOUBLE || (DEFINE_QUERY_CPU_UNIT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sS" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sS" - 1) * sizeof (rtunion)),
# 1019 "../../gcc/rtl.def"
((EXCLUSION_SET) == CONST_INT || (EXCLUSION_SET) == CONST_DOUBLE || (EXCLUSION_SET) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),
# 1041 "../../gcc/rtl.def"
((PRESENCE_SET) == CONST_INT || (PRESENCE_SET) == CONST_DOUBLE || (PRESENCE_SET) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),
# 1062 "../../gcc/rtl.def"
((FINAL_PRESENCE_SET) == CONST_INT || (FINAL_PRESENCE_SET) == CONST_DOUBLE || (FINAL_PRESENCE_SET) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),
# 1085 "../../gcc/rtl.def"
((ABSENCE_SET) == CONST_INT || (ABSENCE_SET) == CONST_DOUBLE || (ABSENCE_SET) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),




((FINAL_ABSENCE_SET) == CONST_INT || (FINAL_ABSENCE_SET) == CONST_DOUBLE || (FINAL_ABSENCE_SET) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),
# 1105 "../../gcc/rtl.def"
((DEFINE_BYPASS) == CONST_INT || (DEFINE_BYPASS) == CONST_DOUBLE || (DEFINE_BYPASS) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "issS" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "issS" - 1) * sizeof (rtunion)),
# 1114 "../../gcc/rtl.def"
((DEFINE_AUTOMATON) == CONST_INT || (DEFINE_AUTOMATON) == CONST_DOUBLE || (DEFINE_AUTOMATON) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),
# 1137 "../../gcc/rtl.def"
((AUTOMATA_OPTION) == CONST_INT || (AUTOMATA_OPTION) == CONST_DOUBLE || (AUTOMATA_OPTION) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),
# 1146 "../../gcc/rtl.def"
((DEFINE_RESERVATION) == CONST_INT || (DEFINE_RESERVATION) == CONST_DOUBLE || (DEFINE_RESERVATION) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),
# 1194 "../../gcc/rtl.def"
((DEFINE_INSN_RESERVATION) == CONST_INT || (DEFINE_INSN_RESERVATION) == CONST_DOUBLE || (DEFINE_INSN_RESERVATION) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sies" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sies" - 1) * sizeof (rtunion)),







((DEFINE_ATTR) == CONST_INT || (DEFINE_ATTR) == CONST_DOUBLE || (DEFINE_ATTR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sse" - 1) * sizeof (rtunion)),


((ATTR) == CONST_INT || (ATTR) == CONST_DOUBLE || (ATTR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),







((SET_ATTR) == CONST_INT || (SET_ATTR) == CONST_DOUBLE || (SET_ATTR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),
# 1228 "../../gcc/rtl.def"
((SET_ATTR_ALTERNATIVE) == CONST_INT || (SET_ATTR_ALTERNATIVE) == CONST_DOUBLE || (SET_ATTR_ALTERNATIVE) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "sE" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "sE" - 1) * sizeof (rtunion)),




((EQ_ATTR) == CONST_INT || (EQ_ATTR) == CONST_DOUBLE || (EQ_ATTR) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ss" - 1) * sizeof (rtunion)),



((EQ_ATTR_ALT) == CONST_INT || (EQ_ATTR_ALT) == CONST_DOUBLE || (EQ_ATTR_ALT) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "ii" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "ii" - 1) * sizeof (rtunion)),
# 1247 "../../gcc/rtl.def"
((ATTR_FLAG) == CONST_INT || (ATTR_FLAG) == CONST_DOUBLE || (ATTR_FLAG) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "s" - 1) * sizeof (rtunion)),






((COND) == CONST_INT || (COND) == CONST_DOUBLE || (COND) == CONST_FIXED ? __builtin_offsetof (struct rtx_def, u) + (sizeof "Ee" - 1) * sizeof (long) : __builtin_offsetof (struct rtx_def, u) + (sizeof "Ee" - 1) * sizeof (rtunion)),
# 118 "../../gcc/rtl.c" 2

};



const char * const note_insn_name[NOTE_INSN_MAX] =
{

# 1 "../../gcc/insn-notes.def" 1
# 35 "../../gcc/insn-notes.def"
"NOTE_INSN_DELETED",


"NOTE_INSN_DELETED_LABEL",



"NOTE_INSN_BLOCK_BEG",
"NOTE_INSN_BLOCK_END",




"NOTE_INSN_FUNCTION_BEG",


"NOTE_INSN_PROLOGUE_END",


"NOTE_INSN_EPILOGUE_BEG",



"NOTE_INSN_EH_REGION_BEG",
"NOTE_INSN_EH_REGION_END",


"NOTE_INSN_VAR_LOCATION",




"NOTE_INSN_BASIC_BLOCK",



"NOTE_INSN_SWITCH_TEXT_SECTIONS",



"NOTE_INSN_CFA_RESTORE_STATE",
# 127 "../../gcc/rtl.c" 2

};

const char * const reg_note_name[REG_NOTE_MAX] =
{

# 1 "../../gcc/reg-notes.def" 1
# 33 "../../gcc/reg-notes.def"
"REG_DEP_TRUE",




"REG_DEAD",


"REG_INC",
# 52 "../../gcc/reg-notes.def"
"REG_EQUIV",




"REG_EQUAL",






"REG_NONNEG",


"REG_UNUSED",
# 76 "../../gcc/reg-notes.def"
"REG_CC_SETTER",
"REG_CC_USER",




"REG_LABEL_TARGET",





"REG_LABEL_OPERAND",




"REG_DEP_OUTPUT",
"REG_DEP_ANTI",





"REG_BR_PROB",




"REG_VALUE_PROFILE",



"REG_NOALIAS",





"REG_BR_PRED",




"REG_FRAME_RELATED_EXPR",
# 130 "../../gcc/reg-notes.def"
"REG_CFA_DEF_CFA",







"REG_CFA_ADJUST_CFA",





"REG_CFA_OFFSET",




"REG_CFA_REGISTER",





"REG_CFA_RESTORE",




"REG_CFA_SET_VDRAP",




"REG_EH_CONTEXT",





"REG_EH_REGION",


"REG_SAVE_NOTE",


"REG_NORETURN",



"REG_NON_LOCAL_GOTO",




"REG_CROSSING_JUMP",



"REG_SETJMP",
# 134 "../../gcc/rtl.c" 2

};
# 148 "../../gcc/rtl.c"
rtvec
rtvec_alloc (int n)
{
  rtvec rt;

  rt = ((rtvec) ggc_alloc_stat (sizeof (struct rtvec_def) + ((n) - 1) * sizeof (rtx) ));

  memset (&rt->elem[0], 0, n * sizeof (rtx));

  ((rt)->num_elem = (n));






  return rt;
}



rtvec
shallow_copy_rtvec (rtvec vec)
{
  rtvec newvec;
  int n;

  n = ((vec)->num_elem);
  newvec = rtvec_alloc (n);
  memcpy (&newvec->elem[0], &vec->elem[0], sizeof (rtx) * n);
  return newvec;
}



unsigned int
rtx_size (const_rtx x)
{
  if (((enum rtx_code) (x)->code) == SYMBOL_REF && ((((((x))->u.fld[1]).rt_int) & (1 << 7)) != 0))
    return __builtin_offsetof (struct rtx_def, u) + sizeof (struct block_symbol);
  return rtx_code_size[((enum rtx_code) (x)->code)];
}




rtx
rtx_alloc_stat (enum rtx_code code )
{
  rtx rt;

  rt = (rtx) ggc_alloc_stat (rtx_code_size[code] );





  memset (rt, 0, __builtin_offsetof (struct rtx_def, u));
  ((rt)->code = (code));






  return rt;
}




unsigned char
shared_const_p (const_rtx orig)
{
  ((void)(!(((enum rtx_code) (orig)->code) == CONST) ? fancy_abort ("../../gcc/rtl.c", 222, __FUNCTION__), 0 : 0));



  return (((enum rtx_code) ((((orig)->u.fld[0]).rt_rtx))->code) == PLUS
   && ((enum rtx_code) (((((((orig)->u.fld[0]).rt_rtx))->u.fld[0]).rt_rtx))->code) == SYMBOL_REF
   && (((enum rtx_code) (((((((orig)->u.fld[0]).rt_rtx))->u.fld[1]).rt_rtx))->code) == CONST_INT));
}






rtx
copy_rtx (rtx orig)
{
  rtx copy;
  int i, j;
  enum rtx_code code;
  const char *format_ptr;

  code = ((enum rtx_code) (orig)->code);

  switch (code)
    {
    case REG:
    case DEBUG_EXPR:
    case VALUE:
    case CONST_INT:
    case CONST_DOUBLE:
    case CONST_FIXED:
    case CONST_VECTOR:
    case SYMBOL_REF:
    case CODE_LABEL:
    case PC:
    case CC0:
    case SCRATCH:

      return orig;
    case CLOBBER:
      if ((((enum rtx_code) ((((orig)->u.fld[0]).rt_rtx))->code) == REG) && (rhs_regno((((orig)->u.fld[0]).rt_rtx))) < 53)
 return orig;
      break;

    case CONST:
      if (shared_const_p (orig))
 return orig;
      break;






    default:
      break;
    }





  copy = shallow_copy_rtx_stat (orig );



  ((copy)->used) = 0;


  if (((((enum rtx_code) (orig)->code) == INSN) || (((enum rtx_code) (orig)->code) == DEBUG_INSN) || (((enum rtx_code) (orig)->code) == JUMP_INSN) || (((enum rtx_code) (orig)->code) == CALL_INSN)))
    ((copy)->frame_related) = 0;
  ((copy)->jump) = ((orig)->jump);
  ((copy)->call) = ((orig)->call);

  format_ptr = (rtx_format[(int) (((enum rtx_code) (copy)->code))]);

  for (i = 0; i < (rtx_length[(int) (((enum rtx_code) (copy)->code))]); i++)
    switch (*format_ptr++)
      {
      case 'e':
 if ((((orig)->u.fld[i]).rt_rtx) != ((void *)0))
   (((copy)->u.fld[i]).rt_rtx) = copy_rtx ((((orig)->u.fld[i]).rt_rtx));
 break;

      case 'E':
      case 'V':
 if ((((orig)->u.fld[i]).rt_rtvec) != ((void *)0))
   {
     (((copy)->u.fld[i]).rt_rtvec) = rtvec_alloc ((((((orig)->u.fld[i]).rt_rtvec))->num_elem));
     for (j = 0; j < (((((copy)->u.fld[i]).rt_rtvec))->num_elem); j++)
       (((((copy)->u.fld[i]).rt_rtvec))->elem[j]) = copy_rtx ((((((orig)->u.fld[i]).rt_rtvec))->elem[j]));
   }
 break;

      case 't':
      case 'w':
      case 'i':
      case 's':
      case 'S':
      case 'T':
      case 'u':
      case 'B':
      case '0':

 break;

      default:
 (fancy_abort ("../../gcc/rtl.c", 330, __FUNCTION__));
      }
  return copy;
}



rtx
shallow_copy_rtx_stat (const_rtx orig )
{
  const unsigned int size = rtx_size (orig);
  rtx const copy = (rtx) ggc_alloc_stat (size );
  return (rtx) memcpy (copy, orig, size);
}


int generating_concat_p;


int currently_expanding_to_rtl;
# 358 "../../gcc/rtl.c"
int
rtx_equal_p_cb (const_rtx x, const_rtx y, rtx_equal_p_callback_function cb)
{
  int i;
  int j;
  enum rtx_code code;
  const char *fmt;
  rtx nx, ny;

  if (x == y)
    return 1;
  if (x == 0 || y == 0)
    return 0;


  if (cb != ((void *)0)
      && ((*cb) (&x, &y, &nx, &ny)))
    return rtx_equal_p_cb (nx, ny, cb);

  code = ((enum rtx_code) (x)->code);

  if (code != ((enum rtx_code) (y)->code))
    return 0;




  if (((enum machine_mode) (x)->mode) != ((enum machine_mode) (y)->mode))
    return 0;


  if (code == MEM && ((((x)->u.fld[1]).rt_mem) == 0 ? 0 : (((x)->u.fld[1]).rt_mem)->addrspace) != ((((y)->u.fld[1]).rt_mem) == 0 ? 0 : (((y)->u.fld[1]).rt_mem)->addrspace))
    return 0;


  switch (code)
    {
    case REG:
      return ((rhs_regno(x)) == (rhs_regno(y)));

    case LABEL_REF:
      return (((x)->u.fld[0]).rt_rtx) == (((y)->u.fld[0]).rt_rtx);

    case SYMBOL_REF:
      return (((x)->u.fld[0]).rt_str) == (((y)->u.fld[0]).rt_str);

    case DEBUG_EXPR:
    case VALUE:
    case SCRATCH:
    case CONST_DOUBLE:
    case CONST_INT:
    case CONST_FIXED:
      return 0;

    default:
      break;
    }




  fmt = (rtx_format[(int) (code)]);
  for (i = (rtx_length[(int) (code)]) - 1; i >= 0; i--)
    {
      switch (fmt[i])
 {
 case 'w':
   if (((x)->u.hwint[i]) != ((y)->u.hwint[i]))
     return 0;
   break;

 case 'n':
 case 'i':
   if ((((x)->u.fld[i]).rt_int) != (((y)->u.fld[i]).rt_int))
     return 0;
   break;

 case 'V':
 case 'E':

   if ((((((x)->u.fld[i]).rt_rtvec))->num_elem) != (((((y)->u.fld[i]).rt_rtvec))->num_elem))
     return 0;


   for (j = 0; j < (((((x)->u.fld[i]).rt_rtvec))->num_elem); j++)
     if (rtx_equal_p_cb ((((((x)->u.fld[i]).rt_rtvec))->elem[j]),
                                (((((y)->u.fld[i]).rt_rtvec))->elem[j]), cb) == 0)
       return 0;
   break;

 case 'e':
   if (rtx_equal_p_cb ((((x)->u.fld[i]).rt_rtx), (((y)->u.fld[i]).rt_rtx), cb) == 0)
     return 0;
   break;

 case 'S':
 case 's':
   if (((((x)->u.fld[i]).rt_str) || (((y)->u.fld[i]).rt_str))
       && (! (((x)->u.fld[i]).rt_str) || ! (((y)->u.fld[i]).rt_str)
    || strcmp ((((x)->u.fld[i]).rt_str), (((y)->u.fld[i]).rt_str))))
     return 0;
   break;

 case 'u':

   break;

 case '0':
 case 't':
   break;




 default:
   (fancy_abort ("../../gcc/rtl.c", 473, __FUNCTION__));
 }
    }
  return 1;
}






int
rtx_equal_p (const_rtx x, const_rtx y)
{
  int i;
  int j;
  enum rtx_code code;
  const char *fmt;

  if (x == y)
    return 1;
  if (x == 0 || y == 0)
    return 0;

  code = ((enum rtx_code) (x)->code);

  if (code != ((enum rtx_code) (y)->code))
    return 0;




  if (((enum machine_mode) (x)->mode) != ((enum machine_mode) (y)->mode))
    return 0;


  if (code == MEM && ((((x)->u.fld[1]).rt_mem) == 0 ? 0 : (((x)->u.fld[1]).rt_mem)->addrspace) != ((((y)->u.fld[1]).rt_mem) == 0 ? 0 : (((y)->u.fld[1]).rt_mem)->addrspace))
    return 0;


  switch (code)
    {
    case REG:
      return ((rhs_regno(x)) == (rhs_regno(y)));

    case LABEL_REF:
      return (((x)->u.fld[0]).rt_rtx) == (((y)->u.fld[0]).rt_rtx);

    case SYMBOL_REF:
      return (((x)->u.fld[0]).rt_str) == (((y)->u.fld[0]).rt_str);

    case DEBUG_EXPR:
    case VALUE:
    case SCRATCH:
    case CONST_DOUBLE:
    case CONST_INT:
    case CONST_FIXED:
      return 0;

    default:
      break;
    }




  fmt = (rtx_format[(int) (code)]);
  for (i = (rtx_length[(int) (code)]) - 1; i >= 0; i--)
    {
      switch (fmt[i])
 {
 case 'w':
   if (((x)->u.hwint[i]) != ((y)->u.hwint[i]))
     return 0;
   break;

 case 'n':
 case 'i':
   if ((((x)->u.fld[i]).rt_int) != (((y)->u.fld[i]).rt_int))
     return 0;
   break;

 case 'V':
 case 'E':

   if ((((((x)->u.fld[i]).rt_rtvec))->num_elem) != (((((y)->u.fld[i]).rt_rtvec))->num_elem))
     return 0;


   for (j = 0; j < (((((x)->u.fld[i]).rt_rtvec))->num_elem); j++)
     if (rtx_equal_p ((((((x)->u.fld[i]).rt_rtvec))->elem[j]), (((((y)->u.fld[i]).rt_rtvec))->elem[j])) == 0)
       return 0;
   break;

 case 'e':
   if (rtx_equal_p ((((x)->u.fld[i]).rt_rtx), (((y)->u.fld[i]).rt_rtx)) == 0)
     return 0;
   break;

 case 'S':
 case 's':
   if (((((x)->u.fld[i]).rt_str) || (((y)->u.fld[i]).rt_str))
       && (! (((x)->u.fld[i]).rt_str) || ! (((y)->u.fld[i]).rt_str)
    || strcmp ((((x)->u.fld[i]).rt_str), (((y)->u.fld[i]).rt_str))))
     return 0;
   break;

 case 'u':

   break;

 case '0':
 case 't':
   break;




 default:
   (fancy_abort ("../../gcc/rtl.c", 592, __FUNCTION__));
 }
    }
  return 1;
}

void
dump_rtx_statistics (void)
{
# 627 "../../gcc/rtl.c"
}
