cscope 15 $HOME/labwork/gcc-4.5.1/mpc-0.8.2               0000806878
	@config.h

5 
	#HAVE_DLFCN_H
 1

	)

8 
	#HAVE_DUP
 1

	)

11 
	#HAVE_DUP2
 1

	)

14 
	#HAVE_FILENO
 1

	)

17 
	#HAVE_GETTIMEOFDAY
 1

	)

20 
	#HAVE_INTTYPES_H
 1

	)

23 
	#HAVE_LIMITS_H
 1

	)

26 
	#HAVE_LOCALECONV
 1

	)

29 
	#HAVE_LOCALE_H
 1

	)

32 
	#HAVE_MEMORY_H
 1

	)

35 
	#HAVE_SETLOCALE
 1

	)

38 
	#HAVE_STDINT_H
 1

	)

41 
	#HAVE_STDLIB_H
 1

	)

44 
	#HAVE_STRINGS_H
 1

	)

47 
	#HAVE_STRING_H
 1

	)

50 
	#HAVE_SYS_STAT_H
 1

	)

53 
	#HAVE_SYS_TIME_H
 1

	)

56 
	#HAVE_SYS_TYPES_H
 1

	)

59 
	#HAVE_UNISTD_H
 1

	)

63 
	#LT_OBJDIR
 ".libs/"

	)

69 
	#PACKAGE
 "mpc"

	)

72 
	#PACKAGE_BUGREPORT
 "mpc-discuss@li°s.gf‹ge.örü.‰"

	)

75 
	#PACKAGE_NAME
 "mpc"

	)

78 
	#PACKAGE_STRING
 "mp¯0.8.2"

	)

81 
	#PACKAGE_TARNAME
 "mpc"

	)

84 
	#PACKAGE_URL
 ""

	)

87 
	#PACKAGE_VERSION
 "0.8.2"

	)

90 
	#STDC_HEADERS
 1

	)

93 
	#TIME_WITH_SYS_TIME
 1

	)

96 
	#VERSION
 "0.8.2"

	)

	@installdir/include/mpc.h

22 #i‚de‡
__MPC_H


23 
	#__MPC_H


	)

25 
	~"gmp.h
"

26 
	~"mp‰.h
"

29 
	#MPC_VERSION_MAJOR
 0

	)

30 
	#MPC_VERSION_MINOR
 8

	)

31 
	#MPC_VERSION_PATCHLEVEL
 2

	)

32 
	#MPC_VERSION_STRING
 "0.8.2"

	)

35 
	#MPC_VERSION_NUM
(
a
,
b
,
c
Ë((◊Ë<< 16LË| ((bË<< 8Ë| (c))

	)

36 
	#MPC_VERSION
 \

37 
	`MPC_VERSION_NUM
(
MPC_VERSION_MAJOR
,
MPC_VERSION_MINOR
,
MPC_VERSION_PATCHLEVEL
)

	)

40 #i‡
deföed
 (
_GMP_H_HAVE_FILE
)

41 
	#_MPC_H_HAVE_FILE
 1

	)

45 #i‡
deföed
 (
INTMAX_C
Ë&& deföed (
UINTMAX_C
)

46 
	#_MPC_H_HAVE_INTMAX_T
 1

	)

52 
	#MPC_INEX_POS
(
öex
Ë(((öexË< 0Ë? 2 : ((öexË=0Ë? 0 : 1)

	)

54 
	#MPC_INEX_NEG
(
öex
Ë(((öexË=2Ë? -1 : ((öexË=0Ë? 0 : 1)

	)

61 
	#MPC_INEX
(
öex_ª
, 
öex_im
) \

62 (
	`MPC_INEX_POS
(
öex_ª
Ë| (MPC_INEX_POS(
öex_im
Ë<< 2))

	)

63 
	#MPC_INEX_RE
(
öex
Ë
	`MPC_INEX_NEG
((öexË& 3)

	)

64 
	#MPC_INEX_IM
(
öex
Ë
	`MPC_INEX_NEG
((öexË>> 2)

	)

70 
	tmpc_∫d_t
;

72 
	#RNDC
(
r1
,
r2
Ë((()‘1)Ë+ (()‘2Ë<< 4))

	)

73 
	#MPC_RND_RE
(
x
Ë((
mp_∫d_t
)((xË& 0x0F))

	)

74 
	#MPC_RND_IM
(
x
Ë((
mp_∫d_t
)((xË>> 4))

	)

76 
	#MPC_RNDNN
 
	`RNDC
(
GMP_RNDN
,GMP_RNDN)

	)

77 
	#MPC_RNDNZ
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDZ
)

	)

78 
	#MPC_RNDNU
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDU
)

	)

79 
	#MPC_RNDND
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDD
)

	)

81 
	#MPC_RNDZN
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDN
)

	)

82 
	#MPC_RNDZZ
 
	`RNDC
(
GMP_RNDZ
,GMP_RNDZ)

	)

83 
	#MPC_RNDZU
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDU
)

	)

84 
	#MPC_RNDZD
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDD
)

	)

86 
	#MPC_RNDUN
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDN
)

	)

87 
	#MPC_RNDUZ
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDZ
)

	)

88 
	#MPC_RNDUU
 
	`RNDC
(
GMP_RNDU
,GMP_RNDU)

	)

89 
	#MPC_RNDUD
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDD
)

	)

91 
	#MPC_RNDDN
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDN
)

	)

92 
	#MPC_RNDDZ
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDZ
)

	)

93 
	#MPC_RNDDU
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDU
)

	)

94 
	#MPC_RNDDD
 
	`RNDC
(
GMP_RNDD
,GMP_RNDD)

	)

100 
mp‰_t
 
	mª
;

101 
mp‰_t
 
	mim
;

103 
	t__mpc_°ru˘
;

105 
__mpc_°ru˘
 
	tmpc_t
[1];

106 
__mpc_°ru˘
 *
	tmpc_±r
;

107 
__gmp_c⁄°
 
	t__mpc_°ru˘
 *
	tmpc_§˝å
;

110 #i‡
deföed
 (
__GMP_PROTO
)

111 
	#__MPC_PROTO
 
__GMP_PROTO


	)

112 #ñi‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

113 
	#__MPC_PROTO
(
x
Ë
	)
x

115 
	#__MPC_PROTO
(
x
Ë()

	)

121 #i‡
deföed
(
__MPC_WITHIN_MPC
Ë&& 
__GMP_LIBGMP_DLL


122 
	#__MPC_DECLSPEC
 
__GMP_DECLSPEC_EXPORT


	)

124 
	#__MPC_DECLSPEC
 
__GMP_DECLSPEC


	)

127 #i‡
deföed
 (
__˝lu•lus
)

131 
__MPC_DECLSPEC
 
mpc_add
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

132 
__MPC_DECLSPEC
 
mpc_add_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

133 
__MPC_DECLSPEC
 
mpc_add_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

134 
__MPC_DECLSPEC
 
mpc_sub
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

135 
__MPC_DECLSPEC
 
mpc_sub_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

136 
__MPC_DECLSPEC
 
mpc_‰_sub
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_§˝å
, 
mpc_∫d_t
));

137 
__MPC_DECLSPEC
 
mpc_sub_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

138 
__MPC_DECLSPEC
 
mpc_ui_ui_sub
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_§˝å
, 
mpc_∫d_t
));

139 
__MPC_DECLSPEC
 
mpc_mul
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

140 
__MPC_DECLSPEC
 
mpc_mul_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

141 
__MPC_DECLSPEC
 
mpc_mul_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

142 
__MPC_DECLSPEC
 
mpc_mul_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

143 
__MPC_DECLSPEC
 
mpc_mul_i
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

144 
__MPC_DECLSPEC
 
mpc_sqr
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

145 
__MPC_DECLSPEC
 
mpc_div
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

146 
__MPC_DECLSPEC
 
mpc_pow
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

147 
__MPC_DECLSPEC
 
mpc_pow_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

148 
__MPC_DECLSPEC
 
mpc_pow_ld
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

149 
__MPC_DECLSPEC
 
mpc_pow_d
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

150 
__MPC_DECLSPEC
 
mpc_pow_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

151 
__MPC_DECLSPEC
 
mpc_pow_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

152 
__MPC_DECLSPEC
 
mpc_pow_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpz_§˝å
, 
mpc_∫d_t
));

153 
__MPC_DECLSPEC
 
mpc_div_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

154 
__MPC_DECLSPEC
 
mpc_‰_div
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_§˝å
, 
mpc_∫d_t
));

155 
__MPC_DECLSPEC
 
mpc_div_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

156 
__MPC_DECLSPEC
 
mpc_ui_div
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_§˝å
, 
mpc_∫d_t
));

157 
__MPC_DECLSPEC
 
mpc_div_2exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

158 
__MPC_DECLSPEC
 
mpc_mul_2exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

159 
__MPC_DECLSPEC
 
mpc_c⁄j
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

160 
__MPC_DECLSPEC
 
mpc_√g
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

161 
__MPC_DECLSPEC
 
mpc_n‹m
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp_∫d_t
));

162 
__MPC_DECLSPEC
 
mpc_abs
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp_∫d_t
));

163 
__MPC_DECLSPEC
 
mpc_sqπ
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

164 
__MPC_DECLSPEC
 
mpc_£t
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

165 
__MPC_DECLSPEC
 
mpc_£t_d
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

166 
__MPC_DECLSPEC
 
mpc_£t_d_d
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

167 
__MPC_DECLSPEC
 
mpc_£t_ld
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

168 
__MPC_DECLSPEC
 
mpc_£t_ld_ld
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

169 
__MPC_DECLSPEC
 
mpc_£t_f
 
__MPC_PROTO
 ((
mpc_±r
, 
mpf_§˝å
, 
mpc_∫d_t
));

170 
__MPC_DECLSPEC
 
mpc_£t_f_f
 
__MPC_PROTO
 ((
mpc_±r
, 
mpf_§˝å
, mpf_§˝å, 
mpc_∫d_t
));

171 
__MPC_DECLSPEC
 
mpc_£t_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_∫d_t
));

172 
__MPC_DECLSPEC
 
mpc_£t_‰_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, mp‰_§˝å, 
mpc_∫d_t
));

173 
__MPC_DECLSPEC
 
mpc_£t_q
 
__MPC_PROTO
 ((
mpc_±r
, 
mpq_§˝å
, 
mpc_∫d_t
));

174 
__MPC_DECLSPEC
 
mpc_£t_q_q
 
__MPC_PROTO
 ((
mpc_±r
, 
mpq_§˝å
, mpq_§˝å, 
mpc_∫d_t
));

175 
__MPC_DECLSPEC
 
mpc_£t_si
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

176 
__MPC_DECLSPEC
 
mpc_£t_si_si
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

177 
__MPC_DECLSPEC
 
mpc_£t_ui
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

178 
__MPC_DECLSPEC
 
mpc_£t_ui_ui
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

179 
__MPC_DECLSPEC
 
mpc_£t_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpz_§˝å
, 
mpc_∫d_t
));

180 
__MPC_DECLSPEC
 
mpc_£t_z_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpz_§˝å
, mpz_§˝å, 
mpc_∫d_t
));

181 
__MPC_DECLSPEC
 
mpc_sw≠
 
__MPC_PROTO
 ((
mpc_±r
, mpc_ptr));

183 #ifde‡
_MPC_H_HAVE_INTMAX_T


184 
__MPC_DECLSPEC
 
mpc_£t_sj
 
__MPC_PROTO
 ((
mpc_±r
, 
ötmax_t
, 
mpc_∫d_t
));

185 
__MPC_DECLSPEC
 
mpc_£t_uj
 
__MPC_PROTO
 ((
mpc_±r
, 
uötmax_t
, 
mpc_∫d_t
));

186 
__MPC_DECLSPEC
 
mpc_£t_sj_sj
 
__MPC_PROTO
 ((
mpc_±r
, 
ötmax_t
, i¡max_t, 
mpc_∫d_t
));

187 
__MPC_DECLSPEC
 
mpc_£t_uj_uj
 
__MPC_PROTO
 ((
mpc_±r
, 
uötmax_t
, uötmax_t, 
mpc_∫d_t
));

190 
__MPC_DECLSPEC
 
mpc_£t_«n
 
__MPC_PROTO
 ((
mpc_±r
));

192 
__MPC_DECLSPEC
 
mpc_ªÆ
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

193 
__MPC_DECLSPEC
 
mpc_imag
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

194 
__MPC_DECLSPEC
 
mpc_¨g
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

195 
__MPC_DECLSPEC
 
mpc_¥oj
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

196 
__MPC_DECLSPEC
 
mpc_cmp
 
__MPC_PROTO
 ((
mpc_§˝å
, mpc_srcptr));

197 
__MPC_DECLSPEC
 
mpc_cmp_si_si
 
__MPC_PROTO
 ((
mpc_§˝å
, , ));

198 
__MPC_DECLSPEC
 
mpc_exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

199 
__MPC_DECLSPEC
 
mpc_log
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

200 
__MPC_DECLSPEC
 
mpc_sö
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

201 
__MPC_DECLSPEC
 
mpc_cos
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

202 
__MPC_DECLSPEC
 
mpc_èn
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

203 
__MPC_DECLSPEC
 
mpc_söh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

204 
__MPC_DECLSPEC
 
mpc_cosh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

205 
__MPC_DECLSPEC
 
mpc_ènh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

206 
__MPC_DECLSPEC
 
mpc_asö
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

207 
__MPC_DECLSPEC
 
mpc_acos
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

208 
__MPC_DECLSPEC
 
mpc_©™
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

209 
__MPC_DECLSPEC
 
mpc_asöh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

210 
__MPC_DECLSPEC
 
mpc_acosh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

211 
__MPC_DECLSPEC
 
mpc_©™h
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

212 
__MPC_DECLSPEC
 
mpc_˛ór
 
__MPC_PROTO
 ((
mpc_±r
));

213 
__MPC_DECLSPEC
 
mpc_uøndom
 
__MPC_PROTO
 ((
mpc_±r
, 
gmp_ønd°©e_t
));

214 
__MPC_DECLSPEC
 
mpc_öô2
 
__MPC_PROTO
 ((
mpc_±r
, 
mp_¥ec_t
));

215 
__MPC_DECLSPEC
 
mpc_öô3
 
__MPC_PROTO
 ((
mpc_±r
, 
mp_¥ec_t
, mp_prec_t));

216 
__MPC_DECLSPEC
 
mp_¥ec_t
 
mpc_gë_¥ec
 
__MPC_PROTO
((
mpc_§˝å
 
x
));

217 
__MPC_DECLSPEC
 
mpc_gë_¥ec2
 
__MPC_PROTO
((
mp_¥ec_t
 *
¥
, mp_¥ec_à*
pi
, 
mpc_§˝å
 
x
));

218 
__MPC_DECLSPEC
 
mpc_£t_¥ec
 
__MPC_PROTO
 ((
mpc_±r
, 
mp_¥ec_t
));

219 
__MPC_DECLSPEC
 
__gmp_c⁄°
 * 
mpc_gë_vîsi⁄
 
__MPC_PROTO
 (());

221 
__MPC_DECLSPEC
 
mpc_°πoc
 
_MPFR_PROTO
 ((
mpc_±r
, c⁄° *, **, , 
mpc_∫d_t
));

222 
__MPC_DECLSPEC
 
mpc_£t_°r
 
_MPFR_PROTO
 ((
mpc_±r
, c⁄° *, , 
mpc_∫d_t
));

223 
__MPC_DECLSPEC
 * 
mpc_gë_°r
 
_MPFR_PROTO
 ((, 
size_t
, 
mpc_§˝å
, 
mpc_∫d_t
));

224 
__MPC_DECLSPEC
 
mpc_‰ì_°r
 
_MPFR_PROTO
 ((*));

225 #ifde‡
_MPC_H_HAVE_FILE


226 
__MPC_DECLSPEC
 
mpc_öp_°r
 
__MPC_PROTO
 ((
mpc_±r
, 
FILE
 *, 
size_t
 *, , 
mpc_∫d_t
));

227 
__MPC_DECLSPEC
 
size_t
 
mpc_out_°r
 
__MPC_PROTO
 ((
FILE
 *, , size_t, 
mpc_§˝å
, 
mpc_∫d_t
));

230 #i‡
deföed
 (
__˝lu•lus
)

234 
	#mpc_ªÆªf
(
x
Ë((x)->
ª
)

	)

235 
	#mpc_imagªf
(
x
Ë((x)->
im
)

	)

237 
	#mpc_add_si
(
x
, 
y
, 
z
, 
∫d
) \

238 –(
z
Ë>0 ? 
	`mpc_add_ui
 ((
x
), (
y
), (Ë(z), (
∫d
)Ë: 
	`mpc_sub_ui
 ((x), (y), (Ë(-(z)), (∫d)Ë)

	)

239 
	#mpc_cmp_si
(
x
, 
y
) \

240 –
	`mpc_cmp_si_si
 ((
x
), (
y
), 0lË)

	)

241 
	#mpc_ui_sub
(
x
, 
y
, 
z
, 
r
Ë
	`mpc_ui_ui_sub
 (x, y, 0ul, z,Ñ)

	)

249 #i‚de‡
mp‰_£t_‰


250 
	#mp‰_£t_‰
 
mp‰_£t


	)

252 
	#MPC_SET_X_Y
(
ªÆ_t
, 
imag_t
, 
z
, 
ªÆ_vÆue
, 
imag_vÆue
, 
∫d
) \

254 
_öex_ª
, 
_öex_im
; \

255 
_öex_ª
 = (
mp‰_£t_
 ## 
ªÆ_t
Ë(
	`mpc_ªÆªf
 (
z
), (
ªÆ_vÆue
), 
	`MPC_RND_RE
 (
∫d
)); \

256 
_öex_im
 = (
mp‰_£t_
 ## 
imag_t
Ë(
	`mpc_imagªf
 (
z
), (
imag_vÆue
), 
	`MPC_RND_IM
 (
∫d
)); \

257  
	`MPC_INEX
 (
_öex_ª
, 
_öex_im
); \

258 }

	)

	@src/abs.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_abs
 (
mp‰_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_∫d_t
 
∫d
)

28  
	`mp‰_hypŸ
 (
a
, 
	`MPC_RE
(
b
), 
	`MPC_IM
(b), 
∫d
);

29 
	}
}

	@src/acos.c

22 
	~<°dio.h
>

23 
	~"mpc-im∂.h
"

25 
£t_pi_ovî_2
 (
mp‰_±r
 
r›
, 
s
, 
mp‰_∫d_t
 
∫d
);

28 
	$mpc_acos
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

30 
öex_ª
, 
öex_im
, 
öex
;

31 
mp_¥ec_t
 
p_ª
, 
p_im
, 
p
;

32 
mpc_t
 
z1
;

33 
mp‰_t
 
pi_ovî_2
;

34 
mp_exp_t
 
e1
, 
e2
;

35 
mp_∫d_t
 
∫d_im
;

36 
mpc_∫d_t
 
∫d1
;

38 
öex_ª
 = 0;

39 
öex_im
 = 0;

42 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (op)))

44 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_öf_∞(
	`MPC_IM
 (op)))

46 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), 
	`mp‰_signbô
 (MPC_IM (
›
)) ? +1 : -1);

47 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

49 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

51 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), +1, 
	`MPC_RND_RE
 (
∫d
));

52 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

56 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

57 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

60  
	`MPC_INEX
 (
öex_ª
, 0);

63 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_öf_∞(
	`MPC_IM
 (op)))

65 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

67 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

69 i‡(
	`mp‰_sgn
 (
	`MPC_RE
 (
›
)) > 0)

71 
öex_ª
 =

72 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), +1, 
	`MPC_RND_RE
 (
∫d
));

73 
	`mp‰_div_2ui
 (
	`MPC_RE
 (
r›
), MPC_RE (r›), 1, 
GMP_RNDN
);

83 
mp‰_t
 
x
;

84 
mp_¥ec_t
 
¥ec
;

85 
ok
;

86 
	`mp‰_öô
 (
x
);

87 
¥ec
 = 
	`mp‰_gë_¥ec
 (
	`MPC_RE
 (
r›
));

88 
p
 = 
¥ec
;

92 
p
 +
	`mpc_˚û_log2
 (p);

93 
	`mp‰_£t_¥ec
 (
x
, 
p
);

94 
	`mp‰_c⁄°_pi
 (
x
, 
GMP_RNDD
);

95 
	`mp‰_mul_ui
 (
x
, x, 3, 
GMP_RNDD
);

96 
ok
 =

97 
	`mp‰_ˇn_round
 (
x
, 
p
 - 1, 
GMP_RNDD
, 
	`MPC_RND_RE
 (
∫d
),

98 
¥ec
+(
	`MPC_RND_RE
 (
∫d
Ë=
GMP_RNDN
));

100 } 
ok
 == 0);

101 
öex_ª
 =

102 
	`mp‰_div_2ui
 (
	`MPC_RE
 (
r›
), 
x
, 2, 
	`MPC_RND_RE
 (
∫d
));

103 
	`mp‰_˛ór
 (
x
);

108 i‡(
	`mp‰_sgn
 (
	`MPC_RE
 (
›
)) > 0)

109 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
GMP_RNDN
);

111 
öex_ª
 = 
	`mp‰_c⁄°_pi
 (
	`MPC_RE
 (
r›
), 
	`MPC_RND_RE
 (
∫d
));

115 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), +1, 
	`MPC_RND_RE
 (
∫d
));

117 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), 
	`mp‰_signbô
 (MPC_IM (
›
)) ? +1 : -1);

119  
	`MPC_INEX
 (
öex_ª
, 0);

123 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

125 
s_im
;

126 
s_im
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
›
));

128 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
 (
›
), 1) > 0)

130 i‡(
s_im
)

131 
öex_im
 = 
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
	`MPC_RE
 (
›
),

132 
	`MPC_RND_IM
 (
∫d
));

134 
öex_im
 = -
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
	`MPC_RE
 (
›
),

135 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

137 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
GMP_RNDN
);

139 i‡(
	`mp‰_cmp_si
 (
	`MPC_RE
 (
›
), -1) < 0)

141 
mp‰_t
 
möus_›_ª
;

142 
möus_›_ª
[0] = 
	`MPC_RE
 (
›
)[0];

143 
	`MPFR_CHANGE_SIGN
 (
möus_›_ª
);

145 i‡(
s_im
)

146 
öex_im
 = 
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
möus_›_ª
,

147 
	`MPC_RND_IM
 (
∫d
));

149 
öex_im
 = -
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
möus_›_ª
,

150 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

151 
öex_ª
 = 
	`mp‰_c⁄°_pi
 (
	`MPC_RE
 (
r›
), 
	`MPC_RND_RE
 (
∫d
));

155 
öex_ª
 = 
	`mp‰_acos
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

156 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
	`MPC_RND_IM
 (
∫d
));

159 i‡(!
s_im
)

160 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

162  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

166 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

168 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), +1, 
	`MPC_RND_RE
 (
∫d
));

169 
öex_im
 = -
	`mp‰_asöh
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
),

170 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

171 
	`mpc_c⁄j
 (
r›
,r›, 
MPC_RNDNN
);

173  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

177 
p_ª
 = 
	`mp‰_gë_¥ec
 (
	`MPC_RE
(
r›
));

178 
p_im
 = 
	`mp‰_gë_¥ec
 (
	`MPC_IM
(
r›
));

179 
p
 = 
p_ª
;

180 
	`mpc_öô3
 (
z1
, 
p
, 
p_im
);

182 
∫d_im
 = 
	`MPC_RND_IM
(
∫d
);

186 i‡(
∫d_im
 =
GMP_RNDZ
)

187 
∫d_im
 = 
	`mp‰_sgn
 (
	`MPC_IM
(
›
)Ë> 0 ? 
GMP_RNDD
 : 
GMP_RNDU
;

189 
∫d_im
 =Ñnd_im =
GMP_RNDU
 ? 
GMP_RNDD


190 : 
∫d_im
 =
GMP_RNDD
 ? 
GMP_RNDU


191 : 
∫d_im
;

192 
∫d1
 = 
	`RNDC
(
GMP_RNDN
, 
∫d_im
);

193 
	`mp‰_öô2
 (
pi_ovî_2
, 
p
);

196 
p
 +
	`mpc_˚û_log2
 (p) + 3;

198 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
z1
), 
p
);

199 
	`mp‰_£t_¥ec
 (
pi_ovî_2
, 
p
);

201 
	`mp‰_c⁄°_pi
 (
pi_ovî_2
, 
GMP_RNDN
);

202 
	`mp‰_div_2exp
 (
pi_ovî_2
,Öi_ovî_2, 1, 
GMP_RNDN
);

203 
e1
 = 1;

204 
öex
 = 
	`mpc_asö
 (
z1
, 
›
, 
∫d1
);

205 
	`MPC_ASSERT
 (
	`mp‰_sgn
 (
	`MPC_IM
(
z1
)Ë* mp‰_sg¿(MPC_IM(
›
)) > 0);

206 
öex_im
 = 
	`MPC_INEX_IM
(
öex
);

207 
e2
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

208 
	`mp‰_sub
 (
	`MPC_RE
(
z1
), 
pi_ovî_2
, MPC_RE(z1), 
GMP_RNDN
);

211 
e1
 =É1 >
e2
 ?É1 + 1 :É2 + 1;

213 
e1
 -
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

215 
e1
 =É1 <= 0 ? 0 :É1;

217 
	`mp‰_√g
 (
	`MPC_IM
(
z1
), MPC_IM(z1), 
GMP_RNDN
);

218 
öex_im
 = -inex_im;

219 i‡(
	`mp‰_ˇn_round
 (
	`MPC_RE
(
z1
), 
p
 - 
e1
, 
GMP_RNDN
, 
GMP_RNDZ
,

220 
p_ª
 + (
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
)))

223 
öex
 = 
	`mpc_£t
 (
r›
, 
z1
, 
∫d
);

224 
öex_ª
 = 
	`MPC_INEX_RE
(
öex
);

225 
	`mpc_˛ór
 (
z1
);

226 
	`mp‰_˛ór
 (
pi_ovî_2
);

228  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

229 
	}
}

	@src/acosh.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_acosh
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

33 
mpc_t
 
a
;

34 
mp‰_t
 
tmp
;

35 
öex
;

37 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)Ë&& 
	`mp‰_«n_p
 (
	`MPC_IM
 (op)))

39 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

40 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

45 
	`mpc_öô3
 (
a
, 
	`MPC_PREC_IM
(
r›
), 
	`MPC_PREC_RE
(rop));

47 i‡(
	`mp‰_signbô
 (
	`MPC_IM
 (
›
)))

49 
öex
 = 
	`mpc_acos
 (
a
, 
›
,

50 
	`RNDC
 (
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)), 
	`MPC_RND_RE
 (rnd)));

53 
tmp
[0] = 
	`MPC_RE
 (
a
)[0];

54 
	`MPC_RE
 (
a
)[0] = 
	`MPC_IM
 (a)[0];

55 
	`MPC_IM
 (
a
)[0] = 
tmp
[0];

56 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
a
));

57 
öex
 = 
	`MPC_INEX
 (
	`MPC_INEX_IM
 (öex), -
	`MPC_INEX_RE
 (inex));

61 
öex
 = 
	`mpc_acos
 (
a
, 
›
,

62 
	`RNDC
 (
	`MPC_RND_IM
 (
∫d
), 
	`INV_RND
(
	`MPC_RND_RE
 (rnd))));

65 
tmp
[0] = 
	`MPC_RE
 (
a
)[0];

66 
	`MPC_RE
 (
a
)[0] = 
	`MPC_IM
 (a)[0];

67 
	`MPC_IM
 (
a
)[0] = 
tmp
[0];

68 
	`MPFR_CHANGE_SIGN
 (
	`MPC_RE
 (
a
));

69 
öex
 = 
	`MPC_INEX
 (-
	`MPC_INEX_IM
 (öex), 
	`MPC_INEX_RE
 (inex));

72 
	`mpc_£t
 (
r›
, 
a
, 
∫d
);

74 
	`mpc_˛ór
 (
a
);

76  
öex
;

77 
	}
}

	@src/add.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_add
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, mpc_§˝å 
c
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

30 
öex_ª
 = 
	`mp‰_add
 (
	`MPC_RE
(
a
), MPC_RE(
b
), MPC_RE(
c
), 
	`MPC_RND_RE
(
∫d
));

31 
öex_im
 = 
	`mp‰_add
 (
	`MPC_IM
(
a
), MPC_IM(
b
), MPC_IM(
c
), 
	`MPC_RND_IM
(
∫d
));

33  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

34 
	}
}

	@src/add_fr.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_add_‰
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

30 
öex_ª
 = 
	`mp‰_add
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

31 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

33  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

34 
	}
}

	@src/add_ui.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_add_ui
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

30 
öex_ª
 = 
	`mp‰_add_ui
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

31 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

33  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

34 
	}
}

	@src/arg.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_¨g
 (
mp‰_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_∫d_t
 
∫d
)

27  
	`mp‰_©™2
 (
a
, 
	`MPC_IM
 (
b
), 
	`MPC_RE
 (b), 
∫d
);

28 
	}
}

	@src/asin.c

22 
	~"mpc-im∂.h
"

24 
£t_pi_ovî_2
 (
mp‰_±r
 
r›
, 
s
, 
mp‰_∫d_t
 
∫d
);

27 
	$mpc_asö
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

29 
mp_¥ec_t
 
p
, 
p_ª
, 
p_im
;

30 
mp_∫d_t
 
∫d_ª
, 
∫d_im
;

31 
mpc_t
 
z1
;

32 
öex
;

35 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (op)))

37 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_öf_∞(
	`MPC_IM
 (op)))

39 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

40 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), 
	`mp‰_signbô
 (MPC_IM (
›
)) ? -1 : +1);

42 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

44 
	`mp‰_£t
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
GMP_RNDN
);

45 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

49 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

50 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

56 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_öf_∞(
	`MPC_IM
 (op)))

58 
öex_ª
;

59 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

61 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), -
	`mp‰_signbô
 (MPC_RE (
›
)),

62 
	`MPC_RND_RE
 (
∫d
));

63 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), -
	`mp‰_signbô
 (MPC_IM (
›
)));

65 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

66 
	`mp‰_div_2ui
 (
	`MPC_RE
 (
r›
), MPC_RE (r›), 1, 
GMP_RNDN
);

70 
s
;

71 
s
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
));

72 
öex_ª
 = 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
GMP_RNDN
);

73 i‡(
s
)

74 
	`mp‰_√g
 (
	`MPC_RE
 (
r›
), MPC_RE (r›), 
GMP_RNDN
);

75 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), -
	`mp‰_signbô
 (MPC_IM (
›
)));

78  
	`MPC_INEX
 (
öex_ª
, 0);

82 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

84 
öex_ª
;

85 
öex_im
;

86 
s_im
;

87 
s_im
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
›
));

89 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
 (
›
), 1) > 0)

91 i‡(
s_im
)

92 
öex_im
 = -
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
	`MPC_RE
 (
›
),

93 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

95 
öex_im
 = 
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
	`MPC_RE
 (
›
),

96 
	`MPC_RND_IM
 (
∫d
));

97 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), -
	`mp‰_signbô
 (MPC_RE (
›
)),

98 
	`MPC_RND_RE
 (
∫d
));

99 i‡(
s_im
)

100 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

102 i‡(
	`mp‰_cmp_si
 (
	`MPC_RE
 (
›
), -1) < 0)

104 
mp‰_t
 
möus_›_ª
;

105 
möus_›_ª
[0] = 
	`MPC_RE
 (
›
)[0];

106 
	`MPFR_CHANGE_SIGN
 (
möus_›_ª
);

108 i‡(
s_im
)

109 
öex_im
 = -
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
möus_›_ª
,

110 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

112 
öex_im
 = 
	`mp‰_acosh
 (
	`MPC_IM
 (
r›
), 
möus_›_ª
,

113 
	`MPC_RND_IM
 (
∫d
));

114 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), -
	`mp‰_signbô
 (MPC_RE (
›
)),

115 
	`MPC_RND_RE
 (
∫d
));

116 i‡(
s_im
)

117 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

121 
öex_im
 = 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
	`MPC_RND_IM
 (
∫d
));

122 i‡(
s_im
)

123 
	`mp‰_√g
 (
	`MPC_IM
 (
r›
), MPC_IM (r›), 
GMP_RNDN
);

124 
öex_ª
 = 
	`mp‰_asö
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

127  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

131 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

133 
öex_im
;

134 
s
;

135 
s
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
));

136 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
GMP_RNDN
);

137 i‡(
s
)

138 
	`mp‰_√g
 (
	`MPC_RE
 (
r›
), MPC_RE (r›), 
GMP_RNDN
);

139 
öex_im
 = 
	`mp‰_asöh
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

141  
	`MPC_INEX
 (0, 
öex_im
);

145 
p_ª
 = 
	`mp‰_gë_¥ec
 (
	`MPC_RE
(
r›
));

146 
p_im
 = 
	`mp‰_gë_¥ec
 (
	`MPC_IM
(
r›
));

147 
∫d_ª
 = 
	`MPC_RND_RE
(
∫d
);

148 
∫d_im
 = 
	`MPC_RND_IM
(
∫d
);

149 
p
 = 
p_ª
 >
p_im
 ?Ö_re :Ö_im;

150 
	`mpc_öô2
 (
z1
, 
p
);

153 
mp_exp_t
 
ex
, 
ey
, 
îr
;

154 
p
 +
	`mpc_˚û_log2
 (p) + 3;

155 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
z1
), 
p
);

156 
	`mp‰_£t_¥ec
 (
	`MPC_IM
(
z1
), 
p
);

159 
	`mpc_sqr
 (
z1
, 
›
, 
MPC_RNDNN
);

162 
ex
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

163 
	`mp‰_ui_sub
 (
	`MPC_RE
(
z1
), 1, MPC_RE(z1), 
GMP_RNDN
);

164 
	`mp‰_√g
 (
	`MPC_IM
(
z1
), MPC_IM(z1), 
GMP_RNDN
);

165 
ex
 =Éx - 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

166 
ex
 = (ex <= 0) ? 0 :Éx;

168 
ex
 =Éx + 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë- 
p
;

170 
ey
 = 
	`mp‰_gë_exp
 (
	`MPC_IM
(
z1
)Ë- 
p
 - 1;

172 
ex
 = (ex >
ey
) ?Éx :Éy;

175 
ey
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë>mp‰_gë_ex∞(
	`MPC_IM
(z1))

176 ? 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë: mp‰_gë_ex∞(
	`MPC_IM
(z1));

178 
	`mpc_sqπ
 (
z1
, z1, 
MPC_RNDNN
);

179 
ex
 = (2 *Éx + 1Ë- 2 - (
ey
 - 1);

180 
ex
 = (ex + 1) / 2;

182 
ey
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë<mp‰_gë_ex∞(
	`MPC_IM
(z1))

183 ? 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë: mp‰_gë_ex∞(
	`MPC_IM
(z1));

184 
ex
 =Éx - 
ey
 + 
p
;

186 
îr
 = (
ex
 <= 0) ? 1 :Éx + 1;

189 
ex
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

190 
ey
 = 
	`mp‰_gë_exp
 (
	`MPC_IM
(
z1
));

191 
	`mp‰_sub
 (
	`MPC_RE
(
z1
), MPC_RE(z1), 
	`MPC_IM
(
›
), 
GMP_RNDN
);

192 
	`mp‰_add
 (
	`MPC_IM
(
z1
), MPC_IM(z1), 
	`MPC_RE
(
›
), 
GMP_RNDN
);

193 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z1
), 0Ë=0 || mp‰_cmp_uò(
	`MPC_IM
(z1), 0) == 0)

195 
ex
 -
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

196 
ey
 -
	`mp‰_gë_exp
 (
	`MPC_IM
(
z1
));

197 
ex
 = (ex >
ey
) ?Éx :Éy;

198 
îr
 +
ex
;

199 
îr
 = (err <= 0) ? 1 :Érr + 1;

202 
ex
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
));

203 
ey
 = 
	`mp‰_gë_exp
 (
	`MPC_IM
(
z1
));

204 
ex
 = (ex >
ey
) ?Éx :Éy;

205 
îr
 +
ex
 - 
p
;

206 
	`mpc_log
 (
z1
, z1, 
GMP_RNDN
);

207 
îr
 -
ex
 - 1;

209 
ey
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë<mp‰_gë_ex∞(
	`MPC_IM
(z1))

210 ? 
	`mp‰_gë_exp
 (
	`MPC_RE
(
z1
)Ë: mp‰_gë_ex∞(
	`MPC_IM
(z1));

211 
îr
 =Éº - 
ey
 + 
p
;

213 
îr
 = (err <= 0) ? 1 :Érr + 1;

215 
	`mp‰_sw≠
 (
	`MPC_RE
(
z1
), 
	`MPC_IM
(z1));

216 
	`mp‰_√g
 (
	`MPC_IM
(
z1
), MPC_IM(z1), 
GMP_RNDN
);

217 i‡(
	`mp‰_ˇn_round
 (
	`MPC_RE
(
z1
), 
p
 - 
îr
, 
GMP_RNDN
, 
GMP_RNDZ
,

218 
p_ª
 + (
∫d_ª
 =
GMP_RNDN
)) &&

219 
	`mp‰_ˇn_round
 (
	`MPC_IM
(
z1
), 
p
 - 
îr
, 
GMP_RNDN
, 
GMP_RNDZ
,

220 
p_im
 + (
∫d_im
 =
GMP_RNDN
)))

224 
öex
 = 
	`mpc_£t
 (
r›
, 
z1
, 
∫d
);

225 
	`mpc_˛ór
 (
z1
);

227  
öex
;

228 
	}
}

	@src/asinh.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_asöh
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

28 
öex
;

29 
mpc_t
 
z
, 
a
;

30 
mp‰_t
 
tmp
;

33 
	`MPC_RE
 (
z
)[0] = 
	`MPC_IM
 (
›
)[0];

34 
	`MPC_IM
 (
z
)[0] = 
	`MPC_RE
 (
›
)[0];

35 
	`MPFR_CHANGE_SIGN
 (
	`MPC_RE
 (
z
));

38 
	`mpc_öô3
 (
a
, 
	`MPC_PREC_IM
(
r›
), 
	`MPC_PREC_RE
(rop));

40 
öex
 = 
	`mpc_asö
 (
a
, 
z
,

41 
	`RNDC
 (
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)), 
	`MPC_RND_RE
 (rnd)));

46 
tmp
[0] = 
	`MPC_RE
 (
a
)[0];

47 
	`MPC_RE
 (
a
)[0] = 
	`MPC_IM
 (a)[0];

48 
	`MPC_IM
 (
a
)[0] = 
tmp
[0];

49 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
a
));

51 
	`mpc_£t
 (
r›
, 
a
, 
MPC_RNDNN
);

53 
	`mpc_˛ór
 (
a
);

55  
	`MPC_INEX
 (
	`MPC_INEX_IM
 (
öex
), -
	`MPC_INEX_RE
 (inex));

56 
	}
}

	@src/atan.c

22 
	~"mpc-im∂.h
"

30 
	$£t_pi_ovî_2
 (
mp‰_±r
 
r›
, 
s
, 
mp‰_∫d_t
 
∫d
)

32 
öex
;

34 
öex
 = 
	`mp‰_c⁄°_pi
 (
r›
, 
s
 < 0 ? 
	`INV_RND
 (
∫d
) :Ñnd);

35 
	`mp‰_div_2ui
 (
r›
,Ñ›, 1, 
GMP_RNDN
);

36 i‡(
s
 < 0)

38 
öex
 = -inex;

39 
	`mp‰_√g
 (
r›
,Ñ›, 
GMP_RNDN
);

42  
öex
;

43 
	}
}

46 
	$mpc_©™
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

48 
s_ª
;

49 
s_im
;

50 
öex_ª
;

51 
öex_im
;

52 
öex
;

54 
öex_ª
 = 0;

55 
öex_im
 = 0;

56 
s_ª
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
));

57 
s_im
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
›
));

60 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (op)))

62 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)))

64 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

65 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)Ë|| 
	`mp‰_öf_p
 (MPC_IM (op)))

67 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
GMP_RNDN
);

68 i‡(
s_im
)

69 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

72 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

76 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

78 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), -
s_ª
, 
	`MPC_RND_RE
 (
∫d
));

79 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
GMP_RNDN
);

83 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

84 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

87  
	`MPC_INEX
 (
öex_ª
, 0);

90 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_öf_∞(
	`MPC_IM
 (op)))

92 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), -
s_ª
, 
	`MPC_RND_RE
 (
∫d
));

94 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
GMP_RNDN
);

95 i‡(
s_im
)

96 
	`mpc_c⁄j
 (
r›
,Ñ›, 
GMP_RNDN
);

98  
	`MPC_INEX
 (
öex_ª
, 0);

102 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

104 
öex_ª
 = 
	`mp‰_©™
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

106 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
GMP_RNDN
);

107 i‡(
s_im
)

108 
	`mpc_c⁄j
 (
r›
,Ñ›, 
GMP_RNDN
);

110  
	`MPC_INEX
 (
öex_ª
, 0);

114 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

116 
cmp_1
;

118 i‡(
s_im
)

119 
cmp_1
 = -
	`mp‰_cmp_si
 (
	`MPC_IM
 (
›
), -1);

121 
cmp_1
 = 
	`mp‰_cmp_ui
 (
	`MPC_IM
 (
›
), +1);

123 i‡(
cmp_1
 < 0)

128 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
GMP_RNDN
);

129 i‡(
s_ª
)

130 
	`mp‰_√g
 (
	`MPC_RE
 (
r›
), MPC_RE (r›), 
GMP_RNDN
);

132 
öex_im
 = 
	`mp‰_©™h
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

134 i‡(
cmp_1
 == 0)

138 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

139 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), 
s_im
 ? -1 : +1);

145 
mp_∫d_t
 
∫d_im
, 
∫d_away
;

146 
mp‰_t
 
y
;

147 
mp_¥ec_t
 
p
, 
p_im
;

148 
ok
;

150 
∫d_im
 = 
	`MPC_RND_IM
 (
∫d
);

151 
	`mp‰_öô
 (
y
);

152 
p_im
 = 
	`mp‰_gë_¥ec
 (
	`MPC_IM
 (
r›
));

153 
p
 = 
p_im
;

165 
p
 +
	`mpc_˚û_log2
 (p) + 2;

166 
	`mp‰_£t_¥ec
 (
y
, 
p
);

167 
∫d_away
 = 
s_im
 =0 ? 
GMP_RNDU
 : 
GMP_RNDD
;

168 
öex_im
 = 
	`mp‰_ui_div
 (
y
, 1, 
	`MPC_IM
 (
›
), 
∫d_away
);

176 
öex_im
 |
	`mp‰_©™h
 (
y
, y, 
∫d_away
);

178 
ok
 = 
öex_im
 == 0

179 || 
	`mp‰_ˇn_round
 (
y
, 
p
 - 2, 
∫d_away
, 
GMP_RNDZ
,

180 
p_im
 + (
∫d_im
 =
GMP_RNDN
));

181 } 
ok
 == 0);

183 
öex_ª
 = 
	`£t_pi_ovî_2
 (
	`MPC_RE
 (
r›
), -
s_ª
, 
	`MPC_RND_RE
 (
∫d
));

184 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), 
y
, 
∫d_im
);

185 
	`mp‰_˛ór
 (
y
);

187  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

192 
mp‰_t
 
a
, 
b
, 
x
, 
y
;

193 
mp_¥ec_t
 
¥ec
, 
p
;

194 
mp_exp_t
 
îr
, 
expo
;

195 
ok
 = 0;

196 
mp‰_t
 
möus_›_ª
;

197 
mp_exp_t
 
›_ª_exp
;

198 
mp_exp_t
 
›_im_exp
;

199 
mp_∫d_t
 
∫d1
, 
∫d2
;

201 
	`mp‰_öôs
 (
a
, 
b
, 
x
, 
y
, (
mp‰_±r
) 0);

204 
möus_›_ª
[0] = 
	`MPC_RE
 (
›
)[0];

205 
	`MPFR_CHANGE_SIGN
 (
möus_›_ª
);

206 
›_ª_exp
 = 
	`MPFR_EXP
 (
	`MPC_RE
 (
›
));

207 
›_im_exp
 = 
	`MPFR_EXP
 (
	`MPC_IM
 (
›
));

209 
¥ec
 = 
	`mp‰_gë_¥ec
 (
	`MPC_RE
 (
r›
));

228 
p
 = (
›_im_exp
 > 0 || 
¥ec
 > 
	`SAFE_ABS
 (
mp_¥ec_t
, op_im_exp)) ?Örec

229 : (
¥ec
 - 
›_im_exp
);

230 
∫d1
 = 
	`mp‰_sgn
 (
	`MPC_RE
 (
›
)Ë> 0 ? 
GMP_RNDD
 : 
GMP_RNDU
;

231 
∫d2
 = 
	`mp‰_sgn
 (
	`MPC_RE
 (
›
)Ë< 0 ? 
GMP_RNDU
 : 
GMP_RNDD
;

235 
p
 +
	`mpc_˚û_log2
 (p) + 2;

236 
	`mp‰_£t_¥ec
 (
a
, 
p
);

237 
	`mp‰_£t_¥ec
 (
b
, 
p
);

238 
	`mp‰_£t_¥ec
 (
x
, 
p
);

243 
	`mp‰_ui_sub
 (
a
, 1, 
	`MPC_IM
 (
›
), 
∫d1
);

244 i‡(
	`mp‰_sgn
 (
a
) == 0)

247 i‡(
	`mp‰_cmp_ui
 (
	`MPC_IM
(
›
), 1) != 0)

249 
îr
 = 2;

252 
îr
 = 
	`MPFR_EXP
 (
a
);

253 
	`mp‰_©™2
 (
x
, 
	`MPC_RE
 (
›
), 
a
, 
GMP_RNDU
);

257 
	`mp‰_add_ui
 (
a
, 
	`MPC_IM
(
›
), 1, 
∫d2
);

261 i‡(
	`mp‰_sgn
 (
a
) == 0)

263 i‡(
	`mp‰_cmp_si
 (
	`MPC_IM
(
›
), -1) != 0)

265 
expo
 = 
îr
;

268 
expo
 = 
	`MPFR_EXP
 (
a
);

269 
	`mp‰_©™2
 (
b
, 
möus_›_ª
, 
a
, 
GMP_RNDD
);

271 
îr
 =Éº < 
expo
 ?Érr :Éxpo;

272 
	`mp‰_sub
 (
x
, x, 
b
, 
GMP_RNDU
);

274 
îr
 = 5 + 
›_ª_exp
 -Éº - 
	`MPFR_EXP
 (
x
);

276 
îr
 =Érr < 0 ? 1 :Érr + 1;

278 
	`mp‰_div_2ui
 (
x
, x, 1, 
GMP_RNDU
);

282 
ok
 = 
	`mp‰_ˇn_round
 (
x
, 
p
 - 
îr
, 
GMP_RNDU
, 
GMP_RNDD
,

283 
¥ec
 + (
	`MPC_RND_RE
 (
∫d
Ë=
GMP_RNDN
));

284 } 
ok
 == 0);

288 
¥ec
 = 
	`mp‰_gë_¥ec
 (
	`MPC_IM
 (
r›
));

307 
îr
 = 2;

308 
p
 = 
¥ec
;

309 
∫d1
 = 
	`mp‰_cmp_si
 (
	`MPC_IM
 (
›
), -1Ë> 0 ? 
GMP_RNDU
 : 
GMP_RNDD
;

313 
p
 +
	`mpc_˚û_log2
 (pË+ 
îr
;

314 
	`mp‰_£t_¥ec
 (
a
, 
p
);

315 
	`mp‰_£t_¥ec
 (
b
, 
p
);

316 
	`mp‰_£t_¥ec
 (
y
, 
p
);

319 
	`mp‰_add_ui
 (
a
, 
	`MPC_IM
 (
›
), 1, 
∫d1
);

320 
	`mp‰_sqr
 (
a
,á, 
GMP_RNDU
);

321 
	`mp‰_sqr
 (
y
, 
	`MPC_RE
 (
›
), 
GMP_RNDU
);

322 
	`mp‰_add
 (
a
,á, 
y
, 
GMP_RNDU
);

323 
	`mp‰_log
 (
a
,á, 
GMP_RNDU
);

326 
	`mp‰_ui_sub
 (
b
, 1, 
	`MPC_IM
 (
›
), 
GMP_RNDZ
);

327 
	`mp‰_sqr
 (
b
, b, 
GMP_RNDU
);

329 
	`mp‰_√xtbñow
 (
y
);

330 
	`mp‰_add
 (
b
, b, 
y
, 
GMP_RNDZ
);

331 
	`mp‰_log
 (
b
, b, 
GMP_RNDZ
);

333 
	`mp‰_sub
 (
y
, 
a
, 
b
, 
GMP_RNDU
);

335 
expo
 = 
	`MPFR_EXP
 (
a
Ë< MPFR_EXP (
b
) ? MPFR_EXP (b) : MPFR_EXP (a);

336 
expo
 =Éxpÿ- 
	`MPFR_EXP
 (
y
) + 1;

337 
îr
 = 3 - 
	`MPFR_EXP
 (
y
);

339 i‡(
expo
 <
îr
)

340 
îr
 = (err < 0) ? 1 :Érr + 2;

342 
îr
 = (
expo
 < 0) ? 1 :Éxpo + 2;

344 
	`mp‰_div_2ui
 (
y
, y, 2, 
GMP_RNDN
);

345 i‡(
	`mp‰_zîo_p
 (
y
))

346 
îr
 = 2;

348 
ok
 = 
	`mp‰_ˇn_round
 (
y
, 
p
 - 
îr
, 
GMP_RNDU
, 
GMP_RNDD
,

349 
¥ec
 + (
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDN
));

350 } 
ok
 == 0);

352 
öex
 = 
	`mpc_£t_‰_‰
 (
r›
, 
x
, 
y
, 
∫d
);

354 
	`mp‰_˛órs
 (
a
, 
b
, 
x
, 
y
, (
mp‰_±r
) 0);

355  
öex
;

357 
	}
}

	@src/atanh.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_©™h
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

28 
öex
;

29 
mp‰_t
 
tmp
;

30 
mpc_t
 
z
, 
a
;

32 
	`MPC_RE
 (
z
)[0] = 
	`MPC_IM
 (
›
)[0];

33 
	`MPC_IM
 (
z
)[0] = 
	`MPC_RE
 (
›
)[0];

34 
	`MPFR_CHANGE_SIGN
 (
	`MPC_RE
 (
z
));

37 
	`mpc_öô3
 (
a
, 
	`MPC_PREC_IM
(
r›
), 
	`MPC_PREC_RE
(rop));

39 
öex
 = 
	`mpc_©™
 (
a
, 
z
,

40 
	`RNDC
 (
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)), 
	`MPC_RND_RE
 (rnd)));

43 
tmp
[0] = 
	`MPC_RE
 (
a
)[0];

44 
	`MPC_RE
 (
a
)[0] = 
	`MPC_IM
 (a)[0];

45 
	`MPC_IM
 (
a
)[0] = 
tmp
[0];

46 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
a
));

48 
	`mpc_£t
 (
r›
, 
a
, 
∫d
);

50 
	`mpc_˛ór
 (
a
);

52  
	`MPC_INEX
 (
	`MPC_INEX_IM
 (
öex
), -
	`MPC_INEX_RE
 (inex));

53 
	}
}

	@src/clear.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_˛ór
 (
mpc_t
 
x
)

27 
	`mp‰_˛ór
 (
	`MPC_RE
(
x
));

28 
	`mp‰_˛ór
 (
	`MPC_IM
(
x
));

29 
	}
}

	@src/cmp.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_cmp
 (
mpc_§˝å
 
a
, mpc_§˝å 
b
)

28 
cmp_ª
, 
cmp_im
;

30 
cmp_ª
 = 
	`mp‰_cmp
 (
	`MPC_RE
(
a
), MPC_RE(
b
));

31 
cmp_im
 = 
	`mp‰_cmp
 (
	`MPC_IM
(
a
), MPC_IM(
b
));

33  
	`MPC_INEX
(
cmp_ª
, 
cmp_im
);

34 
	}
}

	@src/cmp_si_si.c

23 
	~"mpc-im∂.h
"

27 
	$mpc_cmp_si_si
 (
mpc_§˝å
 
a
, 
b
, 
c
)

29 
cmp_ª
, 
cmp_im
;

31 
cmp_ª
 = 
	`mp‰_cmp_si
 (
	`MPC_RE
(
a
), 
b
);

32 
cmp_im
 = 
	`mp‰_cmp_si
 (
	`MPC_IM
(
a
), 
c
);

34  
	`MPC_INEX
(
cmp_ª
, 
cmp_im
);

35 
	}
}

	@src/conj.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_c⁄j
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_√g
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/cos.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_cos
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

27 
mp‰_t
 
x
, 
y
, 
z
;

28 
mp_¥ec_t
 
¥ec
;

29 
ok
 = 0;

30 
öex_ª
, 
öex_im
;

33 i‡(!
	`mp‰_numbî_p
 (
	`MPC_RE
 (
›
)Ë|| !mp‰_numbî_∞(
	`MPC_IM
 (op)))

35 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)))

43 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

44 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

46 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

48 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

49 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

51 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

53 i‡(
	`mp‰_«n_p
 (
	`MPC_IM
 (
›
)))

60 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

61 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), 
	`MPC_RE
 (
›
), 
	`MPC_RND_IM
 (
∫d
));

63 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

65 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

67 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

77 c⁄° 
ßme_sign
 =

78 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)Ë=mp‰_signbô (
	`MPC_IM
 (op));

80 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

81 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), (
ßme_sign
 ? -1 : +1));

83 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

85 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

86 
	`mp‰_£tsign
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
ßme_sign
,

87 
	`MPC_RND_IM
(
∫d
));

89 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

91 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

95 c⁄° 
ßme_sign
 =

96 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)Ë=mp‰_signbô (
	`MPC_IM
 (op));

98 
	`mp‰_£tsign
 (
	`MPC_IM
 (
r›
), 
	`MPC_RE
 (
›
), 
ßme_sign
,

99 
	`MPC_RND_IM
 (
∫d
));

100 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

106 
mp‰_t
 
c
;

107 
mp‰_t
 
s
;

109 
	`mp‰_öô
 (
c
);

110 
	`mp‰_öô
 (
s
);

112 
	`mp‰_sö_cos
 (
s
, 
c
, 
	`MPC_RE
 (
›
), 
GMP_RNDN
);

113 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), 
	`mp‰_sgn
 (
c
));

114 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
),

115 (
	`mp‰_sgn
 (
	`MPC_IM
 (
›
)Ë=mp‰_sg¿(
s
) ? -1 : +1));

117 
	`mp‰_˛ór
 (
s
);

118 
	`mp‰_˛ór
 (
c
);

121  
	`MPC_INEX
 (0, 0);

124 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

131 c⁄° 
imag_sign
 =

132 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)Ë=mp‰_signbô (
	`MPC_IM
 (op));

134 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

135 
öex_ª
 = 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 1, 
	`MPC_RND_RE
 (
∫d
));

137 
öex_ª
 = 
	`mp‰_cosh
 (
	`MPC_RE
 (
r›
), 
	`MPC_IM
 (
›
), 
	`MPC_RND_RE
 (
∫d
));

139 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0, 
	`MPC_RND_IM
 (
∫d
));

140 
	`mp‰_£tsign
 (
	`MPC_IM
 (
r›
), MPC_IM (r›), 
imag_sign
, 
	`MPC_RND_IM
 (
∫d
));

142  
	`MPC_INEX
 (
öex_ª
, 0);

145 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

149 
mp‰_t
 
sign
;

150 
	`mp‰_öô2
 (
sign
, 2);

151 
	`mp‰_sö
 (
sign
, 
	`MPC_RE
 (
›
), 
GMP_RNDN
);

152 i‡(!
	`mp‰_signbô
 (
	`MPC_IM
 (
›
)))

153 
	`MPFR_CHANGE_SIGN
 (
sign
);

155 
öex_ª
 = 
	`mp‰_cos
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

157 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0ul, 
GMP_RNDN
);

158 i‡(
	`mp‰_signbô
 (
sign
))

159 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
r›
));

161 
	`mp‰_˛ór
 (
sign
);

163  
	`MPC_INEX
 (
öex_ª
, 0);

182 
¥ec
 = 
	`MPC_MAX_PREC
(
r›
);

184 
	`mp‰_öô2
 (
x
, 2);

185 
	`mp‰_öô2
 (
y
, 2);

186 
	`mp‰_öô2
 (
z
, 2);

190 
¥ec
 +
	`mpc_˚û_log2
 (prec) + 5;

192 
	`mp‰_£t_¥ec
 (
x
, 
¥ec
);

193 
	`mp‰_£t_¥ec
 (
y
, 
¥ec
);

194 
	`mp‰_£t_¥ec
 (
z
, 
¥ec
);

196 
	`mp‰_sö_cos
 (
y
, 
x
, 
	`MPC_RE
(
›
), 
GMP_RNDN
);

197 
	`mp‰_cosh
 (
z
, 
	`MPC_IM
(
›
), 
GMP_RNDN
);

198 
	`mp‰_mul
 (
x
, x, 
z
, 
GMP_RNDN
);

199 
ok
 = 
	`mp‰_ˇn_round
 (
x
, 
¥ec
 - 2, 
GMP_RNDN
, 
GMP_RNDZ
,

200 
	`MPFR_PREC
(
	`MPC_RE
(
r›
)Ë+ (
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
));

201 i‡(
ok
)

203 
	`mp‰_söh
 (
z
, 
	`MPC_IM
(
›
), 
GMP_RNDN
);

204 
	`mp‰_mul
 (
y
, y, 
z
, 
GMP_RNDN
);

205 
	`mp‰_√g
 (
y
, y, 
GMP_RNDN
);

206 
ok
 = 
	`mp‰_ˇn_round
 (
y
, 
¥ec
 - 2, 
GMP_RNDN
, 
GMP_RNDZ
,

207 
	`MPFR_PREC
(
	`MPC_IM
(
r›
)Ë+ (
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDN
));

210 
ok
 == 0);

212 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
(
r›
), 
x
, 
	`MPC_RND_RE
(
∫d
));

213 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
r›
), 
y
, 
	`MPC_RND_IM
(
∫d
));

215 
	`mp‰_˛ór
 (
x
);

216 
	`mp‰_˛ór
 (
y
);

217 
	`mp‰_˛ór
 (
z
);

219  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

220 
	}
}

	@src/cosh.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_cosh
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

28 
mpc_t
 
z
;

31 
	`MPC_RE
 (
z
)[0] = 
	`MPC_IM
 (
›
)[0];

32 
	`MPC_IM
 (
z
)[0] = 
	`MPC_RE
 (
›
)[0];

33 
	`MPFR_CHANGE_SIGN
 (
	`MPC_RE
 (
z
));

35  
	`mpc_cos
 (
r›
, 
z
, 
∫d
);

36 
	}
}

	@src/div.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_div_zîo
 (
mpc_±r
 
a
, 
mpc_§˝å
 
z
, mpc_§˝å 
w
, 
mpc_∫d_t
 
∫d
)

28 
sign
 = 
	`MPFR_SIGNBIT
 (
	`MPC_RE
 (
w
));

29 
mp‰_t
 
ö·y
;

30 
	`mp‰_£t_öf
 (
ö·y
, 
sign
);

31 
	`mp‰_mul
 (
	`MPC_RE
 (
a
), 
ö·y
, MPC_RE (
z
), 
	`MPC_RND_RE
 (
∫d
));

32 
	`mp‰_mul
 (
	`MPC_IM
 (
a
), 
ö·y
, MPC_IM (
z
), 
	`MPC_RND_IM
 (
∫d
));

33  
	`MPC_INEX
 (0, 0);

34 
	}
}

37 
	$mpc_div_öf_fö
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
z
, mpc_§˝å 
w
)

41 
a
, 
b
, 
x
, 
y
;

43 
a
 = (
	`mp‰_öf_p
 (
	`MPC_RE
 (
z
)Ë? 
	`MPFR_SIGNBIT
 (MPC_RE (z)) : 0);

44 
b
 = (
	`mp‰_öf_p
 (
	`MPC_IM
 (
z
)Ë? 
	`MPFR_SIGNBIT
 (MPC_IM (z)) : 0);

48 i‡(
a
 =0 || 
b
 == 0) {

49 
x
 = 
a
 * 
	`MPC_MPFR_SIGN
 (
	`MPC_RE
 (
w
)Ë+ 
b
 * MPC_MPFR_SIGN (
	`MPC_IM
 (w));

50 
y
 = 
b
 * 
	`MPC_MPFR_SIGN
 (
	`MPC_RE
 (
w
)Ë- 
a
 * MPC_MPFR_SIGN (
	`MPC_IM
 (w));

56 
mp‰_t
 
sign
;

57 
	`mp‰_öô2
 (
sign
, 2);

60 i‡(
a
 == 1)

61 i‡(
b
 == 1) {

62 
	`mp‰_add
 (
sign
, 
	`MPC_RE
 (
w
), 
	`MPC_IM
 (w), 
GMP_RNDN
);

63 
x
 = 
	`MPC_MPFR_SIGN
 (
sign
);

64 
	`mp‰_sub
 (
sign
, 
	`MPC_RE
 (
w
), 
	`MPC_IM
 (w), 
GMP_RNDN
);

65 
y
 = 
	`MPC_MPFR_SIGN
 (
sign
);

68 
	`mp‰_sub
 (
sign
, 
	`MPC_RE
 (
w
), 
	`MPC_IM
 (w), 
GMP_RNDN
);

69 
x
 = 
	`MPC_MPFR_SIGN
 (
sign
);

70 
	`mp‰_add
 (
sign
, 
	`MPC_RE
 (
w
), 
	`MPC_IM
 (w), 
GMP_RNDN
);

71 
y
 = -
	`MPC_MPFR_SIGN
 (
sign
);

74 i‡(
b
 == 1) {

75 
	`mp‰_sub
 (
sign
, 
	`MPC_IM
 (
w
), 
	`MPC_RE
 (w), 
GMP_RNDN
);

76 
x
 = 
	`MPC_MPFR_SIGN
 (
sign
);

77 
	`mp‰_add
 (
sign
, 
	`MPC_RE
 (
w
), 
	`MPC_IM
 (w), 
GMP_RNDN
);

78 
y
 = 
	`MPC_MPFR_SIGN
 (
sign
);

81 
	`mp‰_add
 (
sign
, 
	`MPC_RE
 (
w
), 
	`MPC_IM
 (w), 
GMP_RNDN
);

82 
x
 = -
	`MPC_MPFR_SIGN
 (
sign
);

83 
	`mp‰_sub
 (
sign
, 
	`MPC_IM
 (
w
), 
	`MPC_RE
 (w), 
GMP_RNDN
);

84 
y
 = 
	`MPC_MPFR_SIGN
 (
sign
);

86 
	`mp‰_˛ór
 (
sign
);

89 i‡(
x
 == 0)

90 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

92 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), 
x
);

93 i‡(
y
 == 0)

94 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

96 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), 
y
);

98  
	`MPC_INEX
 (0, 0);

99 
	}
}

103 
	$mpc_div_fö_öf
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
z
, mpc_§˝å 
w
)

107 
mp‰_t
 
c
, 
d
, 
a
, 
b
, 
x
, 
y
, 
zîo
;

109 
	`mp‰_öô2
 (
c
, 2);

110 
	`mp‰_öô2
 (
d
, 2);

111 
	`mp‰_öô2
 (
x
, 2);

112 
	`mp‰_öô2
 (
y
, 2);

113 
	`mp‰_öô2
 (
zîo
, 2);

114 
	`mp‰_£t_ui
 (
zîo
, 0ul, 
GMP_RNDN
);

115 
	`mp‰_öô2
 (
a
, 
	`mp‰_gë_¥ec
 (
	`MPC_RE
 (
z
)));

116 
	`mp‰_öô2
 (
b
, 
	`mp‰_gë_¥ec
 (
	`MPC_IM
 (
z
)));

118 
	`mp‰_£t_ui
 (
c
, (
	`mp‰_öf_p
 (
	`MPC_RE
 (
w
)Ë? 1 : 0), 
GMP_RNDN
);

119 
	`MPFR_COPYSIGN
 (
c
, c, 
	`MPC_RE
 (
w
), 
GMP_RNDN
);

120 
	`mp‰_£t_ui
 (
d
, (
	`mp‰_öf_p
 (
	`MPC_IM
 (
w
)Ë? 1 : 0), 
GMP_RNDN
);

121 
	`MPFR_COPYSIGN
 (
d
, d, 
	`MPC_IM
 (
w
), 
GMP_RNDN
);

123 
	`mp‰_mul
 (
a
, 
	`MPC_RE
 (
z
), 
c
, 
GMP_RNDN
);

124 
	`mp‰_mul
 (
b
, 
	`MPC_IM
 (
z
), 
d
, 
GMP_RNDN
);

125 
	`mp‰_add
 (
x
, 
a
, 
b
, 
GMP_RNDN
);

127 
	`mp‰_mul
 (
b
, 
	`MPC_IM
 (
z
), 
c
, 
GMP_RNDN
);

128 
	`mp‰_mul
 (
a
, 
	`MPC_RE
 (
z
), 
d
, 
GMP_RNDN
);

129 
	`mp‰_sub
 (
y
, 
b
, 
a
, 
GMP_RNDN
);

131 
	`MPFR_COPYSIGN
 (
	`MPC_RE
 (
r›
), 
zîo
, 
x
, 
GMP_RNDN
);

132 
	`MPFR_COPYSIGN
 (
	`MPC_IM
 (
r›
), 
zîo
, 
y
, 
GMP_RNDN
);

134 
	`mp‰_˛ór
 (
c
);

135 
	`mp‰_˛ór
 (
d
);

136 
	`mp‰_˛ór
 (
x
);

137 
	`mp‰_˛ór
 (
y
);

138 
	`mp‰_˛ór
 (
zîo
);

139 
	`mp‰_˛ór
 (
a
);

140 
	`mp‰_˛ór
 (
b
);

142  
	`MPC_INEX
 (0, 0);

143 
	}
}

147 
	$mpc_div
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, mpc_§˝å 
c
, 
mpc_∫d_t
 
∫d
)

149 
ok_ª
 = 0, 
ok_im
 = 0;

150 
mpc_t
 
ªs
, 
c_c⁄j
;

151 
mp‰_t
 
q
;

152 
mp_¥ec_t
 
¥ec
;

153 
öexa˘_¥od
, 
öexa˘_n‹m
, 
öexa˘_ª
, 
öexa˘_im
, 
lo›s
 = 0;

156 
brs
 = 
	`MPFR_SIGNBIT
 (
	`MPC_RE
 (
b
));

157 
bis
 = 
	`MPFR_SIGNBIT
 (
	`MPC_IM
 (
b
));

158 
¸s
 = 
	`MPFR_SIGNBIT
 (
	`MPC_RE
 (
c
));

159 
cis
 = 
	`MPFR_SIGNBIT
 (
	`MPC_IM
 (
c
));

170 i‡(
	`mpc_zîo_p
 (
c
))

171  
	`mpc_div_zîo
 (
a
, 
b
, 
c
, 
∫d
);

173 i‡(
	`mpc_öf_p
 (
b
Ë&& 
	`mpc_fö_p
 (
c
))

174  
	`mpc_div_öf_fö
 (
a
, 
b
, 
c
);

175 i‡(
	`mpc_fö_p
 (
b
Ë&& 
	`mpc_öf_p
 (
c
))

176  
	`mpc_div_fö_öf
 (
a
, 
b
, 
c
);

177 i‡(!
	`mpc_fö_p
 (
b
Ë|| !mpc_fö_∞(
c
)) {

178 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
a
));

179 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
a
));

180  
	`MPC_INEX
 (0, 0);

185 i‡(
	`mp‰_zîo_p
(
	`MPC_IM
(
c
)))

188 
öexa˘_im
 = 
	`mp‰_div
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RE
(
c
), 
	`MPC_RND_IM
(
∫d
));

189 
öexa˘_ª
 = 
	`mp‰_div
 (
	`MPC_RE
(
a
), MPC_RE(
b
), MPC_RE(
c
), 
	`MPC_RND_RE
(
∫d
));

193 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
a
)))

194 
	`mp‰_£tsign
 (
	`MPC_RE
 (
a
), MPC_RE (a), (
brs
 !
¸s
 && 
bis
 !
cis
),

195 
GMP_RNDN
);

196 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
a
)))

197 
	`mp‰_£tsign
 (
	`MPC_IM
 (
a
), MPC_IM (a), (
bis
 !
¸s
 && 
brs
 =
cis
),

198 
GMP_RNDN
);

200  
	`MPC_INEX
(
öexa˘_ª
, 
öexa˘_im
);

204 i‡(
	`mp‰_zîo_p
(
	`MPC_RE
(
c
)))

207 
ovîœp
 = (
a
 =
b
Ë|| (®=
c
);

208 
imag_b
 = 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
b
));

209 
mp‰_t
 
˛oc
;

210 
mpc_t
 
tm∑
;

211 
mpc_±r
 
de°
 = (
ovîœp
Ë? 
tm∑
 : 
a
;

213 i‡(
ovîœp
)

214 
	`mpc_öô3
 (
tm∑
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
)), MPFR_PREC (
	`MPC_IM
 (a)));

216 
˛oc
[0] = 
	`MPC_IM
(
c
)[0];

217 
öexa˘_ª
 = 
	`mp‰_div
 (
	`MPC_RE
(
de°
), 
	`MPC_IM
(
b
), 
˛oc
, 
	`MPC_RND_RE
(
∫d
));

218 
	`mp‰_√g
 (
˛oc
, cloc, 
GMP_RNDN
);

220 
öexa˘_im
 = 
	`mp‰_div
 (
	`MPC_IM
(
de°
), 
	`MPC_RE
(
b
), 
˛oc
, 
	`MPC_RND_IM
(
∫d
));

222 i‡(
ovîœp
)

228 
	`mpc_£t
 (
a
, 
tm∑
, 
MPC_RNDNN
);

229 
	`mpc_˛ór
 (
tm∑
);

234 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
a
)))

235 
	`mp‰_£tsign
 (
	`MPC_RE
 (
a
), MPC_RE (a), (
brs
 !
¸s
 && 
bis
 !
cis
),

236 
GMP_RNDN
);

237 i‡(
imag_b
)

238 
	`mp‰_£tsign
 (
	`MPC_IM
 (
a
), MPC_IM (a), (
bis
 !
¸s
 && 
brs
 =
cis
),

239 
GMP_RNDN
);

241  
	`MPC_INEX
(
öexa˘_ª
, 
öexa˘_im
);

244 
¥ec
 = 
	`MPC_MAX_PREC
(
a
);

246 
	`mpc_öô2
 (
ªs
, 2);

247 
	`mp‰_öô
 (
q
);

250 
	`MPC_RE
 (
c_c⁄j
)[0] = MPC_RE (
c
)[0];

251 
	`MPC_IM
 (
c_c⁄j
)[0] = MPC_IM (
c
)[0];

252 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
c_c⁄j
));

256 
lo›s
 ++;

257 
¥ec
 +(
lo›s
 <2Ë? 
	`mpc_˚û_log2
 (prec) + 5 :Örec / 2;

259 
	`mpc_£t_¥ec
 (
ªs
, 
¥ec
);

260 
	`mp‰_£t_¥ec
 (
q
, 
¥ec
);

263 
öexa˘_n‹m
 = 
	`mpc_n‹m
 (
q
, 
c
, 
GMP_RNDD
);

271 
öexa˘_¥od
 = 
	`mpc_mul
 (
ªs
, 
b
, 
c_c⁄j
, 
MPC_RNDZZ
);

272 
öexa˘_ª
 = 
	`MPC_INEX_RE
 (
öexa˘_¥od
);

273 
öexa˘_im
 = 
	`MPC_INEX_IM
 (
öexa˘_¥od
);

274 i‡(
öexa˘_ª
 != 0)

275 
	`mp‰_add_⁄e_uÕ
 (
	`MPC_RE
 (
ªs
), 
GMP_RNDN
);

276 i‡(
öexa˘_im
 != 0)

277 
	`mp‰_add_⁄e_uÕ
 (
	`MPC_IM
 (
ªs
), 
GMP_RNDN
);

280 i‡(
öexa˘_n‹m
 =0 && (
öexa˘_ª
 =0 || 
öexa˘_im
 == 0))

285 i‡(
	`MPFR_SIGN
 (
	`MPC_RE
 (
ªs
)) > 0)

287 
öexa˘_ª
 |
	`mp‰_div
 (
	`MPC_RE
 (
ªs
), MPC_RE (ªs), 
q
, 
GMP_RNDU
);

288 
ok_ª
 = 
	`mp‰_ˇn_round
 (
	`MPC_RE
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDU
,

289 
	`MPC_RND_RE
(
∫d
), 
	`MPFR_PREC
(
	`MPC_RE
(
a
)));

293 
öexa˘_ª
 |
	`mp‰_div
 (
	`MPC_RE
 (
ªs
), MPC_RE (ªs), 
q
, 
GMP_RNDD
);

294 
ok_ª
 = 
	`mp‰_ˇn_round
 (
	`MPC_RE
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDD
,

295 
	`MPC_RND_RE
(
∫d
), 
	`MPFR_PREC
(
	`MPC_RE
(
a
)));

298 i‡(
ok_ª
 || !
öexa˘_ª
)

300 i‡(
	`MPFR_SIGN
 (
	`MPC_IM
 (
ªs
)) > 0)

302 
öexa˘_im
 |
	`mp‰_div
 (
	`MPC_IM
 (
ªs
), MPC_IM (ªs), 
q
, 
GMP_RNDU
);

303 
ok_im
 = 
	`mp‰_ˇn_round
 (
	`MPC_IM
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDU
,

304 
	`MPC_RND_IM
(
∫d
), 
	`MPFR_PREC
(
	`MPC_IM
(
a
)));

308 
öexa˘_im
 |
	`mp‰_div
 (
	`MPC_IM
 (
ªs
), MPC_IM (ªs), 
q
, 
GMP_RNDD
);

309 
ok_im
 = 
	`mp‰_ˇn_round
 (
	`MPC_IM
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDD
,

310 
	`MPC_RND_IM
(
∫d
), 
	`MPFR_PREC
(
	`MPC_IM
(
a
)));

319 i‡(
	`mp‰_ui_div
 (
q
, 1, q, 
GMP_RNDU
Ë|| 
öexa˘_n‹m
)

324 
öexa˘_ª
 = i√xa˘_ª || !
	`mp‰_zîo_p
 (
	`MPC_RE
 (
ªs
));

325 
öexa˘_im
 = i√xa˘_im || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
ªs
));

327 i‡(
	`MPFR_SIGN
 (
	`MPC_RE
 (
ªs
)) > 0)

329 
öexa˘_ª
 = 
	`mp‰_mul
 (
	`MPC_RE
 (
ªs
), MPC_RE (ªs), 
q
, 
GMP_RNDU
)

330 || 
öexa˘_ª
;

331 
ok_ª
 = 
	`mp‰_ˇn_round
 (
	`MPC_RE
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDU
,

332 
	`MPC_RND_RE
(
∫d
), 
	`MPFR_PREC
(
	`MPC_RE
(
a
)));

336 
öexa˘_ª
 = 
	`mp‰_mul
 (
	`MPC_RE
 (
ªs
), MPC_RE (ªs), 
q
, 
GMP_RNDD
)

337 || 
öexa˘_ª
;

338 
ok_ª
 = 
	`mp‰_ˇn_round
 (
	`MPC_RE
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDD
,

339 
	`MPC_RND_RE
(
∫d
), 
	`MPFR_PREC
(
	`MPC_RE
(
a
)));

342 i‡(
ok_ª
)

344 i‡(
	`MPFR_SIGN
 (
	`MPC_IM
 (
ªs
)) > 0)

346 
öexa˘_im
 = 
	`mp‰_mul
 (
	`MPC_IM
 (
ªs
), MPC_IM (ªs), 
q
, 
GMP_RNDU
)

347 || 
öexa˘_im
;

348 
ok_im
 = 
	`mp‰_ˇn_round
 (
	`MPC_IM
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDU
,

349 
	`MPC_RND_IM
(
∫d
), 
	`MPFR_PREC
(
	`MPC_IM
(
a
)));

353 
öexa˘_im
 = 
	`mp‰_mul
 (
	`MPC_IM
 (
ªs
), MPC_IM (ªs), 
q
, 
GMP_RNDD
)

354 || 
öexa˘_im
;

355 
ok_im
 = 
	`mp‰_ˇn_round
 (
	`MPC_IM
 (
ªs
), 
¥ec
 - 4, 
GMP_RNDD
,

356 
	`MPC_RND_IM
(
∫d
), 
	`MPFR_PREC
(
	`MPC_IM
(
a
)));

361 (!
ok_ª
 && 
öexa˘_ª
Ë|| (!
ok_im
 && 
öexa˘_im
));

363 
	`mpc_£t
 (
a
, 
ªs
, 
∫d
);

365 
	`mpc_˛ór
 (
ªs
);

366 
	`mp‰_˛ór
 (
q
);

368  (
	`MPC_INEX
 (
öexa˘_ª
, 
öexa˘_im
));

370 
	}
}

	@src/div_2exp.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_div_2exp
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_div_2exp
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_div_2exp
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/div_fr.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_div_‰
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

28 
mp‰_t
 
ªÆ
;

31 
	`mp‰_öô2
 (
ªÆ
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
)));

33 
öex_ª
 = 
	`mp‰_div
 (
ªÆ
, 
	`MPC_RE
(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

34 
öex_im
 = 
	`mp‰_div
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

35 
	`mp‰_£t
 (
	`MPC_RE
 (
a
), 
ªÆ
, 
GMP_RNDN
);

37 
	`mp‰_˛ór
 (
ªÆ
);

39  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

40 
	}
}

	@src/div_ui.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_div_ui
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_div_ui
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_div_ui
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/exp.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_exp
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

27 
mp‰_t
 
x
, 
y
, 
z
;

28 
mp_¥ec_t
 
¥ec
;

29 
ok
 = 0;

30 
öex_ª
, 
öex_im
;

49 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (op)))

58 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

59  
	`mpc_£t
 (
r›
, 
›
, 
MPC_RNDNN
);

61 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

63 i‡(
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)))

64  
	`mpc_£t_ui_ui
 (
r›
, 0, 0, 
MPC_RNDNN
);

67 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

68 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

69  
	`MPC_INEX
(0, 0);

72 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

73 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

74  
	`MPC_INEX
(0, 0);

78 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
(
›
)))

83 
öex_ª
 = 
	`mp‰_exp
 (
	`MPC_RE
(
r›
), MPC_RE(
›
), 
	`MPC_RND_RE
(
∫d
));

84 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
r›
), MPC_IM(
›
), 
	`MPC_RND_IM
(
∫d
));

85  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

88 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

91 
öex_ª
 = 
	`mp‰_cos
 (
	`MPC_RE
 (
r›
), 
	`MPC_IM
 (
›
), 
	`MPC_RND_RE
(
∫d
));

92 
öex_im
 = 
	`mp‰_sö
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
(
∫d
));

93  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

97 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

103 
mp‰_t
 
n
;

105 
	`mp‰_öô2
 (
n
, 2);

106 i‡(
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)))

107 
	`mp‰_£t_ui
 (
n
, 0, 
GMP_RNDN
);

109 
	`mp‰_£t_öf
 (
n
, +1);

111 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

113 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
 (
r›
), 
n
, 
GMP_RNDN
);

114 i‡(
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)))

115 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), 
n
, 
GMP_RNDN
);

118 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

119 
öex_im
 = 0;

124 
mp‰_t
 
c
, 
s
;

125 
	`mp‰_öô2
 (
c
, 2);

126 
	`mp‰_öô2
 (
s
, 2);

128 
	`mp‰_sö_cos
 (
s
, 
c
, 
	`MPC_IM
 (
›
), 
GMP_RNDN
);

129 
öex_ª
 = 
	`mp‰_c›ysign
 (
	`MPC_RE
 (
r›
), 
n
, 
c
, 
GMP_RNDN
);

130 
öex_im
 = 
	`mp‰_c›ysign
 (
	`MPC_IM
 (
r›
), 
n
, 
s
, 
GMP_RNDN
);

132 
	`mp‰_˛ór
 (
s
);

133 
	`mp‰_˛ór
 (
c
);

136 
	`mp‰_˛ór
 (
n
);

137  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

140 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

143 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

144 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

145  
	`MPC_INEX
(0, 0);

151 
¥ec
 = 
	`MPC_MAX_PREC
(
r›
);

153 
	`mp‰_öô2
 (
x
, 2);

154 
	`mp‰_öô2
 (
y
, 2);

155 
	`mp‰_öô2
 (
z
, 2);

159 
¥ec
 +
	`mpc_˚û_log2
 (prec) + 5;

161 
	`mp‰_£t_¥ec
 (
x
, 
¥ec
);

162 
	`mp‰_£t_¥ec
 (
y
, 
¥ec
);

163 
	`mp‰_£t_¥ec
 (
z
, 
¥ec
);

167 
	`mp‰_exp
 (
x
, 
	`MPC_RE
(
›
), 
GMP_RNDN
);

168 
	`mp‰_sö_cos
 (
z
, 
y
, 
	`MPC_IM
(
›
), 
GMP_RNDN
);

169 
	`mp‰_mul
 (
y
, y, 
x
, 
GMP_RNDN
);

171 
ok
 = 
	`mp‰_öf_p
 (
y
Ë|| 
	`mp‰_zîo_p
 (
x
)

172 || 
	`mp‰_ˇn_round
 (
y
, 
¥ec
 - 2, 
GMP_RNDN
, 
GMP_RNDZ
,

173 
	`MPFR_PREC
(
	`MPC_RE
(
r›
)Ë+ (
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
));

174 i‡(
ok
)

176 
	`mp‰_mul
 (
z
, z, 
x
, 
GMP_RNDN
);

177 
ok
 = 
	`mp‰_öf_p
 (
z
Ë|| 
	`mp‰_zîo_p
 (
x
)

178 || 
	`mp‰_ˇn_round
 (
z
, 
¥ec
 - 2, 
GMP_RNDN
, 
GMP_RNDZ
,

179 
	`MPFR_PREC
(
	`MPC_IM
(
r›
)Ë+ (
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDN
));

182 
ok
 == 0);

184 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
(
r›
), 
y
, 
	`MPC_RND_RE
(
∫d
));

185 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
r›
), 
z
, 
	`MPC_RND_IM
(
∫d
));

187 
	`mp‰_˛ór
 (
x
);

188 
	`mp‰_˛ór
 (
y
);

189 
	`mp‰_˛ór
 (
z
);

191  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

192 
	}
}

	@src/fr_div.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_‰_div
 (
mpc_±r
 
a
, 
mp‰_§˝å
 
b
, 
mpc_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

27 
mpc_t
 
bc
;

28 
öexa˘
;

30 
	`MPC_RE
 (
bc
)[0] = 
b
 [0];

31 
	`mp‰_öô
 (
	`MPC_IM
 (
bc
));

33 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
bc
), 0, 
GMP_RNDN
);

35 
öexa˘
 = 
	`mpc_div
 (
a
, 
bc
, 
c
, 
∫d
);

37 
	`mp‰_˛ór
 (
	`MPC_IM
 (
bc
));

39  
öexa˘
;

40 
	}
}

	@src/fr_sub.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_‰_sub
 (
mpc_±r
 
a
, 
mp‰_§˝å
 
b
, 
mpc_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

30 
öex_ª
 = 
	`mp‰_sub
 (
	`MPC_RE
(
a
), 
b
, MPC_RE(
c
), 
	`MPC_RND_RE
(
∫d
));

31 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
 (
a
), MPC_IM (
c
), 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

32 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
a
));

34  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

35 
	}
}

	@src/get_prec.c

23 
	~"mpc-im∂.h
"

25 
mp_¥ec_t


26 
	$mpc_gë_¥ec
 (
mpc_§˝å
 
x
)

28 
mp_¥ec_t
 
¥e¸e
 = 
	`MPFR_PREC
 (
	`MPC_RE
 (
x
));

29  (
	`MPFR_PREC
 (
	`MPC_IM
 (
x
)Ë=
¥e¸e
 ?Örecre : 0);

30 
	}
}

	@src/get_prec2.c

23 
	~"mpc-im∂.h
"

26 
	$mpc_gë_¥ec2
 (
mp_¥ec_t
 *
¥
, mp_¥ec_à*
pi
, 
mpc_§˝å
 
x
)

28 *
¥
 = 
	`MPFR_PREC
 (
	`MPC_RE
 (
x
));

29 *
pi
 = 
	`MPFR_PREC
 (
	`MPC_IM
 (
x
));

30 
	}
}

	@src/get_str.c

22 
	~<°dio.h
>

23 
	~<˘y≥.h
>

24 
	~<°rög.h
>

25 
	~"mpc-im∂.h
"

28 #ifde‡
HAVE_LOCALE_H


29 
	~<loˇÀ.h
>

36 #i‡(
__GMP_MP_SIZE_T_INT
 == 1)

37 
	#MPC_EXP_FORMAT_SPEC
 "i"

	)

38 #ñi‡(
__GMP_MP_SIZE_T_INT
 == 0)

39 
	#MPC_EXP_FORMAT_SPEC
 "li"

	)

45 
	$¥ëty_zîo
 (
mp‰_§˝å
 
zîo
)

47 *
¥ëty
;

49 
¥ëty
 = 
	`mpc_Æloc_°r
 (3);

51 
¥ëty
[0] = 
	`mp‰_signbô
 (
zîo
) ? '-' : '+';

52 
¥ëty
[1] = '0';

53 
¥ëty
[2] = '\0';

55  
¥ëty
;

56 
	}
}

59 
	$¥ëtify
 (c⁄° *
°r
, c⁄° 
mp_exp_t
 
expo
, 
ba£
, 
•ecül
)

61 
size_t
 
sz
;

62 *
¥ëty
;

63 *
p
;

64 c⁄° *
s
;

65 
mp_exp_t
 
x
;

66 
sign
;

68 
sz
 = 
	`°æí
 (
°r
) + 1;

70 i‡(
•ecül
)

73 
¥ëty
 = 
	`mpc_Æloc_°r
 (
sz
);

74 
	`°r˝y
 (
¥ëty
, 
°r
);

76  
¥ëty
;

81 
sign
 = (
°r
[0] == '-' || str[0] == '+');

83 
x
 = 
expo
 - 1;

86 i‡(
ba£
 == 16)

87 
x
 <<= 2;

89 ++
sz
;

91 i‡(
x
 != 0)

95 
mp_exp_t
 
xx
;

97 
sz
 += 3;

99 i‡(
x
 < 0)

103 i‡(
x
 < -10)

105 
xx
 = - (
x
 / 10);

106 
sz
++;

109 
xx
 = -
x
;

112 
xx
 = 
x
;

116 
xx
 > 9)

118 
sz
++;

119 
xx
 /= 10;

123 
¥ëty
 = 
	`mpc_Æloc_°r
 (
sz
);

124 
p
 = 
¥ëty
;

127 
s
 = 
°r
;

128 *
p
++ = *
s
++;

129 i‡(
sign
)

130 *
p
++ = *
s
++;

133 #ifde‡
HAVE_LOCALECONV


134 *
p
++ = *
	`loˇÀc⁄v
 ()->
decimÆ_poöt
;

136 *
p
++ = '.';

138 *
p
 = '\0';

141 
	`°rˇt
 (
¥ëty
, 
s
);

144 i‡(
x
 == 0)

145  
¥ëty
;

147 
p
 = 
¥ëty
 + 
	`°æí
 (
°r
) + 1;

149 
ba£
)

152 *
p
++ = 'e';

156 *
p
++ = 'p';

159 *
p
++ = '@';

162 *
p
 = '\0';

164 
	`•rötf
 (
p
, "%+"
MPC_EXP_FORMAT_SPEC
, 
x
);

166  
¥ëty
;

167 
	}
}

170 
	$gë_¥ëty_°r
 (c⁄° 
ba£
, c⁄° 
size_t
 
n
, 
mp‰_§˝å
 
x
, 
mp‰_∫d_t
 
∫d
)

172 
mp_exp_t
 
expo
;

173 *
ugly
;

174 *
¥ëty
;

176 i‡(
	`mp‰_zîo_p
 (
x
))

177  
	`¥ëty_zîo
 (
x
);

179 
ugly
 = 
	`mp‰_gë_°r
 (
NULL
, &
expo
, 
ba£
, 
n
, 
x
, 
∫d
);

180 
	`MPC_ASSERT
 (
ugly
 !
NULL
);

181 
¥ëty
 = 
	`¥ëtify
 (
ugly
, 
expo
, 
ba£
, !
	`mp‰_numbî_p
 (
x
));

182 
	`mp‰_‰ì_°r
 (
ugly
);

184  
¥ëty
;

185 
	}
}

188 
	$mpc_gë_°r
 (
ba£
, 
size_t
 
n
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

190 
size_t
 
√eded_size
;

191 *
ªÆ_°r
;

192 *
imag_°r
;

193 *
com∂ex_°r
 = 
NULL
;

195 i‡(
ba£
 < 2 || base > 36)

196  
NULL
;

198 
ªÆ_°r
 = 
	`gë_¥ëty_°r
 (
ba£
, 
n
, 
	`MPC_RE
 (
›
), 
	`MPC_RND_RE
 (
∫d
));

199 
imag_°r
 = 
	`gë_¥ëty_°r
 (
ba£
, 
n
, 
	`MPC_IM
 (
›
), 
	`MPC_RND_IM
 (
∫d
));

201 
√eded_size
 = 
	`°æí
 (
ªÆ_°r
Ë+ såÀ¿(
imag_°r
) + 4;

203 
com∂ex_°r
 = 
	`mpc_Æloc_°r
 (
√eded_size
);

204 
	`MPC_ASSERT
 (
com∂ex_°r
 !
NULL
);

206 
	`°r˝y
 (
com∂ex_°r
, "(");

207 
	`°rˇt
 (
com∂ex_°r
, 
ªÆ_°r
);

208 
	`°rˇt
 (
com∂ex_°r
, " ");

209 
	`°rˇt
 (
com∂ex_°r
, 
imag_°r
);

210 
	`°rˇt
 (
com∂ex_°r
, ")");

212 
	`mpc_‰ì_°r
 (
ªÆ_°r
);

213 
	`mpc_‰ì_°r
 (
imag_°r
);

215  
com∂ex_°r
;

216 
	}
}

	@src/get_version.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_gë_vîsi⁄
 ()

28 
	}
}

	@src/imag.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_imag
 (
mp‰_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_∫d_t
 
∫d
)

27  
	`mp‰_£t
 (
a
, 
	`MPC_IM
 (
b
), 
∫d
);

28 
	}
}

	@src/init2.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_öô2
 (
mpc_t
 
x
, 
mp_¥ec_t
 
¥ec
)

27 
	`mp‰_öô2
 (
	`MPC_RE
(
x
), 
¥ec
);

28 
	`mp‰_öô2
 (
	`MPC_IM
(
x
), 
¥ec
);

29 
	}
}

	@src/init3.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_öô3
 (
mpc_t
 
x
, 
mp_¥ec_t
 
¥ec_ª
, mp_¥ec_à
¥ec_im
)

27 
	`mp‰_öô2
 (
	`MPC_RE
(
x
), 
¥ec_ª
);

28 
	`mp‰_öô2
 (
	`MPC_IM
(
x
), 
¥ec_im
);

29 
	}
}

	@src/inp_str.c

22 
	~<°dio.h
>

23 
	~<˘y≥.h
>

24 
	~<°rög.h
>

25 
	~"mpc-im∂.h
"

27 
size_t


28 
	$skù_whôe•a˚
 (
FILE
 *
°ªam
) {

29 
c
 = 
	`gëc
 (
°ªam
);

30 
size_t
 
size
 = 0;

31 
c
 !
EOF
 && 
	`is•a˚
 (() c)) {

32 
c
 = 
	`gëc
 (
°ªam
);

33 
size
++;

35 i‡(
c
 !
EOF
)

36 
	`ungëc
 (
c
, 
°ªam
);

37  
size
;

38 
	}
}

44 
	$exåa˘_suffix
 (
FILE
 *
°ªam
)

46 
c
;

47 
size_t
 
ƒód
 = 0;

48 
size_t
 
°rsize
 = 100;

49 *
°r
 = 
	`mpc_Æloc_°r
 (
°rsize
);

51 
c
 = 
	`gëc
 (
°ªam
);

52 
	`iß um
 ((Ë
c
) || c == '_') {

53 
°r
 [
ƒód
] = (Ë
c
;

54 
ƒód
++;

55 i‡(
ƒód
 =
°rsize
) {

56 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
°rsize
, 2 * strsize);

57 
°rsize
 *= 2;

59 
c
 = 
	`gëc
 (
°ªam
);

62 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
°rsize
, 
ƒód
 + 1);

63 
°rsize
 = 
ƒód
 + 1;

64 
°r
 [
ƒód
] = '\0';

66 i‡(
c
 !
EOF
)

67 
	`ungëc
 (
c
, 
°ªam
);

68  
°r
;

69 
	}
}

77 
	$exåa˘_°rög
 (
FILE
 *
°ªam
)

79 
c
;

80 
size_t
 
ƒód
 = 0;

81 
size_t
 
°rsize
 = 100;

82 *
°r
 = 
	`mpc_Æloc_°r
 (
°rsize
);

83 
size_t
 
Àn°r
;

85 
c
 = 
	`gëc
 (
°ªam
);

86 
c
 !
EOF
 && c != '\n'

87 && !
	`is•a˚
 ((Ë
c
)

88 && 
c
 != '(' && c != ')') {

89 
°r
 [
ƒód
] = (Ë
c
;

90 
ƒód
++;

91 i‡(
ƒód
 =
°rsize
) {

92 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
°rsize
, 2 * strsize);

93 
°rsize
 *= 2;

95 
c
 = 
	`gëc
 (
°ªam
);

98 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
°rsize
, 
ƒód
 + 1);

99 
°rsize
 = 
ƒód
 + 1;

100 
°r
 [
ƒód
] = '\0';

102 i‡(
ƒód
 == 0)

103  
°r
;

105 
Àn°r
 = 
ƒód
;

107 i‡(
c
 == '(') {

108 
size_t
 
n
;

109 *
suffix
;

112 i‡((
ƒód
 != 3

113 || 
	`tﬁowî
 ((Ë(
°r
[0])) != 'n'

114 || 
	`tﬁowî
 ((Ë(
°r
[1])) != 'a'

115 || 
	`tﬁowî
 ((Ë(
°r
[2])) != 'n')

116 && (
ƒód
 != 5

117 || 
°r
[0] != '@'

118 || 
	`tﬁowî
 ((Ë(
°r
[1])) != 'n'

119 || 
	`tﬁowî
 ((Ë(
°r
[2])) != 'a'

120 || 
	`tﬁowî
 ((Ë(
°r
[3])) != 'n'

121 || 
°r
[4] != '@')) {

122 
	`ungëc
 (
c
, 
°ªam
);

123  
°r
;

126 
suffix
 = 
	`exåa˘_suffix
 (
°ªam
);

127 
ƒód
 +
	`°æí
 (
suffix
) + 1;

128 i‡(
ƒód
 >
°rsize
) {

129 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
°rsize
, 
ƒód
 + 1);

130 
°rsize
 = 
ƒód
 + 1;

134 
n
 = 
Àn°r
 + 
	`•rötf
 (
°r
 +Üí°r, "(%s", 
suffix
);

135 
	`MPC_ASSERT
 (
n
 =
ƒód
);

137 
c
 = 
	`gëc
 (
°ªam
);

138 i‡(
c
 == ')') {

139 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
°rsize
, 
ƒód
 + 2);

140 
°rsize
 = 
ƒód
 + 2;

141 
°r
 [
ƒód
] = 
c
;

142 
°r
 [
ƒód
+1] = '\0';

143 
ƒód
++;

145 i‡(
c
 !
EOF
)

146 
	`ungëc
 (
c
, 
°ªam
);

148 
	`mpc_‰ì_°r
 (
suffix
);

150 i‡(
c
 !
EOF
)

151 
	`ungëc
 (
c
, 
°ªam
);

153  
°r
;

154 
	}
}

158 
	$mpc_öp_°r
 (
mpc_±r
 
r›
, 
FILE
 *
°ªam
, 
size_t
 *
ªad
, 
ba£
,

159 
mpc_∫d_t
 
∫d_mode
)

161 
size_t
 
whôe
, 
ƒód
 = 0;

162 
öex
 = -1;

163 
c
;

164 *
°r
;

166 i‡(
°ªam
 =
NULL
)

167 
°ªam
 = 
°dö
;

169 
whôe
 = 
	`skù_whôe•a˚
 (
°ªam
);

170 
c
 = 
	`gëc
 (
°ªam
);

171 i‡(
c
 !
EOF
) {

172 i‡(
c
 == '(') {

173 *
ªÆ_°r
;

174 *
imag_°r
;

175 
size_t
 
n
;

177 
ƒód
++;

178 
whôe
 = 
	`skù_whôe•a˚
 (
°ªam
);

179 
ªÆ_°r
 = 
	`exåa˘_°rög
 (
°ªam
);

180 
ƒód
 +
	`°æí
(
ªÆ_°r
);

182 
c
 = 
	`gëc
 (
°ªam
);

183 i‡(!
	`is•a˚
 ((Ë
c
)) {

184 i‡(
c
 !
EOF
)

185 
	`ungëc
 (
c
, 
°ªam
);

186 
	`mpc_‰ì_°r
 (
ªÆ_°r
);

187 
îr‹
;

190 
	`ungëc
 (
c
, 
°ªam
);

192 
whôe
 +
	`skù_whôe•a˚
 (
°ªam
);

193 
imag_°r
 = 
	`exåa˘_°rög
 (
°ªam
);

194 
ƒód
 +
	`°æí
 (
imag_°r
);

196 
°r
 = 
	`mpc_Æloc_°r
 (
ƒód
 + 2);

197 
n
 = 
	`•rötf
 (
°r
, "(%†%s", 
ªÆ_°r
, 
imag_°r
);

198 
	`MPC_ASSERT
 (
n
 =
ƒód
 + 1);

199 
	`mpc_‰ì_°r
 (
ªÆ_°r
);

200 
	`mpc_‰ì_°r
 (
imag_°r
);

202 
whôe
 +
	`skù_whôe•a˚
 (
°ªam
);

203 
c
 = 
	`gëc
 (
°ªam
);

204 i‡(
c
 == ')') {

205 
°r
 = 
	`mpc_ªÆloc_°r
 (°r, 
ƒód
 +2,Çread + 3);

206 
°r
 [
ƒód
+1] = 
c
;

207 
°r
 [
ƒód
+2] = '\0';

208 
ƒód
++;

210 i‡(
c
 !
EOF
)

211 
	`ungëc
 (
c
, 
°ªam
);

214 i‡(
c
 !
EOF
)

215 
	`ungëc
 (
c
, 
°ªam
);

216 
°r
 = 
	`exåa˘_°rög
 (
°ªam
);

217 
ƒód
 +
	`°æí
 (
°r
);

220 
öex
 = 
	`mpc_£t_°r
 (
r›
, 
°r
, 
ba£
, 
∫d_mode
);

222 
	`mpc_‰ì_°r
 (
°r
);

225 
îr‹
:

226 i‡(
öex
 == -1) {

227 
	`mp‰_£t_«n
 (
	`MPC_RE
(
r›
));

228 
	`mp‰_£t_«n
 (
	`MPC_IM
(
r›
));

230 i‡(
ªad
 !
NULL
)

231 *
ªad
 = 
whôe
 + 
ƒód
;

232  
öex
;

233 
	}
}

	@src/log.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_log
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
){

26 
ok
=0;

27 
mp‰_t
 
w
;

28 
mp_¥ec_t
 
¥ec
;

29 
lo›s
 = 0;

30 
ª_cmp
, 
im_cmp
;

31 
öex_ª
, 
öex_im
;

34 i‡(!
	`mp‰_numbî_p
 (
	`MPC_RE
 (
›
)Ë|| !mp‰_numbî_∞(
	`MPC_IM
 (op))) {

35 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
))) {

36 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

37 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

39 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

40 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

41 
öex_im
 = 0;

43 i‡(
	`mp‰_«n_p
 (
	`MPC_IM
 (
›
))) {

44 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

45 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

47 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

48 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

49 
öex_im
 = 0;

52 
öex_im
 = 
	`mp‰_©™2
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RE
 (op),

53 
	`MPC_RND_IM
 (
∫d
));

54 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

56  
	`MPC_INEX
(0, 
öex_im
);

60 
ª_cmp
 = 
	`mp‰_cmp_ui
 (
	`MPC_RE
 (
›
), 0);

61 
im_cmp
 = 
	`mp‰_cmp_ui
 (
	`MPC_IM
 (
›
), 0);

62 i‡(
im_cmp
 == 0) {

63 i‡(
ª_cmp
 == 0) {

64 
öex_im
 = 
	`mp‰_©™2
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RE
 (op),

65 
	`MPC_RND_IM
 (
∫d
));

66 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), -1);

67 
öex_ª
 = 0;

69 i‡(
ª_cmp
 > 0) {

70 
öex_ª
 = 
	`mp‰_log
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

71 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

75 
√g©ive_zîo
;

76 
mp‰_∫d_t
 
∫d_im
;

78 
√g©ive_zîo
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
›
));

79 i‡(
√g©ive_zîo
)

80 
∫d_im
 = 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
));

82 
∫d_im
 = 
	`MPC_RND_IM
 (
∫d
);

83 
w
 [0] = *
	`MPC_RE
 (
›
);

84 
	`MPFR_CHANGE_SIGN
 (
w
);

85 
öex_ª
 = 
	`mp‰_log
 (
	`MPC_RE
 (
r›
), 
w
, 
	`MPC_RND_RE
 (
∫d
));

86 
öex_im
 = 
	`mp‰_c⁄°_pi
 (
	`MPC_IM
 (
r›
), 
∫d_im
);

87 i‡(
√g©ive_zîo
) {

88 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

89 
öex_im
 = -inex_im;

92  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

94 i‡(
ª_cmp
 == 0) {

95 i‡(
im_cmp
 > 0) {

96 
öex_ª
 = 
	`mp‰_log
 (
	`MPC_RE
 (
r›
), 
	`MPC_IM
 (
›
), 
	`MPC_RND_RE
 (
∫d
));

97 
öex_im
 = 
	`mp‰_c⁄°_pi
 (
	`MPC_IM
 (
r›
), 
	`MPC_RND_IM
 (
∫d
));

99 
	`mp‰_div_2ui
 (
	`MPC_IM
 (
r›
), MPC_IM (r›), 1, 
GMP_RNDN
);

102 
w
 [0] = *
	`MPC_IM
 (
›
);

103 
	`MPFR_CHANGE_SIGN
 (
w
);

104 
öex_ª
 = 
	`mp‰_log
 (
	`MPC_RE
 (
r›
), 
w
, 
	`MPC_RND_RE
 (
∫d
));

105 
öex_im
 = 
	`mp‰_c⁄°_pi
 (
	`MPC_IM
 (
r›
), 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

107 
	`mp‰_div_2ui
 (
	`MPC_IM
 (
r›
), MPC_IM (r›), 1, 
GMP_RNDN
);

108 
	`mp‰_√g
 (
	`MPC_IM
 (
r›
), MPC_IM (r›), 
GMP_RNDN
);

109 
öex_im
 = -inex_im;

111  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

114 
¥ec
 = 
	`MPC_PREC_RE
(
r›
);

115 
	`mp‰_öô2
 (
w
, 
¥ec
);

119 
lo›s
 ++;

120 
¥ec
 +(
lo›s
 <2Ë? 
	`mpc_˚û_log2
 (prec) + 4 :Örec / 2;

121 
	`mp‰_£t_¥ec
 (
w
, 
¥ec
);

124 
	`mpc_n‹m
 (
w
, 
›
, 
GMP_RNDD
);

127 i‡(
	`mp‰_öf_p
 (
w
))

130 
ok
 = 1;

132 
	`mp‰_log
 (
w
, w, 
GMP_RNDD
);

135 i‡(
	`MPFR_EXP
 (
w
) >= 2)

136 
ok
 = 
	`mp‰_ˇn_round
 (
w
, 
¥ec
 - 2, 
GMP_RNDD
, 
	`MPC_RND_RE
(
∫d
), 
	`MPC_PREC_RE
(
r›
));

138 
ok
 = 
	`mp‰_ˇn_round
 (
w
, 
¥ec
 - 3 + 
	`MPFR_EXP
 (w), 
GMP_RNDD
, 
	`MPC_RND_RE
(
∫d
), 
	`MPC_PREC_RE
(
r›
));

140 } 
ok
 == 0);

143 
öex_im
 = 
	`mp‰_©™2
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RE
 (op),

144 
	`MPC_RND_IM
 (
∫d
));

147 
öex_ª
 = 
	`mp‰_div_2ui
 (
	`MPC_RE
(
r›
), 
w
, 1ul, 
	`MPC_RND_RE
 (
∫d
));

148 
	`mp‰_˛ór
 (
w
);

149  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

150 
	}
}

	@src/mem.c

22 
	~<°rög.h
>

23 
	~"mpc-im∂.h
"

26 
	$mpc_Æloc_°r
 (
size_t
 
Àn
)

28 * (*
Ælocfunc
Ë(
size_t
);

29 
	`mp_gë_mem‹y_fun˘i⁄s
 (&
Ælocfunc
, 
NULL
, NULL);

30  (*Ë((*
Ælocfunc
Ë(
Àn
));

31 
	}
}

34 
	$mpc_ªÆloc_°r
 (* 
°r
, 
size_t
 
ﬁdÀn
, size_à
√wÀn
)

36 * (*
ªÆlocfunc
Ë(*, 
size_t
, size_t);

37 
	`mp_gë_mem‹y_fun˘i⁄s
 (
NULL
, &
ªÆlocfunc
, NULL);

38  (*Ë((*
ªÆlocfunc
Ë(
°r
, 
ﬁdÀn
, 
√wÀn
));

39 
	}
}

42 
	$mpc_‰ì_°r
 (*
°r
)

44 (*
‰ìfunc
Ë(*, 
size_t
);

45 
	`mp_gë_mem‹y_fun˘i⁄s
 (
NULL
, NULL, &
‰ìfunc
);

46 (*
‰ìfunc
Ë(
°r
, 
	`°æí
 (str) + 1);

47 
	}
}

	@src/mpc-impl.h

22 #i‚de‡
__MPC_IMPL_H


23 
	#__MPC_IMPL_H


	)

25 
	~<°dlib.h
>

27 
	~"c⁄fig.h
"

29 #i‚de‡
__MPC_TESTS_H


30 
	#__MPC_WITHIN_MPC
 1

	)

33 
	~"mpc.h
"

35 
	#MPC_RE
(
x
Ë((x)->
ª
)

	)

36 
	#MPC_IM
(
x
Ë((x)->
im
)

	)

42 
	#MPC_MAX
(
h
,
i
Ë((hË> (iË? (hË: (i))

	)

46 #ifde‡
SAFE_ABS


47 #unde‡
SAFE_ABS


49 
	#SAFE_ABS
(
ty≥
,
x
Ë((xË>0 ? (ty≥)(xË: -—y≥)(x))

	)

56 #i‚de‡
BITS_PER_MP_LIMB


57 
	#BITS_PER_MP_LIMB
 
mp_bôs_≥r_limb


	)

60 
	#MPFR_PREC
(
x
Ë
	`mp‰_gë_¥ec
(x)

	)

61 
	#MPFR_EXP
(
x
Ë
	`mp‰_gë_exp
(x)

	)

63 
	#MPFR_SIGNBIT
(
x
Ë(
	`mp‰_signbô
 (xË? -1 : 1)

	)

64 
	#MPC_MPFR_SIGN
(
x
Ë(
	`mp‰_zîo_p
 (x)? 0 : 
	`MPFR_SIGNBIT
 (x))

	)

66 
	#MPFR_CHANGE_SIGN
(
x
Ë
	`mp‰_√g
(x,x,
GMP_RNDN
)

	)

67 
	#MPFR_IS_SINGULAR
(
x
Ë(
	`mp‰_«n_p
(xË|| 
	`mp‰_öf_p
(xË|| 
	`mp‰_zîo_p
(x))

	)

68 
	#MPFR_COPYSIGN
(
x
,
y
,
z
,
∫d
Ë(
	`mp‰_«n_p
 (z) ? \

69 
	`mp‰_£tsign
 (
x
, 
y
, 0, 
∫d
) : \

70 
	`mp‰_c›ysign
 (
x
, 
y
, 
z
, 
∫d
))

	)

72 
	#MPFR_SWAP
(
a
,
b
Ëdÿ{ 
mp‰_§˝å
 
tmp
;Åm∞a;á = b; b =Åmp; } 0)

	)

79 
	#MPC_PREC_RE
(
x
Ë(
	`MPFR_PREC
(
	`MPC_RE
(x)))

	)

80 
	#MPC_PREC_IM
(
x
Ë(
	`MPFR_PREC
(
	`MPC_IM
(x)))

	)

81 
	#MPC_MAX_PREC
(
x
Ë
	`MPC_MAX
(
	`MPC_PREC_RE
(x), 
	`MPC_PREC_IM
(x))

	)

83 
	#INV_RND
(
r
) \

84 (((
r
Ë=
GMP_RNDU
Ë? 
GMP_RNDD
 : ((‘Ë=GMP_RNDDË? GMP_RNDU : (r)))

	)

86 
	#mpc_öf_p
(
z
Ë(
	`mp‰_öf_p
(
	`MPC_RE
(z))||mp‰_öf_p(
	`MPC_IM
(z)))

	)

89 
	#mpc_zîo_p
(
z
Ë(
	`mp‰_zîo_p
(
	`MPC_RE
(z))&&mp‰_zîo_p(
	`MPC_IM
(z)))

	)

92 
	#mpc_fö_p
(
z
Ë(
	`mp‰_numbî_p
(
	`MPC_RE
(z))&&mp‰_numbî_p(
	`MPC_IM
(z)))

	)

94 
	#mpc_«n_p
(
z
Ë((
	`mp‰_«n_p
(
	`MPC_RE
(z)Ë&& !
	`mp‰_öf_p
(
	`MPC_IM
(z))Ë|| (mp‰_«n_p(MPC_IM(z)Ë&& !mp‰_öf_p(MPC_RE(z))))

	)

98 
	#OUT
(
x
) \

100 
	`¥ötf
 (#x "[%lu,%lu]=", (Ë
	`MPC_PREC_RE
 (
x
), \

101 (Ë
	`MPC_PREC_IM
 (
x
)); \

102 
	`mpc_out_°r
 (
°dout
, 2, 0, 
x
, 
MPC_RNDNN
); \

103 
	`¥ötf
 ("\n"); \

104 } 0)

	)

107 #i‡
deföed
 (
__˝lu•lus
)

108 
ölöe


109 
	gmp‰_∫d_t
 & 
	g›î©‹
++(mp‰_∫d_à&
	g∫d
)

111  
	g∫d
 = 
mp‰_∫d_t
(
∫d
 + 1);

120 
	#MPC_ASSERT
(
ex¥
) \

122 i‡(!(
ex¥
)) \

124 
	`Ârötf
 (
°dîr
, "%s:%d: MPCássertion failed: %s\n", \

125 
__FILE__
, 
__LINE__
, #expr); \

126 
	`ab‹t
(); \

128 } 0)

	)

135 #i‚de‡
MUL_KARATSUBA_THRESHOLD


136 
	#MUL_KARATSUBA_THRESHOLD
 23

	)

144 #i‡
deföed
 (
__˝lu•lus
)

148 
__MPC_DECLSPEC
 
mpc_mul_«ive
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

149 
__MPC_DECLSPEC
 
mpc_mul_k¨©suba
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

150 
__MPC_DECLSPEC
 * 
mpc_Æloc_°r
 
__MPC_PROTO
 ((
size_t
));

151 
__MPC_DECLSPEC
 * 
mpc_ªÆloc_°r
 
__MPC_PROTO
 ((*, 
size_t
, size_t));

152 
__MPC_DECLSPEC
 
mpc_‰ì_°r
 
__MPC_PROTO
 ((*));

153 
__MPC_DECLSPEC
 
mpc_˚û_log2
 
__MPC_PROTO
 (());

155 #i‡
deföed
 (
__˝lu•lus
)

	@src/mpc.h

22 #i‚de‡
__MPC_H


23 
	#__MPC_H


	)

25 
	~"gmp.h
"

26 
	~"mp‰.h
"

29 
	#MPC_VERSION_MAJOR
 0

	)

30 
	#MPC_VERSION_MINOR
 8

	)

31 
	#MPC_VERSION_PATCHLEVEL
 2

	)

32 
	#MPC_VERSION_STRING
 "0.8.2"

	)

35 
	#MPC_VERSION_NUM
(
a
,
b
,
c
Ë((◊Ë<< 16LË| ((bË<< 8Ë| (c))

	)

36 
	#MPC_VERSION
 \

37 
	`MPC_VERSION_NUM
(
MPC_VERSION_MAJOR
,
MPC_VERSION_MINOR
,
MPC_VERSION_PATCHLEVEL
)

	)

40 #i‡
deföed
 (
_GMP_H_HAVE_FILE
)

41 
	#_MPC_H_HAVE_FILE
 1

	)

45 #i‡
deföed
 (
INTMAX_C
Ë&& deföed (
UINTMAX_C
)

46 
	#_MPC_H_HAVE_INTMAX_T
 1

	)

52 
	#MPC_INEX_POS
(
öex
Ë(((öexË< 0Ë? 2 : ((öexË=0Ë? 0 : 1)

	)

54 
	#MPC_INEX_NEG
(
öex
Ë(((öexË=2Ë? -1 : ((öexË=0Ë? 0 : 1)

	)

61 
	#MPC_INEX
(
öex_ª
, 
öex_im
) \

62 (
	`MPC_INEX_POS
(
öex_ª
Ë| (MPC_INEX_POS(
öex_im
Ë<< 2))

	)

63 
	#MPC_INEX_RE
(
öex
Ë
	`MPC_INEX_NEG
((öexË& 3)

	)

64 
	#MPC_INEX_IM
(
öex
Ë
	`MPC_INEX_NEG
((öexË>> 2)

	)

70 
	tmpc_∫d_t
;

72 
	#RNDC
(
r1
,
r2
Ë((()‘1)Ë+ (()‘2Ë<< 4))

	)

73 
	#MPC_RND_RE
(
x
Ë((
mp_∫d_t
)((xË& 0x0F))

	)

74 
	#MPC_RND_IM
(
x
Ë((
mp_∫d_t
)((xË>> 4))

	)

76 
	#MPC_RNDNN
 
	`RNDC
(
GMP_RNDN
,GMP_RNDN)

	)

77 
	#MPC_RNDNZ
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDZ
)

	)

78 
	#MPC_RNDNU
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDU
)

	)

79 
	#MPC_RNDND
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDD
)

	)

81 
	#MPC_RNDZN
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDN
)

	)

82 
	#MPC_RNDZZ
 
	`RNDC
(
GMP_RNDZ
,GMP_RNDZ)

	)

83 
	#MPC_RNDZU
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDU
)

	)

84 
	#MPC_RNDZD
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDD
)

	)

86 
	#MPC_RNDUN
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDN
)

	)

87 
	#MPC_RNDUZ
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDZ
)

	)

88 
	#MPC_RNDUU
 
	`RNDC
(
GMP_RNDU
,GMP_RNDU)

	)

89 
	#MPC_RNDUD
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDD
)

	)

91 
	#MPC_RNDDN
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDN
)

	)

92 
	#MPC_RNDDZ
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDZ
)

	)

93 
	#MPC_RNDDU
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDU
)

	)

94 
	#MPC_RNDDD
 
	`RNDC
(
GMP_RNDD
,GMP_RNDD)

	)

100 
mp‰_t
 
	mª
;

101 
mp‰_t
 
	mim
;

103 
	t__mpc_°ru˘
;

105 
__mpc_°ru˘
 
	tmpc_t
[1];

106 
__mpc_°ru˘
 *
	tmpc_±r
;

107 
__gmp_c⁄°
 
	t__mpc_°ru˘
 *
	tmpc_§˝å
;

110 #i‡
deföed
 (
__GMP_PROTO
)

111 
	#__MPC_PROTO
 
__GMP_PROTO


	)

112 #ñi‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

113 
	#__MPC_PROTO
(
x
Ë
	)
x

115 
	#__MPC_PROTO
(
x
Ë()

	)

121 #i‡
deföed
(
__MPC_WITHIN_MPC
Ë&& 
__GMP_LIBGMP_DLL


122 
	#__MPC_DECLSPEC
 
__GMP_DECLSPEC_EXPORT


	)

124 
	#__MPC_DECLSPEC
 
__GMP_DECLSPEC


	)

127 #i‡
deföed
 (
__˝lu•lus
)

131 
__MPC_DECLSPEC
 
mpc_add
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

132 
__MPC_DECLSPEC
 
mpc_add_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

133 
__MPC_DECLSPEC
 
mpc_add_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

134 
__MPC_DECLSPEC
 
mpc_sub
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

135 
__MPC_DECLSPEC
 
mpc_sub_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

136 
__MPC_DECLSPEC
 
mpc_‰_sub
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_§˝å
, 
mpc_∫d_t
));

137 
__MPC_DECLSPEC
 
mpc_sub_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

138 
__MPC_DECLSPEC
 
mpc_ui_ui_sub
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_§˝å
, 
mpc_∫d_t
));

139 
__MPC_DECLSPEC
 
mpc_mul
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

140 
__MPC_DECLSPEC
 
mpc_mul_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

141 
__MPC_DECLSPEC
 
mpc_mul_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

142 
__MPC_DECLSPEC
 
mpc_mul_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

143 
__MPC_DECLSPEC
 
mpc_mul_i
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

144 
__MPC_DECLSPEC
 
mpc_sqr
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

145 
__MPC_DECLSPEC
 
mpc_div
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

146 
__MPC_DECLSPEC
 
mpc_pow
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

147 
__MPC_DECLSPEC
 
mpc_pow_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

148 
__MPC_DECLSPEC
 
mpc_pow_ld
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

149 
__MPC_DECLSPEC
 
mpc_pow_d
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

150 
__MPC_DECLSPEC
 
mpc_pow_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

151 
__MPC_DECLSPEC
 
mpc_pow_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

152 
__MPC_DECLSPEC
 
mpc_pow_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpz_§˝å
, 
mpc_∫d_t
));

153 
__MPC_DECLSPEC
 
mpc_div_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

154 
__MPC_DECLSPEC
 
mpc_‰_div
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_§˝å
, 
mpc_∫d_t
));

155 
__MPC_DECLSPEC
 
mpc_div_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

156 
__MPC_DECLSPEC
 
mpc_ui_div
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_§˝å
, 
mpc_∫d_t
));

157 
__MPC_DECLSPEC
 
mpc_div_2exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

158 
__MPC_DECLSPEC
 
mpc_mul_2exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

159 
__MPC_DECLSPEC
 
mpc_c⁄j
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

160 
__MPC_DECLSPEC
 
mpc_√g
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

161 
__MPC_DECLSPEC
 
mpc_n‹m
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp_∫d_t
));

162 
__MPC_DECLSPEC
 
mpc_abs
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp_∫d_t
));

163 
__MPC_DECLSPEC
 
mpc_sqπ
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

164 
__MPC_DECLSPEC
 
mpc_£t
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

165 
__MPC_DECLSPEC
 
mpc_£t_d
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

166 
__MPC_DECLSPEC
 
mpc_£t_d_d
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

167 
__MPC_DECLSPEC
 
mpc_£t_ld
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

168 
__MPC_DECLSPEC
 
mpc_£t_ld_ld
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

169 
__MPC_DECLSPEC
 
mpc_£t_f
 
__MPC_PROTO
 ((
mpc_±r
, 
mpf_§˝å
, 
mpc_∫d_t
));

170 
__MPC_DECLSPEC
 
mpc_£t_f_f
 
__MPC_PROTO
 ((
mpc_±r
, 
mpf_§˝å
, mpf_§˝å, 
mpc_∫d_t
));

171 
__MPC_DECLSPEC
 
mpc_£t_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_∫d_t
));

172 
__MPC_DECLSPEC
 
mpc_£t_‰_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, mp‰_§˝å, 
mpc_∫d_t
));

173 
__MPC_DECLSPEC
 
mpc_£t_q
 
__MPC_PROTO
 ((
mpc_±r
, 
mpq_§˝å
, 
mpc_∫d_t
));

174 
__MPC_DECLSPEC
 
mpc_£t_q_q
 
__MPC_PROTO
 ((
mpc_±r
, 
mpq_§˝å
, mpq_§˝å, 
mpc_∫d_t
));

175 
__MPC_DECLSPEC
 
mpc_£t_si
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

176 
__MPC_DECLSPEC
 
mpc_£t_si_si
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

177 
__MPC_DECLSPEC
 
mpc_£t_ui
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

178 
__MPC_DECLSPEC
 
mpc_£t_ui_ui
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

179 
__MPC_DECLSPEC
 
mpc_£t_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpz_§˝å
, 
mpc_∫d_t
));

180 
__MPC_DECLSPEC
 
mpc_£t_z_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpz_§˝å
, mpz_§˝å, 
mpc_∫d_t
));

181 
__MPC_DECLSPEC
 
mpc_sw≠
 
__MPC_PROTO
 ((
mpc_±r
, mpc_ptr));

183 #ifde‡
_MPC_H_HAVE_INTMAX_T


184 
__MPC_DECLSPEC
 
mpc_£t_sj
 
__MPC_PROTO
 ((
mpc_±r
, 
ötmax_t
, 
mpc_∫d_t
));

185 
__MPC_DECLSPEC
 
mpc_£t_uj
 
__MPC_PROTO
 ((
mpc_±r
, 
uötmax_t
, 
mpc_∫d_t
));

186 
__MPC_DECLSPEC
 
mpc_£t_sj_sj
 
__MPC_PROTO
 ((
mpc_±r
, 
ötmax_t
, i¡max_t, 
mpc_∫d_t
));

187 
__MPC_DECLSPEC
 
mpc_£t_uj_uj
 
__MPC_PROTO
 ((
mpc_±r
, 
uötmax_t
, uötmax_t, 
mpc_∫d_t
));

190 
__MPC_DECLSPEC
 
mpc_£t_«n
 
__MPC_PROTO
 ((
mpc_±r
));

192 
__MPC_DECLSPEC
 
mpc_ªÆ
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

193 
__MPC_DECLSPEC
 
mpc_imag
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

194 
__MPC_DECLSPEC
 
mpc_¨g
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

195 
__MPC_DECLSPEC
 
mpc_¥oj
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

196 
__MPC_DECLSPEC
 
mpc_cmp
 
__MPC_PROTO
 ((
mpc_§˝å
, mpc_srcptr));

197 
__MPC_DECLSPEC
 
mpc_cmp_si_si
 
__MPC_PROTO
 ((
mpc_§˝å
, , ));

198 
__MPC_DECLSPEC
 
mpc_exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

199 
__MPC_DECLSPEC
 
mpc_log
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

200 
__MPC_DECLSPEC
 
mpc_sö
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

201 
__MPC_DECLSPEC
 
mpc_cos
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

202 
__MPC_DECLSPEC
 
mpc_èn
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

203 
__MPC_DECLSPEC
 
mpc_söh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

204 
__MPC_DECLSPEC
 
mpc_cosh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

205 
__MPC_DECLSPEC
 
mpc_ènh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

206 
__MPC_DECLSPEC
 
mpc_asö
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

207 
__MPC_DECLSPEC
 
mpc_acos
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

208 
__MPC_DECLSPEC
 
mpc_©™
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

209 
__MPC_DECLSPEC
 
mpc_asöh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

210 
__MPC_DECLSPEC
 
mpc_acosh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

211 
__MPC_DECLSPEC
 
mpc_©™h
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

212 
__MPC_DECLSPEC
 
mpc_˛ór
 
__MPC_PROTO
 ((
mpc_±r
));

213 
__MPC_DECLSPEC
 
mpc_uøndom
 
__MPC_PROTO
 ((
mpc_±r
, 
gmp_ønd°©e_t
));

214 
__MPC_DECLSPEC
 
mpc_öô2
 
__MPC_PROTO
 ((
mpc_±r
, 
mp_¥ec_t
));

215 
__MPC_DECLSPEC
 
mpc_öô3
 
__MPC_PROTO
 ((
mpc_±r
, 
mp_¥ec_t
, mp_prec_t));

216 
__MPC_DECLSPEC
 
mp_¥ec_t
 
mpc_gë_¥ec
 
__MPC_PROTO
((
mpc_§˝å
 
x
));

217 
__MPC_DECLSPEC
 
mpc_gë_¥ec2
 
__MPC_PROTO
((
mp_¥ec_t
 *
¥
, mp_¥ec_à*
pi
, 
mpc_§˝å
 
x
));

218 
__MPC_DECLSPEC
 
mpc_£t_¥ec
 
__MPC_PROTO
 ((
mpc_±r
, 
mp_¥ec_t
));

219 
__MPC_DECLSPEC
 
__gmp_c⁄°
 * 
mpc_gë_vîsi⁄
 
__MPC_PROTO
 (());

221 
__MPC_DECLSPEC
 
mpc_°πoc
 
_MPFR_PROTO
 ((
mpc_±r
, c⁄° *, **, , 
mpc_∫d_t
));

222 
__MPC_DECLSPEC
 
mpc_£t_°r
 
_MPFR_PROTO
 ((
mpc_±r
, c⁄° *, , 
mpc_∫d_t
));

223 
__MPC_DECLSPEC
 * 
mpc_gë_°r
 
_MPFR_PROTO
 ((, 
size_t
, 
mpc_§˝å
, 
mpc_∫d_t
));

224 
__MPC_DECLSPEC
 
mpc_‰ì_°r
 
_MPFR_PROTO
 ((*));

225 #ifde‡
_MPC_H_HAVE_FILE


226 
__MPC_DECLSPEC
 
mpc_öp_°r
 
__MPC_PROTO
 ((
mpc_±r
, 
FILE
 *, 
size_t
 *, , 
mpc_∫d_t
));

227 
__MPC_DECLSPEC
 
size_t
 
mpc_out_°r
 
__MPC_PROTO
 ((
FILE
 *, , size_t, 
mpc_§˝å
, 
mpc_∫d_t
));

230 #i‡
deföed
 (
__˝lu•lus
)

234 
	#mpc_ªÆªf
(
x
Ë((x)->
ª
)

	)

235 
	#mpc_imagªf
(
x
Ë((x)->
im
)

	)

237 
	#mpc_add_si
(
x
, 
y
, 
z
, 
∫d
) \

238 –(
z
Ë>0 ? 
	`mpc_add_ui
 ((
x
), (
y
), (Ë(z), (
∫d
)Ë: 
	`mpc_sub_ui
 ((x), (y), (Ë(-(z)), (∫d)Ë)

	)

239 
	#mpc_cmp_si
(
x
, 
y
) \

240 –
	`mpc_cmp_si_si
 ((
x
), (
y
), 0lË)

	)

241 
	#mpc_ui_sub
(
x
, 
y
, 
z
, 
r
Ë
	`mpc_ui_ui_sub
 (x, y, 0ul, z,Ñ)

	)

249 #i‚de‡
mp‰_£t_‰


250 
	#mp‰_£t_‰
 
mp‰_£t


	)

252 
	#MPC_SET_X_Y
(
ªÆ_t
, 
imag_t
, 
z
, 
ªÆ_vÆue
, 
imag_vÆue
, 
∫d
) \

254 
_öex_ª
, 
_öex_im
; \

255 
_öex_ª
 = (
mp‰_£t_
 ## 
ªÆ_t
Ë(
	`mpc_ªÆªf
 (
z
), (
ªÆ_vÆue
), 
	`MPC_RND_RE
 (
∫d
)); \

256 
_öex_im
 = (
mp‰_£t_
 ## 
imag_t
Ë(
	`mpc_imagªf
 (
z
), (
imag_vÆue
), 
	`MPC_RND_IM
 (
∫d
)); \

257  
	`MPC_INEX
 (
_öex_ª
, 
_öex_im
); \

258 }

	)

	@src/mul.c

22 
	~"mpc-im∂.h
"

24 
mul_öföôe
 (
mpc_±r
 
a
, 
mpc_§˝å
 
u
, mpc_§˝å 
v
);

25 
mul_puª_imagö¨y
 (
mpc_±r
 
a
, 
mpc_§˝å
 
u
, 
mp‰_§˝å
 
y
,

26 
mpc_∫d_t
 
∫d
, 
ovîœp
);

33 
	$mpc_mul
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, mpc_§˝å 
c
, 
mpc_∫d_t
 
∫d
)

35 
brs
, 
bis
, 
¸s
, 
cis
;

40 i‡(
	`mpc_öf_p
 (
b
))

41  
	`mul_öföôe
 (
a
, 
b
, 
c
);

42 i‡(
	`mpc_öf_p
 (
c
))

43  
	`mul_öföôe
 (
a
, 
c
, 
b
);

46 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
b
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (b))

47 || 
	`mp‰_«n_p
 (
	`MPC_RE
 (
c
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (c)))

49 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
a
));

50 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
a
));

51  
	`MPC_INEX
 (0, 0);

55 
brs
 = 
	`MPFR_SIGNBIT
 (
	`MPC_RE
 (
b
));

56 
bis
 = 
	`MPFR_SIGNBIT
 (
	`MPC_IM
 (
b
));

57 
¸s
 = 
	`MPFR_SIGNBIT
 (
	`MPC_RE
 (
c
));

58 
cis
 = 
	`MPFR_SIGNBIT
 (
	`MPC_IM
 (
c
));

61 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
b
)))

63 
öex
;

64 
öex
 = 
	`mpc_mul_‰
 (
a
, 
c
, 
	`MPC_RE
 (
b
), 
∫d
);

68 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
a
)))

69 
	`mp‰_£tsign
 (
	`MPC_RE
 (
a
), MPC_RE (a), 
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDD


70 || (
brs
 !
¸s
 && 
bis
 =
cis
), 
GMP_RNDN
);

71 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
a
)))

72 
	`mp‰_£tsign
 (
	`MPC_IM
 (
a
), MPC_IM (a), 
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDD


73 || (
brs
 !
cis
 && 
bis
 !
¸s
), 
GMP_RNDN
);

75  
öex
;

77 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
c
)))

79 
öex
;

80 
öex
 = 
	`mpc_mul_‰
 (
a
, 
b
, 
	`MPC_RE
 (
c
), 
∫d
);

84 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
a
)))

85 
	`mp‰_£tsign
 (
	`MPC_RE
 (
a
), MPC_RE (a), 
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDD


86 || (
brs
 !
¸s
 && 
bis
 =
cis
), 
GMP_RNDN
);

87 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
a
)))

88 
	`mp‰_£tsign
 (
	`MPC_IM
 (
a
), MPC_IM (a), 
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDD


89 || (
brs
 !
cis
 && 
bis
 !
¸s
), 
GMP_RNDN
);

91  
öex
;

95 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
b
)))

97 
öex
;

98 
öex
 = 
	`mul_puª_imagö¨y
 (
a
, 
c
, 
	`MPC_IM
 (
b
), 
∫d
, (a == b ||á == c));

102 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
a
)))

103 
	`mp‰_£tsign
 (
	`MPC_IM
 (
a
), MPC_IM (a), 
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDD


104 || (
brs
 !
cis
 && 
bis
 !
¸s
), 
GMP_RNDN
);

106  
öex
;

108 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
c
)))

110  
	`mul_puª_imagö¨y
 (
a
, 
b
, 
	`MPC_IM
 (
c
), 
∫d
, (a == b ||á == c));

114 i‡–
	`SAFE_ABS
 (
mp_exp_t
, 
	`MPFR_EXP
 (
	`MPC_RE
 (
b
)Ë- MPFR_EXP (
	`MPC_IM
 (b)))

115 > (
mp_exp_t
Ë
	`MPC_MAX_PREC
 (
b
) / 2

116 || 
	`SAFE_ABS
 (
mp_exp_t
, 
	`MPFR_EXP
 (
	`MPC_RE
 (
c
)Ë- MPFR_EXP (
	`MPC_IM
 (c)))

117 > (
mp_exp_t
Ë
	`MPC_MAX_PREC
 (
c
) / 2)

118  
	`mpc_mul_«ive
 (
a
, 
b
, 
c
, 
∫d
);

120  ((
	`MPC_MAX_PREC
(
a
)

121 <(
mp_¥ec_t
Ë
MUL_KARATSUBA_THRESHOLD
 * 
BITS_PER_MP_LIMB
)

122 ? 
mpc_mul_«ive
 : 
mpc_mul_k¨©suba
Ë(
a
, 
b
, 
c
, 
∫d
);

123 
	}
}

127 
	$mul_öföôe
 (
mpc_±r
 
a
, 
mpc_§˝å
 
u
, mpc_§˝å 
v
)

130 
x
, 
y
;

133 
urs
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
u
)) ? -1 : 1;

134 
uis
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
u
)) ? -1 : 1;

135 
vrs
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
v
)) ? -1 : 1;

136 
vis
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
v
)) ? -1 : 1;

142 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
u
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (u))

143 || 
	`mp‰_«n_p
 (
	`MPC_RE
 (
v
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (v)))

145 
x
 = 0;

146 
y
 = 0;

148 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
u
)))

151 
x
 = 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
v
))

152 || (
	`mp‰_öf_p
 (
	`MPC_IM
 (
u
)Ë&& 
	`mp‰_zîo_p
 (MPC_IM (
v
)))

153 || (
	`mp‰_zîo_p
 (
	`MPC_IM
 (
u
)Ë&& 
	`mp‰_öf_p
 (MPC_IM (
v
)))

154 || ((
	`mp‰_öf_p
 (
	`MPC_IM
 (
u
)Ë|| mp‰_öf_∞(MPC_IM (
v
)))

155 && 
urs
*
vrs
 =
uis
*
vis
) ?

156 0 : 
urs
 * 
vrs
;

157 
y
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
 (
v
))

158 || (
	`mp‰_öf_p
 (
	`MPC_IM
 (
u
)Ë&& 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
v
)))

159 || (
	`mp‰_zîo_p
 (
	`MPC_IM
 (
u
)Ë&& 
	`mp‰_öf_p
 (
	`MPC_RE
 (
v
)))

160 || ((
	`mp‰_öf_p
 (
	`MPC_IM
 (
u
)) || mpfr_inf_p (MPC_IM (u)))

161 && 
urs
*
vis
 =-
uis
*
vrs
) ?

162 0 : 
urs
 * 
vis
;

167 
x
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
 (
v
))

168 || (
	`mp‰_zîo_p
 (
	`MPC_RE
 (
u
)Ë&& 
	`mp‰_öf_p
 (MPC_RE (
v
)))

169 || (
	`mp‰_öf_p
 (
	`MPC_RE
 (
v
)Ë&& 
urs
*
vrs
 =
uis
*
vis
) ?

170 0 : -
uis
 * 
vis
;

171 
y
 = 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
v
))

172 || (
	`mp‰_zîo_p
 (
	`MPC_RE
 (
u
)Ë&& 
	`mp‰_öf_p
 (
	`MPC_IM
 (
v
)))

173 || (
	`mp‰_öf_p
 (
	`MPC_IM
 (
v
)Ë&& 
urs
*
vis
 =-
uis
*
vrs
) ?

174 0 : 
uis
 * 
vrs
;

179 i‡(
x
 =0 && 
y
 ==0)

181 
ur
 = 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
u
)Ë|| 
	`mp‰_«n_p
 (MPC_RE (u)) ?

183 
ui
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
 (
u
)Ë|| 
	`mp‰_«n_p
 (MPC_IM (u)) ?

185 
vr
 = 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
v
)Ë|| 
	`mp‰_«n_p
 (MPC_RE (v)) ?

187 
vi
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
 (
v
)Ë|| 
	`mp‰_«n_p
 (MPC_IM (v)) ?

189 i‡(
	`mpc_öf_p
 (
u
))

191 
ur
 = 
	`mp‰_öf_p
 (
	`MPC_RE
 (
u
)) ? 1 : 0;

192 
ui
 = 
	`mp‰_öf_p
 (
	`MPC_IM
 (
u
)) ? 1 : 0;

194 i‡(
	`mpc_öf_p
 (
v
))

196 
vr
 = 
	`mp‰_öf_p
 (
	`MPC_RE
 (
v
)) ? 1 : 0;

197 
vi
 = 
	`mp‰_öf_p
 (
	`MPC_IM
 (
v
)) ? 1 : 0;

200 
x
 = 
urs
 * 
ur
 * 
vrs
 * 
vr
 - 
uis
 * 
ui
 * 
vis
 * 
vi
;

201 
y
 = 
urs
 * 
ur
 * 
vis
 * 
vi
 + 
uis
 * 
ui
 * 
vrs
 * 
vr
;

204 i‡(
x
 == 0)

205 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
a
));

207 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
a
), 
x
);

209 i‡(
y
 == 0)

210 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
a
));

212 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
a
), 
y
);

214  
	`MPC_INEX
 (0, 0);

215 
	}
}

218 
	$mul_puª_imagö¨y
 (
mpc_±r
 
a
, 
mpc_§˝å
 
u
, 
mp‰_§˝å
 
y
, 
mpc_∫d_t
 
∫d
,

219 
ovîœp
)

221 
öex_ª
, 
öex_im
;

222 
mpc_t
 
ªsu…
;

224 i‡(
ovîœp
)

225 
	`mpc_öô3
 (
ªsu…
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
)), MPFR_PREC (
	`MPC_IM
 (a)));

227 
ªsu…
 [0] = 
a
 [0];

229 
öex_ª
 = -
	`mp‰_mul
 (
	`MPC_RE
(
ªsu…
), 
	`MPC_IM
(
u
), 
y
, 
	`INV_RND
(
	`MPC_RND_RE
(
∫d
)));

230 
	`mp‰_√g
 (
	`MPC_RE
 (
ªsu…
), MPC_RE (ªsu…), 
GMP_RNDN
);

231 
öex_im
 = 
	`mp‰_mul
 (
	`MPC_IM
(
ªsu…
), 
	`MPC_RE
(
u
), 
y
, 
	`MPC_RND_IM
(
∫d
));

232 
	`mpc_£t
 (
a
, 
ªsu…
, 
MPC_RNDNN
);

234 i‡(
ovîœp
)

235 
	`mpc_˛ór
 (
ªsu…
);

237  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

238 
	}
}

241 
	$mpc_mul_«ive
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, mpc_§˝å 
c
, 
mpc_∫d_t
 
∫d
)

243 
ovîœp
, 
öex_ª
, 
öex_im
;

244 
mp‰_t
 
u
, 
v
, 
t
;

245 
mp_¥ec_t
 
¥ec
;

247 
ovîœp
 = (
a
 =
b
Ë|| (®=
c
);

249 
¥ec
 = 
	`MPC_MAX_PREC
(
b
Ë+ MPC_MAX_PREC(
c
);

251 
	`mp‰_öô2
 (
u
, 
¥ec
);

252 
	`mp‰_öô2
 (
v
, 
¥ec
);

257 
	`mp‰_mul
 (
u
, 
	`MPC_RE
(
b
), MPC_RE(
c
), 
GMP_RNDN
);

258 
	`mp‰_mul
 (
v
, 
	`MPC_IM
(
b
), MPC_IM(
c
), 
GMP_RNDN
);

260 i‡(
ovîœp
)

262 
	`mp‰_öô2
 (
t
, 
	`MPFR_PREC
(
	`MPC_RE
(
a
)));

263 
öex_ª
 = 
	`mp‰_sub
 (
t
, 
u
, 
v
, 
	`MPC_RND_RE
(
∫d
));

266 
öex_ª
 = 
	`mp‰_sub
 (
	`MPC_RE
(
a
), 
u
, 
v
, 
	`MPC_RND_RE
(
∫d
));

269 
	`mp‰_mul
 (
u
, 
	`MPC_RE
(
b
), 
	`MPC_IM
(
c
), 
GMP_RNDN
);

270 i‡(
b
 =
c
)

271 
öex_im
 = 
	`mp‰_mul_2exp
 (
	`MPC_IM
(
a
), 
u
, 1, 
	`MPC_RND_IM
(
∫d
));

274 
	`mp‰_mul
 (
v
, 
	`MPC_IM
(
b
), 
	`MPC_RE
(
c
), 
GMP_RNDN
);

275 
öex_im
 = 
	`mp‰_add
 (
	`MPC_IM
(
a
), 
u
, 
v
, 
	`MPC_RND_IM
(
∫d
));

278 
	`mp‰_˛ór
 (
u
);

279 
	`mp‰_˛ór
 (
v
);

281 i‡(
ovîœp
)

283 
	`mp‰_£t
 (
	`MPC_RE
(
a
), 
t
, 
GMP_RNDN
);

284 
	`mp‰_˛ór
 (
t
);

287  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

288 
	}
}

293 
	$mpc_mul_k¨©suba
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›1
, mpc_§˝å 
›2
, 
mpc_∫d_t
 
∫d
)

295 
mp‰_§˝å
 
a
, 
b
, 
c
, 
d
;

296 
mul_i
, 
ok
, 
öexa˘
, 
mul_a
, 
mul_c
, 
öex_ª
, 
öex_im
, 
sign_x
, 
sign_u
;

297 
mp‰_t
 
u
, 
v
, 
w
, 
x
;

298 
mp_¥ec_t
 
¥ec
, 
¥ec_ª
, 
¥ec_u
, 
¥ec_v
, 
¥ec_w
;

299 
mp_∫d_t
 
∫d_ª
, 
∫d_u
, 
∫d_x
;

300 
ovîœp
;

302 
mpc_t
 
ªsu…
;

310 
ovîœp
 = (
r›
 =
›1
Ë|| (r› =
›2
);

311 i‡(
ovîœp
)

312 
	`mpc_öô3
 (
ªsu…
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
r›
)),

313 
	`MPFR_PREC
 (
	`MPC_IM
 (
r›
)));

315 
ªsu…
 [0] = 
r›
 [0];

317 
a
 = 
	`MPC_RE
(
›1
);

318 
b
 = 
	`MPC_IM
(
›1
);

319 
c
 = 
	`MPC_RE
(
›2
);

320 
d
 = 
	`MPC_IM
(
›2
);

324 
mul_i
 = 0;

325 
mul_a
 = 1;

326 
mul_c
 = 1;

328 i‡(
	`mp‰_cmp_abs
 (
a
, 
b
) < 0)

330 
	`MPFR_SWAP
 (
a
, 
b
);

331 
mul_i
 ++;

332 
mul_a
 = -1;

335 i‡(
	`mp‰_cmp_abs
 (
c
, 
d
) < 0)

337 
	`MPFR_SWAP
 (
c
, 
d
);

338 
mul_i
 ++;

339 
mul_c
 = -1;

343 i‡(
mul_i
 % 2)

345 
¥ec_ª
 = 
	`MPFR_PREC
(
	`MPC_IM
(
r›
));

346 
∫d_ª
 = 
	`MPC_RND_IM
(
∫d
);

350 
¥ec_ª
 = 
	`MPFR_PREC
(
	`MPC_RE
(
r›
));

351 
∫d_ª
 = 
	`MPC_RND_RE
(
∫d
);

354 i‡(
mul_i
)

355 
∫d_ª
 = 
	`INV_RND
(rnd_re);

358 
¥ec
 = 
	`MPC_MAX_PREC
(
r›
);

360 
	`mp‰_öô2
 (
u
, 2);

361 
	`mp‰_öô2
 (
v
, 
¥ec_v
 = 
	`MPFR_PREC
(
a
Ë+ MPFR_PREC(
d
));

362 
	`mp‰_öô2
 (
w
, 
¥ec_w
 = 
	`MPFR_PREC
(
b
Ë+ MPFR_PREC(
c
));

363 
	`mp‰_öô2
 (
x
, 2);

365 
	`mp‰_mul
 (
v
, 
a
, 
d
, 
GMP_RNDN
);

366 i‡(
mul_a
 == -1)

367 
	`mp‰_√g
 (
v
, v, 
GMP_RNDN
);

369 
	`mp‰_mul
 (
w
, 
b
, 
c
, 
GMP_RNDN
);

370 i‡(
mul_c
 == -1)

371 
	`mp‰_√g
 (
w
, w, 
GMP_RNDN
);

374 
sign_x
 = 
	`mp‰_cmp_abs
 (
v
, 
w
);

375 i‡(
sign_x
 > 0)

376 
sign_x
 = 2 * 
	`mp‰_sgn
 (
v
Ë- mp‰_sg¿(
w
);

377 i‡(
sign_x
 == 0)

378 
sign_x
 = 
	`mp‰_sgn
 (
v
Ë- mp‰_sg¿(
w
);

380 
sign_x
 = 
	`mp‰_sgn
 (
v
Ë- 2 * mp‰_sg¿(
w
);

382 
sign_u
 = 
mul_a
 * 
	`mp‰_sgn
 (
a
Ë* 
mul_c
 * mp‰_sg¿(
c
);

384 i‡(
sign_x
 * 
sign_u
 < 0)

386 
	`MPFR_SWAP
 (
a
, 
c
);

387 
	`MPFR_SWAP
 (
b
, 
d
);

388 
	`mp‰_sw≠
 (
v
, 
w
);

389 { 
tmp
;Åm∞
mul_a
; mul_®
mul_c
; mul_c =Åmp; }

390 
sign_x
 = - sign_x;

397 
¥ec
 +
	`mpc_˚û_log2
 (prec) + 3;

399 
	`mp‰_£t_¥ec
 (
u
, 
¥ec_u
 = 
¥ec
);

400 
	`mp‰_£t_¥ec
 (
x
, 
¥ec
);

403 
∫d_u
 = (
	`mp‰_sgn
 (
a
Ë> 0Ë? 
GMP_RNDU
 : 
GMP_RNDD
;

404 i‡(
mul_a
 == -1)

405 
∫d_u
 = 
	`INV_RND
(rnd_u);

406 
öexa˘
 = ((
mul_a
 =-1Ë? 
mp‰_sub
 : 
mp‰_add
Ë(
u
, 
b
, 
a
, 
∫d_u
);

409 
∫d_x
 = (
	`mp‰_sgn
 (
c
Ë> 0Ë? 
GMP_RNDU
 : 
GMP_RNDD
;

410 
öexa˘
 |((
mul_c
 =-1Ë? 
mp‰_add
 : 
mp‰_sub
Ë(
x
, 
c
, 
d
, 
∫d_x
);

411 i‡(
mul_c
 == -1)

412 
	`mp‰_√g
 (
x
, x, 
GMP_RNDN
);

414 i‡(
öexa˘
 == 0)

415 
	`mp‰_¥ec_round
 (
u
, 
¥ec_u
 = 2 * 
¥ec
, 
GMP_RNDN
);

418 
∫d_u
 = (
sign_u
 > 0Ë? 
GMP_RNDU
 : 
GMP_RNDD
;

419 
öexa˘
 |
	`mp‰_mul
 (
u
, u, 
x
, 
∫d_u
);

424 i‡(
öexa˘
 == 0)

426 
mp_¥ec_t
 
¥ec_x
;

427 i‡(
	`mp‰_zîo_p
(
v
))

428 
¥ec_x
 = 
¥ec_w
;

429 i‡(
	`mp‰_zîo_p
(
w
))

430 
¥ec_x
 = 
¥ec_v
;

433 
¥ec_x
 = (
	`MPFR_EXP
(
v
Ë> MPFR_EXP(
w
)) ? MPFR_EXP(v) - MPFR_EXP(w)

434 : 
	`MPFR_EXP
(
w
Ë- MPFR_EXP(
v
);

435 
¥ec_x
 +
	`MPC_MAX
 (
¥ec_v
, 
¥ec_w
) + 1;

439 i‡(
¥ec_x
 > 
¥ec_u
)

440 
¥ec_x
 = 
¥ec_u
;

441 i‡(
¥ec_x
 > 
¥ec
)

442 
	`mp‰_¥ec_round
 (
x
, 
¥ec_x
, 
GMP_RNDN
);

445 
öexa˘
 |
	`mp‰_sub
 (
x
, 
v
, 
w
, 
∫d_u
);

448 i‡(
	`mp‰_sgn
 (
u
) == 0)

449 
∫d_u
 = (
	`mp‰_sgn
 (
x
Ë> 0Ë? 
GMP_RNDU
 : 
GMP_RNDD
;

450 
öexa˘
 |
	`mp‰_add
 (
u
, u, 
x
, 
∫d_u
);

452 
ok
 = 
öexa˘
 == 0 ||

453 
	`mp‰_ˇn_round
 (
u
, 
¥ec_u
 - 3, 
∫d_u
, 
GMP_RNDZ
,

454 
¥ec_ª
 + (
∫d_ª
 =
GMP_RNDN
));

458 
ok
 == 0);

462 i‡(
öexa˘
 != 0)

463 
öexa˘
 = 
	`mp‰_sgn
 (
u
);

465 i‡(
mul_i
 == 0)

467 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
(
ªsu…
), 
u
, 
	`MPC_RND_RE
(
∫d
));

468 i‡(
öex_ª
 == 0)

470 
öex_ª
 = 
öexa˘
;

471 
öex_im
 = 
	`mp‰_add
 (
	`MPC_IM
(
ªsu…
), 
v
, 
w
, 
	`MPC_RND_IM
(
∫d
));

474 
öex_im
 = 
	`mp‰_add
 (
	`MPC_IM
(
ªsu…
), 
v
, 
w
, 
	`MPC_RND_IM
(
∫d
));

476 i‡(
mul_i
 == 1)

478 
öex_im
 = 
	`mp‰_√g
 (
	`MPC_IM
(
ªsu…
), 
u
, 
	`MPC_RND_IM
(
∫d
));

479 i‡(
öex_im
 == 0)

481 
öex_im
 = -
öexa˘
;

482 
öex_ª
 = 
	`mp‰_add
 (
	`MPC_RE
(
ªsu…
), 
v
, 
w
, 
	`MPC_RND_RE
(
∫d
));

485 
öex_ª
 = 
	`mp‰_add
 (
	`MPC_RE
(
ªsu…
), 
v
, 
w
, 
	`MPC_RND_RE
(
∫d
));

489 
öex_ª
 = 
	`mp‰_√g
 (
	`MPC_RE
(
ªsu…
), 
u
, 
	`MPC_RND_RE
(
∫d
));

490 i‡(
öex_ª
 == 0)

492 
öex_ª
 = -
öexa˘
;

493 
öex_im
 = -
	`mp‰_add
 (
	`MPC_IM
(
ªsu…
), 
v
, 
w
,

494 
	`INV_RND
(
	`MPC_RND_IM
(
∫d
)));

495 
	`mp‰_√g
 (
	`MPC_IM
(
ªsu…
), MPC_IM‘esu…), 
	`MPC_RND_IM
(
∫d
));

499 
öex_im
 = -
	`mp‰_add
 (
	`MPC_IM
(
ªsu…
), 
v
, 
w
,

500 
	`INV_RND
(
	`MPC_RND_IM
(
∫d
)));

501 
	`mp‰_√g
 (
	`MPC_IM
(
ªsu…
), MPC_IM‘esu…), 
	`MPC_RND_IM
(
∫d
));

505 
	`mpc_£t
 (
r›
, 
ªsu…
, 
MPC_RNDNN
);

507 
	`mp‰_˛ór
 (
u
);

508 
	`mp‰_˛ór
 (
v
);

509 
	`mp‰_˛ór
 (
w
);

510 
	`mp‰_˛ór
 (
x
);

511 i‡(
ovîœp
)

512 
	`mpc_˛ór
 (
ªsu…
);

514  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

515 
	}
}

	@src/mul_2exp.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_mul_2exp
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_mul_2exp
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_mul_2exp
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/mul_fr.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_mul_‰
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

28 
mp‰_t
 
ªÆ
;

30 i‡(
c
 =
	`MPC_RE
 (
a
))

32 
	`mp‰_öô2
 (
ªÆ
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
)));

34 
ªÆ
 [0] = 
	`MPC_RE
 (
a
) [0];

36 
öex_ª
 = 
	`mp‰_mul
 (
ªÆ
, 
	`MPC_RE
(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

37 
öex_im
 = 
	`mp‰_mul
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

38 
	`mp‰_£t
 (
	`MPC_RE
 (
a
), 
ªÆ
, 
GMP_RNDN
);

40 i‡(
c
 =
	`MPC_RE
 (
a
))

41 
	`mp‰_˛ór
 (
ªÆ
);

43  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

44 
	}
}

	@src/mul_i.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_mul_i
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
sign
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

29 
mp‰_t
 
tmp
;

32 i‡–
	`MPFR_PREC
 (
	`MPC_RE
 (
b
)Ë=MPFR_PREC (
	`MPC_IM
 (
a
))

33 && 
	`MPFR_PREC
 (
	`MPC_IM
 (
b
)Ë=MPFR_PREC (
	`MPC_RE
 (
a
)))

35 i‡(
a
 =
b
)

36 
	`mp‰_sw≠
 (
	`MPC_RE
 (
a
), 
	`MPC_IM
 (a));

39 
	`mp‰_£t
 (
	`MPC_RE
 (
a
), 
	`MPC_IM
 (
b
), 
GMP_RNDN
);

40 
	`mp‰_£t
 (
	`MPC_IM
 (
a
), 
	`MPC_RE
 (
b
), 
GMP_RNDN
);

42 i‡(
sign
 >= 0)

43 
	`MPFR_CHANGE_SIGN
 (
	`MPC_RE
 (
a
));

45 
	`MPFR_CHANGE_SIGN
 (
	`MPC_IM
 (
a
));

46 
öex_ª
 = 0;

47 
öex_im
 = 0;

51 i‡(
a
 =
b
)

53 
	`mp‰_öô2
 (
tmp
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
)));

54 i‡(
sign
 >= 0)

56 
öex_ª
 = 
	`mp‰_√g
 (
tmp
, 
	`MPC_IM
 (
b
), 
	`MPC_RND_RE
 (
∫d
));

57 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
 (
a
), 
	`MPC_RE
 (
b
), 
	`MPC_RND_IM
 (
∫d
));

61 
öex_ª
 = 
	`mp‰_£t
 (
tmp
, 
	`MPC_IM
 (
b
), 
	`MPC_RND_RE
 (
∫d
));

62 
öex_im
 = 
	`mp‰_√g
 (
	`MPC_IM
 (
a
), 
	`MPC_RE
 (
b
), 
	`MPC_RND_IM
 (
∫d
));

64 
	`mp‰_˛ór
 (
	`MPC_RE
 (
a
));

65 
	`MPC_RE
 (
a
)[0] = 
tmp
 [0];

68 i‡(
sign
 >= 0)

70 
öex_ª
 = 
	`mp‰_√g
 (
	`MPC_RE
 (
a
), 
	`MPC_IM
 (
b
), 
	`MPC_RND_RE
 (
∫d
));

71 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
 (
a
), 
	`MPC_RE
 (
b
), 
	`MPC_RND_IM
 (
∫d
));

75 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
 (
a
), 
	`MPC_IM
 (
b
), 
	`MPC_RND_RE
 (
∫d
));

76 
öex_im
 = 
	`mp‰_√g
 (
	`MPC_IM
 (
a
), 
	`MPC_RE
 (
b
), 
	`MPC_RND_IM
 (
∫d
));

80  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

81 
	}
}

	@src/mul_si.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_mul_si
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_mul_si
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_mul_si
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/mul_ui.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_mul_ui
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_mul_ui
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_mul_ui
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
c
, 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/neg.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_√g
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_√g
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_√g
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/norm.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_n‹m
 (
mp‰_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_∫d_t
 
∫d
)

28 
mp‰_t
 
u
, 
v
;

29 
mp_¥ec_t
 
¥ec
;

30 
öexa˘
, 
ovîÊow
;

32 
¥ec
 = 
	`MPFR_PREC
(
a
);

36 i‡–(
	`mp‰_«n_p
 (
	`MPC_RE
 (
b
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (b)))

37 || (
	`mp‰_öf_p
 (
	`MPC_RE
 (
b
)Ë|| mp‰_öf_∞(
	`MPC_IM
 (b))))

38  
	`mpc_abs
 (
a
, 
b
, 
∫d
);

40 
	`mp‰_öô
 (
u
);

41 
	`mp‰_öô
 (
v
);

43 i‡(!
	`mp‰_zîo_p
(
	`MPC_RE
(
b
)Ë&& !mp‰_zîo_p(
	`MPC_IM
(b)) &&

44 2 * 
	`SAFE_ABS
 (
mp_exp_t
, 
	`MPFR_EXP
 (
	`MPC_RE
 (
b
)Ë- MPFR_EXP (
	`MPC_IM
 (b)))

45 > (
mp_exp_t
)
¥ec
)

50 
	`mp‰_£t_¥ec
 (
u
, 2 * 
	`MPFR_PREC
 (
	`MPC_RE
 (
b
)));

51 
	`mp‰_£t_¥ec
 (
v
, 2 * 
	`MPFR_PREC
 (
	`MPC_IM
 (
b
)));

52 
	`mp‰_sqr
 (
u
, 
	`MPC_RE
 (
b
), 
GMP_RNDN
);

53 
	`mp‰_sqr
 (
v
, 
	`MPC_IM
 (
b
), 
GMP_RNDN
);

54 
öexa˘
 = 
	`mp‰_add
 (
a
, 
u
, 
v
, 
∫d
);

60 
¥ec
 +
	`mpc_˚û_log2
 (prec) + 3;

62 
	`mp‰_£t_¥ec
 (
u
, 
¥ec
);

63 
	`mp‰_£t_¥ec
 (
v
, 
¥ec
);

65 
öexa˘
 = 
	`mp‰_sqr
 (
u
, 
	`MPC_RE
(
b
), 
GMP_RNDN
);

66 
öexa˘
 |
	`mp‰_sqr
 (
v
, 
	`MPC_IM
(
b
), 
GMP_RNDN
);

67 
öexa˘
 |
	`mp‰_add
 (
u
, u, 
v
, 
GMP_RNDN
);

69 
ovîÊow
 = 
	`mp‰_öf_p
 (
u
);

71 !
ovîÊow
 && 
öexa˘
 &&

72 
	`mp‰_ˇn_round
 (
u
, 
¥ec
 - 2, 
GMP_RNDN
, 
∫d
, 
	`MPFR_PREC
(
a
)) == 0);

74 
öexa˘
 |
	`mp‰_£t
 (
a
, 
u
, 
∫d
);

76 
	`mp‰_˛ór
 (
u
);

77 
	`mp‰_˛ór
 (
v
);

79  
öexa˘
;

80 
	}
}

	@src/out_str.c

22 
	~<°dio.h
>

23 
	~<˘y≥.h
>

24 
	~"mpc-im∂.h
"

26 
size_t


27 
	$mpc_out_°r
 (
FILE
 *
°ªam
, 
ba£
, 
size_t
 
n
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
) {

28 
size_t
 
size
 = 3;

30 i‡(
°ªam
 =
NULL
)

31 
°ªam
 = 
°dout
;

33 
	`Ârötf
 (
°ªam
, "(");

34 
size
 +
	`mp‰_out_°r
 (
°ªam
, 
ba£
, 
n
, 
	`MPC_RE
(
›
), 
	`MPC_RND_RE
(
∫d
));

35 
	`Ârötf
 (
°ªam
, " ");

36 
size
 +
	`mp‰_out_°r
 (
°ªam
, 
ba£
, 
n
, 
	`MPC_IM
(
›
), 
	`MPC_RND_RE
(
∫d
));

37 
	`Ârötf
 (
°ªam
, ")");

39  
size
;

40 
	}
}

	@src/pow.c

22 
	~<°dio.h
>

23 
	~"mpc-im∂.h
"

55 
	$mpc_≥r„˘_squ¨e_p
 (
mpz_t
 
a
, mpz_à
b
, mpz_à
c
, mpz_à
d
)

57 i‡(
	`mpz_cmp_ui
 (
d
, 0) == 0)

61 
	`MPC_ASSERT
 (
	`mpz_cmp_ui
 (
c
, 0) < 0);

62 
	`mpz_√g
 (
b
, 
c
);

63 i‡(
	`mpz_≥r„˘_squ¨e_p
 (
b
))

65 
	`mpz_sqπ
 (
b
, b);

66 
	`mpz_£t_ui
 (
a
, 0);

72 i‡(
	`mpz_divisibÀ_2exp_p
 (
d
, 1) == 0)

74 
	`mpz_mul
 (
a
, 
c
, c);

75 
	`mpz_addmul
 (
a
, 
d
, d);

76 i‡(
	`mpz_≥r„˘_squ¨e_p
 (
a
))

78 
	`mpz_sqπ
 (
a
,á);

79 
	`mpz_add
 (
a
, 
c
,á);

80 i‡(
	`mpz_divisibÀ_2exp_p
 (
a
, 1))

82 
	`mpz_tdiv_q_2exp
 (
a
,á, 1);

83 i‡(
	`mpz_≥r„˘_squ¨e_p
 (
a
))

85 
	`mpz_sqπ
 (
a
,á);

86 
	`mpz_tdiv_q_2exp
 (
b
, 
d
, 1);

87 
	`mpz_divexa˘
 (
b
, b, 
a
);

94 
	}
}

108 
	$mpc_pow_exa˘
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
mp‰_§˝å
 
y
, 
mpc_∫d_t
 
∫d
,

109 
mp_¥ec_t
 
max¥ec
)

111 
mp_exp_t
 
ec
, 
ed
, 
ey
, 
emö
, 
emax
;

112 
mpz_t
 
my
, 
a
, 
b
, 
c
, 
d
, 
u
;

113 
t
;

114 
ªt
 = -2;

116 
	`mpz_öô
 (
my
);

117 
	`mpz_öô
 (
a
);

118 
	`mpz_öô
 (
b
);

119 
	`mpz_öô
 (
c
);

120 
	`mpz_öô
 (
d
);

121 
	`mpz_öô
 (
u
);

123 
ey
 = 
	`mp‰_gë_z_exp
 (
my
, 
y
);

125 
t
 = 
	`mpz_sˇn1
 (
my
, 0);

126 
ey
 +
t
;

127 
	`mpz_tdiv_q_2exp
 (
my
, my, 
t
);

129 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
(
x
)))

131 
	`mpz_£t_ui
 (
c
, 0);

132 
ec
 = 0;

135 
ec
 = 
	`mp‰_gë_z_exp
 (
c
, 
	`MPC_RE
(
x
));

136 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
(
x
)))

138 
	`mpz_£t_ui
 (
d
, 0);

139 
ed
 = 
ec
;

143 
ed
 = 
	`mp‰_gë_z_exp
 (
d
, 
	`MPC_IM
(
x
));

144 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
(
x
)))

145 
ec
 = 
ed
;

149 i‡(
ec
 < 
ed
)

151 
	`mpz_mul_2exp
 (
d
, d, 
ed
 - 
ec
);

152 i‡(
	`mpz_sizeöba£
 (
d
, 2Ë> 
max¥ec
)

153 
íd
;

154 
ed
 = 
ec
;

156 i‡(
ed
 < 
ec
)

158 
	`mpz_mul_2exp
 (
c
, c, 
ec
 - 
ed
);

159 i‡(
	`mpz_sizeöba£
 (
c
, 2Ë> 
max¥ec
)

160 
íd
;

161 
ec
 = 
ed
;

166 i‡(
	`mpz_cmp_ui
 (
c
, 0) == 0)

168 
t
 = 
	`mpz_sˇn1
 (
d
, 0);

169 
	`mpz_tdiv_q_2exp
 (
d
, d, 
t
);

170 
ec
 +
t
;

172 i‡(
	`mpz_cmp_ui
 (
d
, 0) == 0)

174 
t
 = 
	`mpz_sˇn1
 (
c
, 0);

175 
	`mpz_tdiv_q_2exp
 (
c
, c, 
t
);

176 
ec
 +
t
;

180 
v
;

181 
t
 = 
	`mpz_sˇn1
 (
c
, 0);

182 
v
 = 
	`mpz_sˇn1
 (
d
, 0);

183 i‡(
v
 < 
t
)

184 
t
 = 
v
;

185 
	`mpz_tdiv_q_2exp
 (
c
, c, 
t
);

186 
	`mpz_tdiv_q_2exp
 (
d
, d, 
t
);

187 
ec
 +
t
;

192 
ey
 < 0)

195 i‡(
ec
 & 1)

197 
	`mpz_mul_2exp
 (
c
, c, 1);

198 
	`mpz_mul_2exp
 (
d
, d, 1);

199 
ec
 --;

202 i‡(
	`mpc_≥r„˘_squ¨e_p
 (
a
, 
b
, 
c
, 
d
) == 0)

204 
	`mpz_sw≠
 (
a
, 
c
);

205 
	`mpz_sw≠
 (
b
, 
d
);

206 
ec
 /= 2;

207 
ey
 ++;

210 i‡(
ey
 < 0)

212 
ªt
 = -1;

213 
íd
;

220 i‡(
	`mpz_cmp_ui
 (
my
, 0) < 0)

233 
	`mpz_mul
 (
a
, 
c
, c);

234 
	`mpz_addmul
 (
a
, 
d
, d);

235 
t
 = 
	`mpz_sˇn1
 (
a
, 0);

236 i‡(
	`mpz_sizeöba£
 (
a
, 2Ë!1 + 
t
)

238 
ªt
 = -1;

239 
íd
;

242 
	`mpz_√g
 (
d
, d);

243 
ec
 = -e¯- 
t
;

244 
	`mpz_√g
 (
my
, my);

251 
t
 = 
	`mpz_sizeöba£
 (
my
, 2) - 1;

252 
	`mpz_£t
 (
a
, 
c
);

253 
	`mpz_£t
 (
b
, 
d
);

254 
ed
 = 
ec
;

256 
t
-- > 0)

258 
v
, 
w
;

260 
	`mpz_mul
 (
u
, 
a
, 
b
);

261 
	`mpz_mul
 (
a
,á,á);

262 
	`mpz_submul
 (
a
, 
b
, b);

263 
	`mpz_mul_2exp
 (
b
, 
u
, 1);

264 
ed
 *= 2;

265 i‡(
	`mpz_t°bô
 (
my
, 
t
))

267 
	`mpz_mul
 (
u
, 
a
, 
c
);

268 
	`mpz_submul
 (
u
, 
b
, 
d
);

269 
	`mpz_mul
 (
b
, b, 
c
);

270 
	`mpz_addmul
 (
b
, 
a
, 
d
);

271 
	`mpz_sw≠
 (
a
, 
u
);

272 
ed
 +
ec
;

275 i‡(
	`mpz_cmp_ui
 (
a
, 0) == 0)

277 
w
 = 
	`mpz_sˇn1
 (
b
, 0);

278 
	`mpz_tdiv_q_2exp
 (
b
, b, 
w
);

279 
ed
 +
w
;

281 i‡(
	`mpz_cmp_ui
 (
b
, 0) == 0)

283 
w
 = 
	`mpz_sˇn1
 (
a
, 0);

284 
	`mpz_tdiv_q_2exp
 (
a
,á, 
w
);

285 
ed
 +
w
;

289 
w
 = 
	`mpz_sˇn1
 (
a
, 0);

290 
v
 = 
	`mpz_sˇn1
 (
b
, 0);

291 i‡(
v
 < 
w
)

292 
w
 = 
v
;

293 
	`mpz_tdiv_q_2exp
 (
a
,á, 
w
);

294 
	`mpz_tdiv_q_2exp
 (
b
, b, 
w
);

295 
ed
 +
w
;

297 i‡(
	`mpz_sizeöba£
 (
a
, 2Ë> 
max¥ec
 || mpz_sizeöba£ (
b
, 2) > maxprec)

298 
íd
;

302 
ey
-- > 0)

304 
ß
, 
sb
;

307 
	`mpz_mul
 (
u
, 
a
, 
b
);

308 
	`mpz_mul
 (
a
,á,á);

309 
	`mpz_submul
 (
a
, 
b
, b);

310 
	`mpz_mul_2exp
 (
b
, 
u
, 1);

311 
ed
 *= 2;

315 
ß
 = 
	`mpz_sˇn1
 (
a
, 0);

316 
sb
 = 
	`mpz_sˇn1
 (
b
, 0);

317 
ß
 = (ß <
sb
) ? sa : sb;

318 
	`mpz_tdiv_q_2exp
 (
a
,á, 
ß
);

319 
	`mpz_tdiv_q_2exp
 (
b
, b, 
ß
);

320 
ed
 +
ß
;

322 i‡(
	`mpz_sizeöba£
 (
a
, 2Ë> 
max¥ec
 || mpz_sizeöba£ (
b
, 2) > maxprec)

323 
íd
;

327 
emö
 = 
	`mp‰_gë_emö
 ();

328 
emax
 = 
	`mp‰_gë_emax
 ();

329 
	`mp‰_£t_emö
 (
	`mp‰_gë_emö_mö
 ());

330 
	`mp‰_£t_emax
 (
	`mp‰_gë_emax_max
 ());

331 
ªt
 = 
	`mp‰_£t_z
 (
	`MPC_RE
(
z
), 
a
, 
	`MPC_RND_RE
(
∫d
));

332 
ªt
 = 
	`MPC_INEX
‘ë, 
	`mp‰_£t_z
 (
	`MPC_IM
(
z
), 
b
, 
	`MPC_RND_IM
(
∫d
)));

333 
	`mp‰_mul_2si
 (
	`MPC_RE
(
z
), MPC_RE(z), 
ed
, 
	`MPC_RND_RE
(
∫d
));

334 
	`mp‰_mul_2si
 (
	`MPC_IM
(
z
), MPC_IM(z), 
ed
, 
	`MPC_RND_IM
(
∫d
));

336 
	`mp‰_£t_emö
 (
emö
);

337 
	`mp‰_£t_emax
 (
emax
);

339 
íd
:

340 
	`mpz_˛ór
 (
my
);

341 
	`mpz_˛ór
 (
a
);

342 
	`mpz_˛ór
 (
b
);

343 
	`mpz_˛ór
 (
c
);

344 
	`mpz_˛ór
 (
d
);

345 
	`mpz_˛ór
 (
u
);

347  
ªt
;

348 
	}
}

357 
	#MPFR_LIMB_HIGHBIT
 ((
mp_limb_t
Ë1 << (
BITS_PER_MP_LIMB
 - 1))

	)

359 
	$is_odd
 (
mp‰_§˝å
 
y
, 
mp_exp_t
 
k
)

361 
mp_exp_t
 
expo
;

362 
mp_¥ec_t
 
¥ec
;

363 
mp_size_t
 
yn
;

364 
mp_limb_t
 *
yp
;

366 
expo
 = 
	`mp‰_gë_exp
 (
y
Ë+ 
k
;

367 i‡(
expo
 <= 0)

370 
¥ec
 = 
	`mp‰_gë_¥ec
 (
y
);

371 i‡((
mp‰_¥ec_t
Ë
expo
 > 
¥ec
)

383 
¥ec
 = (’ª¯- 1Ë/ 
BITS_PER_MP_LIMB
 + 1Ë* BITS_PER_MP_LIMB - 
expo
;

386 
yn
 = 
¥ec
 / 
BITS_PER_MP_LIMB
;

389 
yp
 = 
y
->
_mp‰_d
;

391 i‡(
expo
 % 
BITS_PER_MP_LIMB
 =0 ? (
yp
[
yn
] & 1) == 0

392 : 
yp
[
yn
] << ((
expo
 % 
BITS_PER_MP_LIMB
Ë- 1Ë!
MPFR_LIMB_HIGHBIT
)

394 --
yn
 >= 0)

395 i‡(
yp
[
yn
] != 0)

398 
	}
}

403 
	$mpc_pow
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, mpc_§˝å 
y
, 
mpc_∫d_t
 
∫d
)

405 
ªt
 = -2, 
lo›
, 
x_ªÆ
, 
y_ªÆ
, 
z_ªÆ
 = 0, 
z_imag
 = 0;

406 
mpc_t
 
t
, 
u
;

407 
mp_¥ec_t
 
p
, 
q
, 
¥
, 
pi
, 
max¥ec
;

408 
Q
;

410 
x_ªÆ
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
(
x
));

411 
y_ªÆ
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
(
y
));

413 i‡(
y_ªÆ
 && 
	`mp‰_zîo_p
 (
	`MPC_RE
(
y
)))

415 i‡(
x_ªÆ
 && 
	`mp‰_zîo_p
 (
	`MPC_RE
(
x
)))

417 
	`mp‰_£t_«n
 (
	`MPC_RE
(
z
));

418 
	`mp‰_£t_«n
 (
	`MPC_IM
(
z
));

424 
mp‰_t
 
n
;

425 
öex
, 
cx1
;

426 
sign_zi
;

431 
	`mp‰_öô
 (
n
);

432 
öex
 = 
	`mpc_n‹m
 (
n
, 
x
, 
GMP_RNDN
);

433 
cx1
 = 
	`mp‰_cmp_ui
 (
n
, 1);

434 i‡(
cx1
 =0 && 
öex
 != 0)

435 
cx1
 = -
öex
;

437 
sign_zi
 = (
cx1
 < 0 && 
	`mp‰_signbô
 (
	`MPC_IM
 (
y
)) == 0)

438 || (
cx1
 == 0

439 && 
	`mp‰_signbô
 (
	`MPC_IM
 (
x
)Ë!mp‰_signbô (
	`MPC_RE
 (
y
)))

440 || (
cx1
 > 0 && 
	`mp‰_signbô
 (
	`MPC_IM
 (
y
)));

443 
ªt
 = 
	`mpc_£t_ui_ui
 (
z
, 1, 0, 
∫d
);

445 i‡(
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDD
 || 
sign_zi
)

446 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

448 
	`mp‰_˛ór
 (
n
);

449  
ªt
;

453 i‡(!
	`mpc_fö_p
 (
x
Ë|| !mpc_fö_∞(
y
))

456 
	`mpc_öô2
 (
u
, 2);

457 
	`mpc_log
 (
u
, 
x
, 
MPC_RNDNN
);

458 
	`mpc_mul
 (
u
, u, 
y
, 
MPC_RNDNN
);

459 
ªt
 = 
	`mpc_exp
 (
z
, 
u
, 
∫d
);

460 
	`mpc_˛ór
 (
u
);

461 
íd
;

464 i‡(
x_ªÆ
)

466 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
(
x
)))

469 
	`mpc_öô2
 (
u
, 2);

470 
	`mpc_log
 (
u
, 
x
, 
MPC_RNDNN
);

471 
	`mpc_mul
 (
u
, u, 
y
, 
MPC_RNDNN
);

472 
ªt
 = 
	`mpc_exp
 (
z
, 
u
, 
∫d
);

473 
	`mpc_˛ór
 (
u
);

474 
íd
;

478 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
x
), 1) == 0)

480 
s1
, 
s2
;

481 
s1
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
y
));

482 
s2
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
x
));

484 
ªt
 = 
	`mpc_£t_ui
 (
z
, +1, 
∫d
);

494 i‡(
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDD
 || 
s1
 !
s2
)

495 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

496 
íd
;

502 i‡(
y_ªÆ
 && (
	`mp‰_öãgî_p
 (
	`MPC_RE
(
y
)) ||

503 
	`mp‰_cmp_ui
 (
	`MPC_RE
(
x
), 0) >= 0))

505 
s1
, 
s2
;

506 
s1
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
y
));

507 
s2
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
x
));

509 
ªt
 = 
	`mp‰_pow
 (
	`MPC_RE
(
z
), MPC_RE(
x
), MPC_RE(
y
), 
	`MPC_RND_RE
(
∫d
));

510 
ªt
 = 
	`MPC_INEX
‘ë, 
	`mp‰_£t_ui
 (
	`MPC_IM
(
z
), 0, 
	`MPC_RND_IM
(
∫d
)));

520 i‡(
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDD
 || 
s1
 !
s2
)

521 
	`mp‰_√g
 (
	`MPC_IM
(
z
), MPC_IM(z), 
	`MPC_RND_IM
(
∫d
));

522 
íd
;

526 i‡(
	`mp‰_cmp_si
 (
	`MPC_RE
(
x
), -1Ë=0 && 
	`mp‰_öãgî_p
 (MPC_RE(
y
)))

527 
z_ªÆ
 = 1;

533 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
x
), 0Ë< 0 && 
	`is_odd
 (MPC_RE(
y
), 1) &&

534 (
y_ªÆ
 || 
	`mp‰_cmp_si
 (
	`MPC_RE
(
x
), -1) == 0))

535 
z_imag
 = 1;

542 i‡((
	`mpc_cmp_si_si
 (
x
, 0, 1) == 0 || mpc_cmp_si_si (x, 0, -1) == 0 ||

543 (
	`mp‰_cmp_ui
 (
	`MPC_RE
(
x
), 0Ë=0 && 
y_ªÆ
)) &&

544 
	`mp‰_öãgî_p
 (
	`MPC_RE
(
y
)))

546 i‡(
	`is_odd
 (
	`MPC_RE
(
y
), 0))

547 
z_imag
 = 1;

549 
z_ªÆ
 = 1;

552 i‡(
	`mp‰_cm∑bs
 (
	`MPC_RE
(
x
), 
	`MPC_IM
(x)Ë=0 && 
y_ªÆ
 &&

553 
	`mp‰_öãgî_p
 (
	`MPC_RE
(
y
)Ë&& 
	`is_odd
 (MPC_RE(y), 0) == 0)

555 i‡(
	`is_odd
 (
	`MPC_RE
(
y
), -1))

556 
z_imag
 = 1;

558 
z_ªÆ
 = 1;

562 
	`mpc_öô2
 (
t
, 64);

563 
	`mpc_log
 (
t
, 
x
, 
MPC_RNDNN
);

564 
	`mpc_mul
 (
t
,Å, 
y
, 
MPC_RNDNN
);

568 i‡(
	`mp‰_cmp_ui_2exp
 (
	`MPC_RE
(
t
), 372130558, 1) > 0)

569 
ovîÊow
;

574 i‡(
	`mp‰_cmp_si_2exp
 (
	`MPC_RE
(
t
), -372130558, 1) < 0)

575 
undîÊow
;

577 
q
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
t
)) > 0 ? mpfr_get_exp (MPC_RE(t)) : 0;

578 i‡(
	`mp‰_gë_exp
 (
	`MPC_IM
(
t
)Ë> (
mp_exp_t
Ë
q
)

579 
q
 = 
	`mp‰_gë_exp
 (
	`MPC_IM
(
t
));

581 
¥
 = 
	`mp‰_gë_¥ec
 (
	`MPC_RE
(
z
));

582 
pi
 = 
	`mp‰_gë_¥ec
 (
	`MPC_IM
(
z
));

583 
p
 = (
¥
 > 
pi
) ?Ör :Öi;

584 
p
 += 12;

586 
	`mpc_öô2
 (
u
, 
p
);

587 
¥
 +
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
;

588 
pi
 +
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDN
;

589 
max¥ec
 = 
	`MPFR_PREC
(
	`MPC_RE
(
z
));

590 i‡(
	`MPFR_PREC
(
	`MPC_IM
(
z
)Ë> 
max¥ec
)

591 
max¥ec
 = 
	`MPFR_PREC
(
	`MPC_IM
(
z
));

592 
lo›
 = 0;;Üoop++)

594 
mp_exp_t
 
dr
, 
di
;

596 i‡(
p
 + 
q
 > 64)

599 
	`mpc_£t_¥ec
 (
t
, 
p
 + 
q
);

600 
	`mpc_log
 (
t
, 
x
, 
MPC_RNDNN
);

601 
	`mpc_mul
 (
t
,Å, 
y
, 
MPC_RNDNN
);

603 
	`mpc_exp
 (
u
, 
t
, 
MPC_RNDNN
);

608 
dr
 = 
	`mp‰_zîo_p
 (
	`MPC_RE
(
u
)Ë? 
	`mp‰_gë_exp
 (
	`MPC_IM
(u))

609 : 
	`mp‰_gë_exp
 (
	`MPC_RE
(
u
));

610 
di
 = 
	`mp‰_zîo_p
 (
	`MPC_IM
(
u
)Ë? 
dr
 : 
	`mp‰_gë_exp
 (MPC_IM(u));

611 i‡(
dr
 > 
di
)

613 
di
 = 
dr
 - di;

614 
dr
 = 0;

618 
dr
 = 
di
 - dr;

619 
di
 = 0;

625 i‡((
z_imag
 || 
	`mp‰_ˇn_round
 (
	`MPC_RE
(
u
), 
p
 - 3 - 
dr
, 
GMP_RNDN
, 
GMP_RNDZ
, 
¥
)) &&

626 (
z_ªÆ
 || 
	`mp‰_ˇn_round
 (
	`MPC_IM
(
u
), 
p
 - 3 - 
di
, 
GMP_RNDN
, 
GMP_RNDZ
, 
pi
)))

631 
	`MPC_ASSERT
 (
z_imag
 || 
	`mp‰_numbî_p
 (
	`MPC_RE
(
u
)));

633 
	`MPC_ASSERT
 (
z_ªÆ
 || 
	`mp‰_numbî_p
 (
	`MPC_IM
(
u
)));

635 i‡(
ªt
 == -2)

639 i‡(
y_ªÆ
)

641 
max¥ec
 *= 2;

642 
ªt
 = 
	`mpc_pow_exa˘
 (
z
, 
x
, 
	`MPC_RE
(
y
), 
∫d
, 
max¥ec
);

643 i‡(
ªt
 != -1 &&Ñet != -2)

644 
exa˘
;

646 
p
 +
dr
 + 
di
 + 64;

649 
p
 +=Ö / 2;

650 
	`mpc_£t_¥ec
 (
t
, 
p
 + 
q
);

651 
	`mpc_£t_¥ec
 (
u
, 
p
);

654 i‡(
z_ªÆ
)

662 
mp‰_t
 
n
;

663 
öex
, 
cx1
;

664 
sign_zi
;

669 
	`mp‰_öô
 (
n
);

670 
öex
 = 
	`mpc_n‹m
 (
n
, 
x
, 
GMP_RNDN
);

671 
cx1
 = 
	`mp‰_cmp_ui
 (
n
, 1);

672 i‡(
cx1
 =0 && 
öex
 != 0)

673 
cx1
 = -
öex
;

675 
sign_zi
 = (
cx1
 < 0 && 
	`mp‰_signbô
 (
	`MPC_IM
 (
y
)) == 0)

676 || (
cx1
 == 0

677 && 
	`mp‰_signbô
 (
	`MPC_IM
 (
x
)Ë!mp‰_signbô (
	`MPC_RE
 (
y
)))

678 || (
cx1
 > 0 && 
	`mp‰_signbô
 (
	`MPC_IM
 (
y
)));

680 
ªt
 = 
	`mp‰_£t
 (
	`MPC_RE
(
z
), MPC_RE(
u
), 
	`MPC_RND_RE
(
∫d
));

682 
ªt
 = 
	`MPC_INEX
 (ªt, 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z
), 0, 
	`MPC_RND_IM
 (
∫d
)));

684 i‡(
	`MPC_RND_IM
 (
∫d
Ë=
GMP_RNDD
 || 
sign_zi
)

685 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

687 
	`mp‰_˛ór
 (
n
);

689 i‡(
z_imag
)

691 
ªt
 = 
	`mp‰_£t
 (
	`MPC_IM
(
z
), MPC_IM(
u
), 
	`MPC_RND_IM
(
∫d
));

692 
ªt
 = 
	`MPC_INEX
(
	`mp‰_£t_ui
 (
	`MPC_RE
(
z
), 0, 
	`MPC_RND_RE
(
∫d
)),Ñet);

695 
ªt
 = 
	`mpc_£t
 (
z
, 
u
, 
∫d
);

696 
exa˘
:

697 
	`mpc_˛ór
 (
t
);

698 
	`mpc_˛ór
 (
u
);

700 
íd
:

701  
ªt
;

703 
undîÊow
:

711 
	`mpc_öô2
 (
u
, 64);

712 
	`mp‰_c⁄°_pi
 (
	`MPC_RE
(
u
), 
GMP_RNDN
);

713 
	`mp‰_div_2exp
 (
	`MPC_RE
(
u
), MPC_RE(u), 1, 
GMP_RNDN
);

714 
	`mp‰_ªmquo
 (
	`MPC_RE
(
u
), &
Q
, 
	`MPC_IM
(
t
), MPC_RE(u), 
GMP_RNDN
);

715 i‡(
	`mp‰_sgn
 (
	`MPC_RE
(
u
)) < 0)

716 
Q
--;

717 
	`mp‰_£t_ui
 (
	`MPC_RE
(
z
), 0, 
GMP_RNDN
);

718 
	`mp‰_£t_ui
 (
	`MPC_IM
(
z
), 0, 
GMP_RNDN
);

719 
Q
 & 3)

722 
ªt
 = 
	`MPC_INEX
(-1, -1);

725 
	`mp‰_√g
 (
	`MPC_RE
(
z
), MPC_RE(z), 
GMP_RNDN
);

726 
ªt
 = 
	`MPC_INEX
(1, -1);

729 
	`mp‰_√g
 (
	`MPC_RE
(
z
), MPC_RE(z), 
GMP_RNDN
);

730 
	`mp‰_√g
 (
	`MPC_IM
(
z
), MPC_IM(z), 
GMP_RNDN
);

731 
ªt
 = 
	`MPC_INEX
(1, 1);

734 
	`mp‰_√g
 (
	`MPC_IM
(
z
), MPC_IM(z), 
GMP_RNDN
);

735 
ªt
 = 
	`MPC_INEX
(-1, 1);

738 
˛ór_t_™d_u
;

740 
ovîÊow
:

748 
	`mpc_öô2
 (
u
, 64);

749 
	`mp‰_c⁄°_pi
 (
	`MPC_RE
(
u
), 
GMP_RNDN
);

750 
	`mp‰_div_2exp
 (
	`MPC_RE
(
u
), MPC_RE(u), 1, 
GMP_RNDN
);

752 
	`mp‰_ªmquo
 (
	`MPC_RE
(
u
), &
Q
, 
	`MPC_IM
(
t
), MPC_RE(u), 
GMP_RNDN
);

753 i‡(
	`mp‰_sgn
 (
	`MPC_RE
(
u
)) < 0)

754 
Q
--;

755 
Q
 & 3)

758 
	`mp‰_£t_öf
 (
	`MPC_RE
(
z
), 1);

759 
	`mp‰_£t_öf
 (
	`MPC_IM
(
z
), 1);

760 
ªt
 = 
	`MPC_INEX
(1, 1);

763 
	`mp‰_£t_öf
 (
	`MPC_RE
(
z
), -1);

764 
	`mp‰_£t_öf
 (
	`MPC_IM
(
z
), 1);

765 
ªt
 = 
	`MPC_INEX
(-1, 1);

768 
	`mp‰_£t_öf
 (
	`MPC_RE
(
z
), -1);

769 
	`mp‰_£t_öf
 (
	`MPC_IM
(
z
), -1);

770 
ªt
 = 
	`MPC_INEX
(-1, -1);

773 
	`mp‰_£t_öf
 (
	`MPC_RE
(
z
), 1);

774 
	`mp‰_£t_öf
 (
	`MPC_IM
(
z
), -1);

775 
ªt
 = 
	`MPC_INEX
(1, -1);

779 
˛ór_t_™d_u
:

780 
	`mpc_˛ór
 (
t
);

781 
	`mpc_˛ór
 (
u
);

782  
ªt
;

783 
	}
}

	@src/pow_d.c

22 
	~<°dio.h
>

23 
	~<Êﬂt.h
>

24 
	~"mpc-im∂.h
"

27 
	$mpc_pow_d
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
y
, 
mpc_∫d_t
 
∫d
)

29 
mpc_t
 
yy
;

30 
öex
;

32 
	`MPC_ASSERT
(
FLT_RADIX
 == 2);

33 
	`mpc_öô3
 (
yy
, 
DBL_MANT_DIG
, 
MPFR_PREC_MIN
);

34 
	`mpc_£t_d
 (
yy
, 
y
, 
MPC_RNDNN
);

35 
öex
 = 
	`mpc_pow
 (
z
, 
x
, 
yy
, 
∫d
);

36 
	`mpc_˛ór
 (
yy
);

37  
öex
;

38 
	}
}

	@src/pow_fr.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_pow_‰
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
mp‰_§˝å
 
y
, 
mpc_∫d_t
 
∫d
)

27 
mpc_t
 
yy
;

28 
öex
;

31 
	`MPC_RE
(
yy
)[0] = 
y
[0];

32 
	`mp‰_öô2
 (
	`MPC_IM
(
yy
), 
MPFR_PREC_MIN
);

33 
	`mp‰_£t_ui
 (
	`MPC_IM
(
yy
), 0, 
GMP_RNDN
);

34 
öex
 = 
	`mpc_pow
 (
z
, 
x
, 
yy
, 
∫d
);

35 
	`mp‰_˛ór
 (
	`MPC_IM
(
yy
));

36  
öex
;

37 
	}
}

	@src/pow_ld.c

22 
	~<°dio.h
>

23 
	~<Êﬂt.h
>

24 
	~"mpc-im∂.h
"

27 
	$mpc_pow_ld
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
y
, 
mpc_∫d_t
 
∫d
)

29 
mpc_t
 
yy
;

30 
öex
;

32 
	`MPC_ASSERT
(
FLT_RADIX
 == 2);

33 
	`mpc_öô3
 (
yy
, 
LDBL_MANT_DIG
, 
MPFR_PREC_MIN
);

34 
	`mpc_£t_ld
 (
yy
, 
y
, 
MPC_RNDNN
);

35 
öex
 = 
	`mpc_pow
 (
z
, 
x
, 
yy
, 
∫d
);

36 
	`mpc_˛ór
 (
yy
);

37  
öex
;

38 
	}
}

	@src/pow_si.c

22 
	~<limôs.h
>

23 
	~"mpc-im∂.h
"

26 
	$mpc_pow_si
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
y
, 
mpc_∫d_t
 
∫d
)

28 
mpc_t
 
yy
;

29 
öex
;

31 
	`mpc_öô3
 (
yy
,  (Ë* 
CHAR_BIT
, 
MPFR_PREC_MIN
);

32 
	`mpc_£t_si
 (
yy
, 
y
, 
MPC_RNDNN
);

33 
öex
 = 
	`mpc_pow
 (
z
, 
x
, 
yy
, 
∫d
);

34 
	`mpc_˛ór
 (
yy
);

35  
öex
;

36 
	}
}

	@src/pow_ui.c

22 
	~<limôs.h
>

23 
	~"mpc-im∂.h
"

26 
	$mpc_pow_ui_«ive
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
y
, 
mpc_∫d_t
 
∫d
)

28 
öex
;

29 
mpc_t
 
t
;

30 
	`mpc_öô3
 (
t
,  (Ë* 
CHAR_BIT
, 
MPFR_PREC_MIN
);

31 
	`mpc_£t_ui
 (
t
, 
y
, 
MPC_RNDNN
);

32 
öex
 = 
	`mpc_pow
 (
z
, 
x
, 
t
, 
∫d
);

33 
	`mpc_˛ór
 (
t
);

35  
öex
;

36 
	}
}

40 
	$mpc_pow_ui
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
y
, 
mpc_∫d_t
 
∫d
)

42 
öex
;

43 
mpc_t
 
t
, 
x3
;

44 
mp_¥ec_t
 
p
;

45 
l
, 
l0
, 
u
;

46 
has3
;

47 
lo›
, 
d⁄e
;

49 i‡(!
	`mpc_fö_p
 (
x
Ë|| 
	`mp‰_zîo_p
 (
	`MPC_RE
 (x)Ë|| mp‰_zîo_∞(
	`MPC_IM
(x))

50 || 
y
 == 0)

52  
	`mpc_pow_ui_«ive
 (
z
, 
x
, 
y
, 
∫d
);

54 
mp_exp_t
 
exp_r
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
 (
x
)),

55 
exp_i
 = 
	`mp‰_gë_exp
 (
	`MPC_IM
 (
x
));

56 i‡–
	`MPC_MAX
 (
exp_r
, 
exp_i
Ë> 
	`mp‰_gë_emax
 (Ë/ (
mp_exp_t
Ë
y


58 || 
	`MPC_MAX
 (-
exp_r
, -
exp_i
Ë> (-
	`mp‰_gë_emö
 ()Ë/ (
mp_exp_t
Ë
y


61  
	`mpc_pow_ui_«ive
 (
z
, 
x
, 
y
, 
∫d
);

64 i‡(
y
 == 1)

65  
	`mpc_£t
 (
z
, 
x
, 
∫d
);

66 i‡(
y
 == 2)

67  
	`mpc_sqr
 (
z
, 
x
, 
∫d
);

69 
l
 = 0, 
u
 = 
y
, 
has3
 = u&3; u > 3;Ü ++, u >>= 1, has3 |= u&3);

72 
l0
 = 
l
 + 2;

73 
p
 = 
	`MPC_MAX_PREC
(
z
Ë+ 
l0
 + 32;

74 
	`mpc_öô2
 (
t
, 
p
);

75 i‡(
has3
)

76 
	`mpc_öô2
 (
x3
, 
p
);

78 
lo›
 = 0;

79 
d⁄e
 = 0;

80 !
d⁄e
) {

81 
lo›
++;

83 
	`mpc_sqr
 (
t
, 
x
, 
MPC_RNDNN
);

84 i‡(
has3
) {

85 
	`mpc_mul
 (
x3
, 
t
, 
x
, 
MPC_RNDNN
);

86 i‡((
y
 >> 
l
) & 1)

87 
	`mpc_£t
 (
t
, 
x3
, 
MPC_RNDNN
);

89 
l
-- > 0) {

90 
	`mpc_sqr
 (
t
,Å, 
MPC_RNDNN
);

91 i‡((
y
 >> 
l
) & 1) {

92 i‡((
l
 > 0Ë&& ((
y
 >> (l-1)) & 1)) {

93 
l
--;

94 
	`mpc_sqr
 (
t
,Å, 
MPC_RNDNN
);

95 
	`mpc_mul
 (
t
,Å, 
x3
, 
MPC_RNDNN
);

98 
	`mpc_mul
 (
t
,Å, 
x
, 
MPC_RNDNN
);

108 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
(
t
)Ë|| mp‰_zîo_∞(
	`MPC_IM
(t))) {

109 
öex
 = 
	`mpc_pow_ui_«ive
 (
z
, 
x
, 
y
, 
∫d
);

111 
d⁄e
 = 1;

114 
mp_exp_t
 
diff
;

115 
mp_¥ec_t
 
î
, 
ei
;

116 
diff
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
(
t
)Ë- mp‰_gë_ex∞(
	`MPC_IM
(t));

119 
î
 = (
diff
 >1Ë? 
l0
 + 3 :Ü0 + (-diff) + 4;

122 
ei
 = (
diff
 <-1Ë? 
l0
 + 3 :Ü0 + diff + 4;

123 i‡(
	`mp‰_ˇn_round
 (
	`MPC_RE
(
t
), 
p
 - 
î
, 
GMP_RNDZ
, GMP_RNDZ,

124 
	`MPFR_PREC
(
	`MPC_RE
(
z
)Ë+ (
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
))

125 && 
	`mp‰_ˇn_round
 (
	`MPC_IM
(
t
), 
p
 - 
ei
, 
GMP_RNDZ
, GMP_RNDZ,

126 
	`MPFR_PREC
(
	`MPC_IM
(
z
)Ë+ (
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDN
))) {

127 
öex
 = 
	`mpc_£t
 (
z
, 
t
, 
∫d
);

128 
d⁄e
 = 1;

130 i‡(
lo›
 =1 && 
	`SAFE_ABS
(
mp_¥ec_t
, 
diff
Ë< 
	`MPC_MAX_PREC
(
z
)) {

132 
p
 +
	`MPC_MAX_PREC
(
x
);

133 
	`mpc_£t_¥ec
 (
t
, 
p
);

134 i‡(
has3
)

135 
	`mpc_£t_¥ec
 (
x3
, 
p
);

136 
l
 = 
l0
 - 2;

139 
öex
 = 
	`mpc_pow_ui_«ive
 (
z
, 
x
, 
y
, 
∫d
);

140 
d⁄e
 = 1;

145 
	`mpc_˛ór
 (
t
);

146 i‡(
has3
)

147 
	`mpc_˛ór
 (
x3
);

149  
öex
;

150 
	}
}

	@src/pow_z.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_pow_z
 (
mpc_±r
 
z
, 
mpc_§˝å
 
x
, 
mpz_§˝å
 
y
, 
mpc_∫d_t
 
∫d
)

27 
mpc_t
 
yy
;

28 
öex
;

29 
size_t
 
n
 = 
	`mpz_sizeöba£
 (
y
, 2);

31 
	`mpc_öô3
 (
yy
, (
n
 < 
MPFR_PREC_MIN
) ? MPFR_PREC_MIN :Ç, MPFR_PREC_MIN);

32 
	`mpc_£t_z
 (
yy
, 
y
, 
MPC_RNDNN
);

33 
öex
 = 
	`mpc_pow
 (
z
, 
x
, 
yy
, 
∫d
);

34 
	`mpc_˛ór
 (
yy
);

35  
öex
;

36 
	}
}

	@src/proj.c

23 
	~"mpc-im∂.h
"

26 
	$mpc_¥oj
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

28 i‡(
	`mpc_öf_p
 (
b
))

31 
öex
;

33 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
a
), +1);

34 
öex
 = 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
a
), 0, 
	`MPC_RND_IM
 (
∫d
));

35 i‡(
	`mp‰_signbô
 (
	`MPC_IM
 (
b
)))

37 
	`mpc_c⁄j
 (
a
,á, 
MPC_RNDNN
);

38 
öex
 = -inex;

41  
	`MPC_INEX
 (0, 
öex
);

44  
	`mpc_£t
 (
a
, 
b
, 
∫d
);

45 
	}
}

	@src/real.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_ªÆ
 (
mp‰_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_∫d_t
 
∫d
)

27  
	`mp‰_£t
 (
a
, 
	`MPC_RE
 (
b
), 
∫d
);

28 
	}
}

	@src/set.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_£t
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/set_prec.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_£t_¥ec
 (
mpc_t
 
x
, 
mp_¥ec_t
 
¥ec
)

27 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
x
), 
¥ec
);

28 
	`mp‰_£t_¥ec
 (
	`MPC_IM
(
x
), 
¥ec
);

29 
	}
}

	@src/set_str.c

22 
	~<˘y≥.h
>

23 
	~"mpc-im∂.h
"

26 
	$mpc_£t_°r
 (
mpc_t
 
z
, c⁄° *
°r
, 
ba£
, 
mpc_∫d_t
 
∫d
)

28 *
p
;

29 
öex
;

31 
öex
 = 
	`mpc_°πoc
 (
z
, 
°r
, &
p
, 
ba£
, 
∫d
);

33 i‡(
öex
 != -1){

34 
	`is•a˚
 ((Ë(*
p
)))

35 
p
++;

36 i‡(*
p
 == '\0')

37  
öex
;

40 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
z
));

41 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
z
));

43 
	}
}

	@src/set_x.c

23 
	~"c⁄fig.h
"

25 #i‡
HAVE_INTTYPES_H


26 
	~<öây≥s.h
>

28 #i‡
HAVE_STDINT_H


29 
	~<°döt.h
>

33 
	~"mpc-im∂.h
"

35 
	#MPC_SET_X
(
ªÆ_t
, 
z
, 
ªÆ_vÆue
, 
∫d
) \

37 
_öex_ª
, 
_öex_im
; \

38 
_öex_ª
 = (
mp‰_£t_
 ## 
ªÆ_t
Ë(
	`mpc_ªÆªf
 (
z
), (
ªÆ_vÆue
), 
	`MPC_RND_RE
 (
∫d
)); \

39 
_öex_im
 = 
	`mp‰_£t_ui
 (
	`mpc_imagªf
 (
z
), 0, 
	`MPC_RND_IM
 (
∫d
)); \

40  
	`MPC_INEX
 (
_öex_ª
, 
_öex_im
); \

41 }

	)

44 
	$mpc_£t_‰
 (
mpc_±r
 
a
, 
mp‰_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

45 
	$MPC_SET_X
 (
‰
, 
a
, 
b
, 
∫d
)

48 
	$mpc_£t_d
 (
mpc_±r
 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

49 
	$MPC_SET_X
 (
d
, 
a
, 
b
, 
∫d
)

52 
	$mpc_£t_ld
 (
mpc_±r
 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

53 
	$MPC_SET_X
 (
ld
, 
a
, 
b
, 
∫d
)

56 
	$mpc_£t_ui
 (
mpc_±r
 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

57 
	$MPC_SET_X
 (
ui
, 
a
, 
b
, 
∫d
)

60 
	$mpc_£t_si
 (
mpc_±r
 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

61 
	$MPC_SET_X
 (
si
, 
a
, 
b
, 
∫d
)

64 
	$mpc_£t_z
 (
mpc_±r
 
a
, 
mpz_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

65 
	$MPC_SET_X
 (
z
, 
a
, 
b
, 
∫d
)

68 
	$mpc_£t_q
 (
mpc_±r
 
a
, 
mpq_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

69 
	$MPC_SET_X
 (
q
, 
a
, 
b
, 
∫d
)

72 
	$mpc_£t_f
 (
mpc_±r
 
a
, 
mpf_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

73 
	$MPC_SET_X
 (
f
, 
a
, 
b
, 
∫d
)

75 #ifde‡
_MPC_H_HAVE_INTMAX_T


77 
	$mpc_£t_uj
 (
mpc_±r
 
a
, 
uötmax_t
 
b
, 
mpc_∫d_t
 
∫d
)

78 
	$MPC_SET_X
 (
uj
, 
a
, 
b
, 
∫d
)

81 
	$mpc_£t_sj
 (
mpc_±r
 
a
, 
ötmax_t
 
b
, 
mpc_∫d_t
 
∫d
)

82 
	$MPC_SET_X
 (
sj
, 
a
, 
b
, 
∫d
)

86 
	$mpc_£t_«n
 (
mpc_±r
 
a
) {

87 
	`mp‰_£t_«n
 (
	`mpc_ªÆªf
 (
a
));

88 
	`mp‰_£t_«n
 (
	`mpc_imagªf
 (
a
));

89 
	}
}

	@src/set_x_x.c

23 
	~"c⁄fig.h
"

25 #i‡
HAVE_INTTYPES_H


26 
	~<öây≥s.h
>

28 #i‡
HAVE_STDINT_H


29 
	~<°döt.h
>

33 
	~"mpc-im∂.h
"

35 
	#MPC_SET_X_X
(
ty≥
, 
z
, 
ªÆ_vÆue
, 
imag_vÆue
, 
∫d
) \

36 
	`MPC_SET_X_Y
 (
ty≥
,Åy≥, 
z
, 
ªÆ_vÆue
, 
imag_vÆue
, 
∫d
)

	)

39 
	$mpc_£t_d_d
 (
mpc_±r
 
z
, 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

40 
	$MPC_SET_X_X
 (
d
, 
z
, 
a
, 
b
, 
∫d
)

43 
	$mpc_£t_f_f
 (
mpc_±r
 
z
, 
mpf_§˝å
 
a
, mpf_§˝å 
b
, 
mpc_∫d_t
 
∫d
)

44 
	$MPC_SET_X_X
 (
f
, 
z
, 
a
, 
b
, 
∫d
)

47 
	$mpc_£t_‰_‰
 (
mpc_±r
 
z
, 
mp‰_§˝å
 
a
, mp‰_§˝å 
b
, 
mpc_∫d_t
 
∫d
)

48 
	$MPC_SET_X_X
 (
‰
, 
z
, 
a
, 
b
, 
∫d
)

51 
	$mpc_£t_ld_ld
 (
mpc_±r
 
z
, 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

52 
	$MPC_SET_X_X
 (
ld
, 
z
, 
a
, 
b
, 
∫d
)

55 
	$mpc_£t_q_q
 (
mpc_±r
 
z
, 
mpq_§˝å
 
a
, mpq_§˝å 
b
, 
mpc_∫d_t
 
∫d
)

56 
	$MPC_SET_X_X
 (
q
, 
z
, 
a
, 
b
, 
∫d
)

59 
	$mpc_£t_si_si
 (
mpc_±r
 
z
, 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

60 
	$MPC_SET_X_X
 (
si
, 
z
, 
a
, 
b
, 
∫d
)

63 
	$mpc_£t_ui_ui
 (
mpc_±r
 
z
, 
a
, 
b
,

64 
mpc_∫d_t
 
∫d
)

65 
	$MPC_SET_X_X
 (
ui
, 
z
, 
a
, 
b
, 
∫d
)

68 
	$mpc_£t_z_z
 (
mpc_±r
 
z
, 
mpz_§˝å
 
a
, mpz_§˝å 
b
, 
mpc_∫d_t
 
∫d
)

69 
	$MPC_SET_X_X
 (
z
, z, 
a
, 
b
, 
∫d
)

71 #ifde‡
_MPC_H_HAVE_INTMAX_T


73 
	$mpc_£t_uj_uj
 (
mpc_±r
 
z
, 
uötmax_t
 
a
, uötmax_à
b
, 
mpc_∫d_t
 
∫d
)

74 
	$MPC_SET_X_X
 (
uj
, 
z
, 
a
, 
b
, 
∫d
)

77 
	$mpc_£t_sj_sj
 (
mpc_±r
 
z
, 
ötmax_t
 
a
, i¡max_à
b
, 
mpc_∫d_t
 
∫d
)

78 
	$MPC_SET_X_X
 (
sj
, 
z
, 
a
, 
b
, 
∫d
)

	@src/sin.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_sö
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

27 
mp‰_t
 
x
, 
y
, 
z
;

28 
mp_¥ec_t
 
¥ec
;

29 
ok
 = 0;

30 
öex_ª
, 
öex_im
;

33 i‡(!
	`mp‰_numbî_p
 (
	`MPC_RE
 (
›
)Ë|| !mp‰_numbî_∞(
	`MPC_IM
 (op)))

35 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (op)))

37 
	`mpc_£t
 (
r›
, 
›
, 
∫d
);

39 i‡(
	`mp‰_«n_p
 (
	`MPC_IM
 (
›
)))

44 i‡(!
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

45 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

46 i‡(!
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
))

47 && !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

53 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

56 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

58 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

60 i‡(!
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)Ë&& !
	`mp‰_zîo_p
 (MPC_IM (op)))

64 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

68 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

70 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

76 
	`mpc_£t
 (
r›
, 
›
, 
∫d
);

82 
	`mp‰_öô2
 (
x
, 2);

83 
	`mp‰_öô2
 (
y
, 2);

84 
	`mp‰_sö_cos
 (
x
, 
y
, 
	`MPC_RE
 (
›
), 
GMP_RNDZ
);

85 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), 
	`MPFR_SIGN
 (
x
));

86 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
), 
	`MPFR_SIGN
 (
y
)*MPFR_SIGN (MPC_IM (
›
)));

87 
	`mp‰_˛ór
 (
y
);

88 
	`mp‰_˛ór
(
x
);

91  
	`MPC_INEX
 (0, 0);

97 i‡(
	`mp‰_cmp_ui
 (
	`MPC_IM
(
›
), 0) == 0)

99 
	`mp‰_öô2
 (
x
, 2);

100 
	`mp‰_cos
 (
x
, 
	`MPC_RE
 (
›
), 
	`MPC_RND_RE
 (
∫d
));

101 
öex_ª
 = 
	`mp‰_sö
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

102 
	`mp‰_mul
 (
	`MPC_IM
(
r›
), MPC_IM(
›
), 
x
, 
	`MPC_RND_IM
(
∫d
));

103 
	`mp‰_˛ór
 (
x
);

105  
	`MPC_INEX
 (
öex_ª
, 0);

110 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
›
), 0) == 0)

112 
	`mp‰_£t
 (
	`MPC_RE
(
r›
), MPC_RE(
›
), 
	`MPC_RND_RE
(
∫d
));

113 
öex_im
 = 
	`mp‰_söh
 (
	`MPC_IM
(
r›
), MPC_IM(
›
), 
	`MPC_RND_IM
(
∫d
));

115  
	`MPC_INEX
 (0, 
öex_im
);

132 
¥ec
 = 
	`MPC_MAX_PREC
(
r›
);

134 
	`mp‰_öô2
 (
x
, 2);

135 
	`mp‰_öô2
 (
y
, 2);

136 
	`mp‰_öô2
 (
z
, 2);

140 
¥ec
 +
	`mpc_˚û_log2
 (prec) + 5;

142 
	`mp‰_£t_¥ec
 (
x
, 
¥ec
);

143 
	`mp‰_£t_¥ec
 (
y
, 
¥ec
);

144 
	`mp‰_£t_¥ec
 (
z
, 
¥ec
);

146 
	`mp‰_sö_cos
 (
x
, 
y
, 
	`MPC_RE
(
›
), 
GMP_RNDN
);

147 
	`mp‰_cosh
 (
z
, 
	`MPC_IM
(
›
), 
GMP_RNDN
);

148 
	`mp‰_mul
 (
x
, x, 
z
, 
GMP_RNDN
);

149 
ok
 = 
	`mp‰_ˇn_round
 (
x
, 
¥ec
 - 2, 
GMP_RNDN
, 
GMP_RNDZ
,

150 
	`MPFR_PREC
(
	`MPC_RE
(
r›
)Ë+ (
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
));

151 i‡(
ok
)

153 
	`mp‰_söh
 (
z
, 
	`MPC_IM
(
›
), 
GMP_RNDN
);

154 
	`mp‰_mul
 (
y
, y, 
z
, 
GMP_RNDN
);

155 
ok
 = 
	`mp‰_ˇn_round
 (
y
, 
¥ec
 - 2, 
GMP_RNDN
, 
GMP_RNDZ
,

156 
	`MPFR_PREC
(
	`MPC_IM
(
r›
)Ë+ (
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDN
));

159 
ok
 == 0);

161 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
(
r›
), 
x
, 
	`MPC_RND_RE
(
∫d
));

162 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
r›
), 
y
, 
	`MPC_RND_IM
(
∫d
));

164 
	`mp‰_˛ór
 (
x
);

165 
	`mp‰_˛ór
 (
y
);

166 
	`mp‰_˛ór
 (
z
);

168  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

169 
	}
}

	@src/sinh.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_söh
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

28 
mpc_t
 
z
;

29 
mpc_t
 
sö_z
;

30 
öex
;

35 
	`MPC_RE
 (
z
)[0] = 
	`MPC_IM
 (
›
)[0];

36 
	`MPC_IM
 (
z
)[0] = 
	`MPC_RE
 (
›
)[0];

37 
	`MPC_RE
 (
sö_z
)[0] = 
	`MPC_IM
 (
r›
)[0];

38 
	`MPC_IM
 (
sö_z
)[0] = 
	`MPC_RE
 (
r›
)[0];

40 
öex
 = 
	`mpc_sö
 (
sö_z
, 
z
, 
	`RNDC
 (
	`MPC_RND_IM
 (
∫d
), 
	`MPC_RND_RE
 (rnd)));

43 
	`MPC_RE
 (
r›
)[0] = 
	`MPC_IM
 (
sö_z
)[0];

44 
	`MPC_IM
 (
r›
)[0] = 
	`MPC_RE
 (
sö_z
)[0];

47  
	`MPC_INEX
 (
	`MPC_INEX_IM
 (
öex
), 
	`MPC_INEX_RE
 (inex));

48 
	}
}

	@src/sqr.c

22 
	~<°dio.h
>

23 
	~"mpc-im∂.h
"

26 
	$mpc_sqr
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

28 
ok
;

29 
mp‰_t
 
u
, 
v
;

30 
mp‰_t
 
x
;

33 
mp_¥ec_t
 
¥ec
;

34 
öex_ª
, 
öex_im
, 
öexa˘
;

35 
mp_exp_t
 
ﬁd_emax
, 
ﬁd_emö
, 
emö
, 
emax
;

38 i‡(!
	`mp‰_numbî_p
 (
	`MPC_RE
 (
›
)Ë|| !mp‰_numbî_∞(
	`MPC_IM
 (op))) {

39 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (op))) {

40 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

41 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

43 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
))) {

44 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
))) {

45 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

46 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
),

47 
	`MPFR_SIGN
 (
	`MPC_RE
 (
›
)Ë* MPFR_SIGN (
	`MPC_IM
 (op)));

50 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), +1);

51 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

52 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

54 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
),

55 
	`MPFR_SIGN
 (
	`MPC_RE
 (
›
)Ë* MPFR_SIGN (
	`MPC_IM
 (op)));

59 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
r›
), -1);

60 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

61 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

63 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
r›
),

64 
	`MPFR_SIGN
 (
	`MPC_RE
 (
›
)Ë* MPFR_SIGN (
	`MPC_IM
 (op)));

66  
	`MPC_INEX
 (0, 0);

69 
¥ec
 = 
	`MPC_MAX_PREC
(
r›
);

72 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
(
›
)))

74 
ßme_sign
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)Ë=mp‰_signbô (
	`MPC_IM
 (op));

75 
öex_ª
 = 
	`mp‰_sqr
 (
	`MPC_RE
(
r›
), MPC_RE(
›
), 
	`MPC_RND_RE
(
∫d
));

76 
öex_im
 = 
	`mp‰_£t_ui
 (
	`MPC_IM
(
r›
), 0ul, 
GMP_RNDN
);

77 i‡(!
ßme_sign
)

78 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

79  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

81 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
(
›
)))

83 
ßme_sign
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
)Ë=mp‰_signbô (
	`MPC_IM
 (op));

84 
öex_ª
 = -
	`mp‰_sqr
 (
	`MPC_RE
(
r›
), 
	`MPC_IM
(
›
), 
	`INV_RND
 (
	`MPC_RND_RE
(
∫d
)));

85 
	`mp‰_√g
 (
	`MPC_RE
(
r›
), MPC_RE‘›), 
GMP_RNDN
);

86 
öex_im
 = 
	`mp‰_£t_ui
 (
	`MPC_IM
(
r›
), 0ul, 
GMP_RNDN
);

87 i‡(!
ßme_sign
)

88 
	`mpc_c⁄j
 (
r›
,Ñ›, 
MPC_RNDNN
);

89  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

95 i‡(
	`SAFE_ABS
 (
mp_exp_t
, 
	`MPFR_EXP
 (
	`MPC_RE
 (
›
)Ë- MPFR_EXP (
	`MPC_IM
 (op)))

96 > (
mp_exp_t
Ë
	`MPC_MAX_PREC
 (
›
) / 2)

98 
	`mp‰_öô2
 (
u
, 2*
	`MPFR_PREC
 (
	`MPC_RE
 (
›
)));

99 
	`mp‰_öô2
 (
v
, 2*
	`MPFR_PREC
 (
	`MPC_IM
 (
›
)));

101 
	`mp‰_sqr
 (
u
, 
	`MPC_RE
 (
›
), 
GMP_RNDN
);

102 
	`mp‰_sqr
 (
v
, 
	`MPC_IM
 (
›
), 
GMP_RNDN
);

103 
öex_im
 = 
	`mp‰_mul
 (
r›
->
im
, 
›
->
ª
, op->im, 
	`MPC_RND_IM
 (
∫d
));

104 
	`mp‰_mul_2exp
 (
r›
->
im
,Ñ›->im, 1, 
GMP_RNDN
);

105 
öex_ª
 = 
	`mp‰_sub
 (
r›
->
ª
, 
u
, 
v
, 
	`MPC_RND_RE
 (
∫d
));

107 
	`mp‰_˛ór
 (
u
);

108 
	`mp‰_˛ór
 (
v
);

109  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

113 
	`mp‰_öô
 (
u
);

114 
	`mp‰_öô
 (
v
);

116 i‡(
r›
 =
›
)

118 
	`mp‰_öô2
 (
x
, 
	`MPFR_PREC
 (
›
->
ª
));

119 
	`mp‰_£t
 (
x
, 
›
->
ª
, 
GMP_RNDN
);

122 
x
 [0] = 
›
->
ª
 [0];

125 
ﬁd_emax
 = 
	`mp‰_gë_emax
 ();

126 
ﬁd_emö
 = 
	`mp‰_gë_emö
 ();

127 
	`mp‰_£t_emax
 (
emax
 = 
	`mp‰_gë_emax_max
 ());

128 
	`mp‰_£t_emö
 (
emö
 = 
	`mp‰_gë_emö_mö
 ());

132 
¥ec
 +
	`mpc_˚û_log2
 (prec) + 5;

134 
	`mp‰_£t_¥ec
 (
u
, 
¥ec
);

135 
	`mp‰_£t_¥ec
 (
v
, 
¥ec
);

143 
öexa˘
 = 0;

144 i‡(
	`mp‰_add
 (
u
, 
x
, 
	`MPC_IM
 (
›
), 
GMP_RNDZ
))

148 
	`mp‰_add_⁄e_uÕ
 (
u
, 
GMP_RNDN
);

149 
öexa˘
 = 1;

151 i‡(
	`mp‰_sub
 (
v
, 
x
, 
	`MPC_IM
 (
›
), 
GMP_RNDZ
))

153 
	`mp‰_add_⁄e_uÕ
 (
v
, 
GMP_RNDN
);

154 
öexa˘
 = 1;

159 i‡(
	`mp‰_sgn
 (
u
Ë=0 || mp‰_sg¿(
v
) == 0)

162 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
GMP_RNDN
);

163 
öex_ª
 = 0;

164 
ok
 = 1;

166 i‡(
	`mp‰_sgn
 (
u
Ë* mp‰_sg¿(
v
) > 0)

168 
öexa˘
 |
	`mp‰_mul
 (
u
, u, 
v
, 
GMP_RNDU
);

172 
	`MPC_ASSERT
 (
	`mp‰_gë_exp
 (
u
Ë!
emö
);

173 i‡(
	`mp‰_öf_p
 (
u
))

175 
mp_∫d_t
 
∫d_ª
 = 
	`MPC_RND_RE
 (
∫d
);

176 i‡(
∫d_ª
 =
GMP_RNDZ
 ||Ñnd_ª =
GMP_RNDD
)

178 
	`mp‰_£t_ui_2exp
 (
	`MPC_RE
 (
r›
), 1, 
emax
, 
∫d_ª
);

179 
öex_ª
 = -1;

182 
öex_ª
 = 1;

185 
ok
 = (!
öexa˘
Ë| 
	`mp‰_ˇn_round
 (
u
, 
¥ec
 - 3, 
GMP_RNDU
, 
GMP_RNDZ
,

186 
	`MPFR_PREC
 (
	`MPC_RE
 (
r›
)Ë+ (
	`MPC_RND_RE
 (
∫d
Ë=
GMP_RNDN
));

187 i‡(
ok
)

189 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
 (
r›
), 
u
, 
	`MPC_RND_RE
 (
∫d
));

190 i‡(
öex_ª
 == 0)

192 
öex_ª
 = 
öexa˘
;

197 
öexa˘
 |
	`mp‰_mul
 (
u
, u, 
v
, 
GMP_RNDD
);

200 
	`MPC_ASSERT
 (
	`mp‰_öf_p
 (
u
) == 0);

203 i‡(
	`mp‰_gë_exp
 (
u
Ë=
emö
)

205 
mp_∫d_t
 
∫d_ª
 = 
	`MPC_RND_RE
 (
∫d
);

206 i‡(
∫d_ª
 =
GMP_RNDZ
 ||Ñnd_ª =
GMP_RNDN
 ||

207 
∫d_ª
 =
GMP_RNDU
)

209 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
∫d_ª
);

210 
öex_ª
 = 1;

213 
öex_ª
 = -1;

216 
ok
 = (!
öexa˘
Ë| 
	`mp‰_ˇn_round
 (
u
, 
¥ec
 - 3, 
GMP_RNDD
, 
GMP_RNDZ
,

217 
	`MPFR_PREC
 (
	`MPC_RE
 (
r›
)Ë+ (
	`MPC_RND_RE
 (
∫d
Ë=
GMP_RNDN
));

218 i‡(
ok
)

220 
öex_ª
 = 
	`mp‰_£t
 (
	`MPC_RE
 (
r›
), 
u
, 
	`MPC_RND_RE
 (
∫d
));

221 i‡(
öex_ª
 == 0)

222 
öex_ª
 = 
öexa˘
;

226 !
ok
);

229 i‡(
	`mp‰_gë_exp
 (
x
Ë+ mp‰_gë_exp(
	`MPC_IM
 (
›
)Ë<
emö
 + 1)

231 
	`mp‰_mul_2ui
 (
x
, x, 1, 
GMP_RNDN
);

232 
öex_im
 = 
	`mp‰_mul
 (
	`MPC_IM
 (
r›
), 
x
, MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

236 
öex_im
 = 
	`mp‰_mul
 (
	`MPC_IM
 (
r›
), 
x
, MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

238 
	`MPC_ASSERT
 (
	`mp‰_zîo_p
 (
	`MPC_IM
 (
r›
)) == 0);

239 
	`mp‰_mul_2ui
 (
	`MPC_IM
 (
r›
), MPC_IM (r›), 1, 
GMP_RNDN
);

242 
	`mp‰_˛ór
 (
u
);

243 
	`mp‰_˛ór
 (
v
);

245 i‡(
r›
 =
›
)

246 
	`mp‰_˛ór
 (
x
);

249 
	`mp‰_£t_emax
 (
ﬁd_emax
);

250 
	`mp‰_£t_emö
 (
ﬁd_emö
);

252  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

253 
	}
}

	@src/sqrt.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_sqπ
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

27 
ok_w
, 
ok_t
 = 0;

28 
mp‰_t
 
w
, 
t
;

29 
mp_∫d_t
 
∫d_w
, 
∫d_t
;

30 
mp_¥ec_t
 
¥ec_w
, 
¥ec_t
;

33 
mp_¥ec_t
 
¥ec
;

34 
öex_w
, 
öex_t
 = 1, 
öex
, 
lo›s
 = 0;

36 c⁄° 
ª_cmp
 = 
	`mp‰_cmp_ui
 (
	`MPC_RE
 (
b
), 0);

37 c⁄° 
im_cmp
 = 
	`mp‰_cmp_ui
 (
	`MPC_IM
 (
b
), 0);

39 c⁄° 
im_sgn
 = 
	`mp‰_signbô
 (
	`MPC_IM
 (
b
)) == 0? 0 : -1;

44 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
b
)))

46 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
a
), +1);

47 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
a
), 
im_sgn
);

48  
	`MPC_INEX
 (0, 0);

51 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
b
)))

53 i‡(
	`mp‰_signbô
 (
	`MPC_RE
 (
b
)))

55 i‡(
	`mp‰_numbî_p
 (
	`MPC_IM
 (
b
)))

59 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
a
), 0, 
GMP_RNDN
);

60 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
a
), 
im_sgn
);

61  
	`MPC_INEX
 (0, 0);

66 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
a
));

67 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
a
), 
im_sgn
);

68  
	`MPC_INEX
 (0, 0);

73 i‡(
	`mp‰_numbî_p
 (
	`MPC_IM
 (
b
)))

77 
	`mp‰_£t_öf
 (
	`MPC_RE
 (
a
), +1);

78 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
a
), 0, 
GMP_RNDN
);

79 i‡(
im_sgn
)

80 
	`mpc_c⁄j
 (
a
,á, 
MPC_RNDNN
);

81  
	`MPC_INEX
 (0, 0);

88  
	`mpc_£t
 (
a
, 
b
, 
∫d
);

95 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
b
)Ë|| mp‰_«n_∞(
	`MPC_IM
 (b)))

97 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
a
));

98 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
a
));

99  
	`MPC_INEX
 (0, 0);

103 i‡(
im_cmp
 == 0)

105 i‡(
ª_cmp
 == 0)

107 
	`mpc_£t_ui_ui
 (
a
, 0, 0, 
MPC_RNDNN
);

108 i‡(
im_sgn
)

109 
	`mpc_c⁄j
 (
a
,á, 
MPC_RNDNN
);

110  
	`MPC_INEX
 (0, 0);

112 i‡(
ª_cmp
 > 0)

114 
öex_w
 = 
	`mp‰_sqπ
 (
	`MPC_RE
 (
a
), MPC_RE (
b
), 
	`MPC_RND_RE
 (
∫d
));

115 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
a
), 0, 
GMP_RNDN
);

116 i‡(
im_sgn
)

117 
	`mpc_c⁄j
 (
a
,á, 
MPC_RNDNN
);

118  
	`MPC_INEX
 (
öex_w
, 0);

122 
	`mp‰_öô2
 (
w
, 
	`MPFR_PREC
 (
	`MPC_RE
 (
b
)));

123 
	`mp‰_√g
 (
w
, 
	`MPC_RE
 (
b
), 
GMP_RNDN
);

124 i‡(
im_sgn
)

126 
öex_w
 = -
	`mp‰_sqπ
 (
	`MPC_IM
 (
a
), 
w
, 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

127 
	`mp‰_√g
 (
	`MPC_IM
 (
a
), MPC_IM (a), 
GMP_RNDN
);

130 
öex_w
 = 
	`mp‰_sqπ
 (
	`MPC_IM
 (
a
), 
w
, 
	`MPC_RND_IM
 (
∫d
));

132 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
a
), 0, 
GMP_RNDN
);

133 
	`mp‰_˛ór
 (
w
);

134  
	`MPC_INEX
 (0, 
öex_w
);

139 i‡(
ª_cmp
 == 0)

141 
mp‰_t
 
y
;

143 
y
[0] = 
	`MPC_IM
 (
b
)[0];

145 
	`mp‰_div_2ui
 (
y
, y, 1, 
GMP_RNDN
);

146 i‡(
im_cmp
 > 0)

148 
öex_w
 = 
	`mp‰_sqπ
 (
	`MPC_RE
 (
a
), 
y
, 
	`MPC_RND_RE
 (
∫d
));

149 
öex_t
 = 
	`mp‰_sqπ
 (
	`MPC_IM
 (
a
), 
y
, 
	`MPC_RND_IM
 (
∫d
));

153 
	`mp‰_√g
 (
y
, y, 
GMP_RNDN
);

154 
öex_w
 = 
	`mp‰_sqπ
 (
	`MPC_RE
 (
a
), 
y
, 
	`MPC_RND_RE
 (
∫d
));

155 
öex_t
 = -
	`mp‰_sqπ
 (
	`MPC_IM
 (
a
), 
y
, 
	`INV_RND
 (
	`MPC_RND_IM
 (
∫d
)));

156 
	`mp‰_√g
 (
	`MPC_IM
 (
a
), MPC_IM (a), 
GMP_RNDN
);

158  
	`MPC_INEX
 (
öex_w
, 
öex_t
);

161 
¥ec
 = 
	`MPC_MAX_PREC
(
a
);

163 
	`mp‰_öô
 (
w
);

164 
	`mp‰_öô
 (
t
);

166 i‡(
ª_cmp
 >= 0)

168 
∫d_w
 = 
	`MPC_RND_RE
 (
∫d
);

169 
¥ec_w
 = 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
));

170 
∫d_t
 = 
	`MPC_RND_IM
(
∫d
);

171 
¥ec_t
 = 
	`MPFR_PREC
 (
	`MPC_IM
 (
a
));

175 
∫d_w
 = 
	`MPC_RND_IM
(
∫d
);

176 
¥ec_w
 = 
	`MPFR_PREC
 (
	`MPC_IM
 (
a
));

177 
∫d_t
 = 
	`MPC_RND_RE
(
∫d
);

178 
¥ec_t
 = 
	`MPFR_PREC
 (
	`MPC_RE
 (
a
));

179 i‡(
im_cmp
 < 0)

181 
∫d_w
 = 
	`INV_RND
(rnd_w);

182 
∫d_t
 = 
	`INV_RND
(rnd_t);

188 
lo›s
 ++;

189 
¥ec
 +(
lo›s
 <2Ë? 
	`mpc_˚û_log2
 (prec) + 4 :Örec / 2;

190 
	`mp‰_£t_¥ec
 (
w
, 
¥ec
);

191 
	`mp‰_£t_¥ec
 (
t
, 
¥ec
);

195 
öex_w
 = 
	`mpc_abs
 (
w
, 
b
, 
GMP_RNDD
);

196 i‡(
ª_cmp
 < 0)

197 
öex_w
 |
	`mp‰_sub
 (
w
, w, 
	`MPC_RE
 (
b
), 
GMP_RNDD
);

199 
öex_w
 |
	`mp‰_add
 (
w
, w, 
	`MPC_RE
 (
b
), 
GMP_RNDD
);

200 
öex_w
 |
	`mp‰_div_2ui
 (
w
, w, 1, 
GMP_RNDD
);

201 
öex_w
 |
	`mp‰_sqπ
 (
w
, w, 
GMP_RNDD
);

203 
ok_w
 = 
	`mp‰_ˇn_round
 (
w
, (
mp_exp_t
Ë
¥ec
 - 2, 
GMP_RNDD
, 
GMP_RNDU
,

204 
¥ec_w
 + (
∫d_w
 =
GMP_RNDN
));

205 i‡(!
öex_w
 || 
ok_w
)

209 c⁄° 
mp_∫d_t
 
r
 = 
im_sgn
 ? 
GMP_RNDD
 : 
GMP_RNDU
;

210 
öex_t
 = 
	`mp‰_div
 (
t
, 
	`MPC_IM
 (
b
), 
w
, 
r
);

211 
öex_t
 |
	`mp‰_div_2ui
 (
t
,Å, 1, 
r
);

212 
ok_t
 = 
	`mp‰_ˇn_round
 (
t
, (
mp_exp_t
Ë
¥ec
 - 3, 
r
, 
GMP_RNDZ
,

213 
¥ec_t
 + (
∫d_t
 =
GMP_RNDN
));

218 (
öex_w
 && !
ok_w
Ë|| (
öex_t
 && !
ok_t
));

220 i‡(
ª_cmp
 > 0)

221 
öex
 = 
	`MPC_INEX
 (
	`mp‰_£t
 (
	`MPC_RE
 (
a
), 
w
, 
	`MPC_RND_RE
(
∫d
)),

222 
	`mp‰_£t
 (
	`MPC_IM
 (
a
), 
t
, 
	`MPC_RND_IM
(
∫d
)));

223 i‡(
im_cmp
 > 0)

224 
öex
 = 
	`MPC_INEX
 (
	`mp‰_£t
 (
	`MPC_RE
(
a
), 
t
, 
	`MPC_RND_RE
(
∫d
)),

225 
	`mp‰_£t
 (
	`MPC_IM
(
a
), 
w
, 
	`MPC_RND_IM
(
∫d
)));

227 
öex
 = 
	`MPC_INEX
 (
	`mp‰_√g
 (
	`MPC_RE
 (
a
), 
t
, 
	`MPC_RND_RE
(
∫d
)),

228 
	`mp‰_√g
 (
	`MPC_IM
 (
a
), 
w
, 
	`MPC_RND_IM
(
∫d
)));

230 
	`mp‰_˛ór
 (
w
);

231 
	`mp‰_˛ór
 (
t
);

233  
öex
;

234 
	}
}

	@src/strtoc.c

22 
	~<°rög.h
>

23 
	~<˘y≥.h
>

24 
	~"mpc-im∂.h
"

27 
	$skù_whôe•a˚
 (c⁄° **
p
) {

30 
	`is•a˚
 ((Ë**
p
))

31 (*
p
)++;

32 
	}
}

35 
	$mpc_°πoc
 (
mpc_±r
 
r›
, c⁄° *
≈å
, **
íd±r
, 
ba£
, 
mpc_∫d_t
 
∫d
) {

36 c⁄° *
p
;

37 *
íd
;

38 
bøckëed
 = 0;

40 
öex_ª
 = 0, 
öex_im
 = 0;

42 i‡(
≈å
 =
NULL
 || 
ba£
 > 36 || base == 1)

43 
îr‹
;

45 
p
 = 
≈å
;

46 
	`skù_whôe•a˚
 (&
p
);

48 i‡(*
p
 == '('){

49 
bøckëed
 = 1;

50 ++
p
;

53 
öex_ª
 = 
	`mp‰_°πo‰
 (
	`MPC_RE
(
r›
), 
p
, &
íd
, 
ba£
, 
	`MPC_RND_RE
 (
∫d
));

54 i‡(
íd
 =
p
)

55 
îr‹
;

56 
p
 = 
íd
;

58 i‡(!
bøckëed
)

59 
öex_im
 = 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
r›
), 0ul, 
GMP_RNDN
);

61 i‡(!
	`is•a˚
 (()*
p
))

62 
îr‹
;

64 
	`skù_whôe•a˚
 (&
p
);

66 
öex_im
 = 
	`mp‰_°πo‰
 (
	`MPC_IM
(
r›
), 
p
, &
íd
, 
ba£
, 
	`MPC_RND_IM
 (
∫d
));

67 i‡(
íd
 =
p
)

68 
îr‹
;

69 
p
 = 
íd
;

71 
	`skù_whôe•a˚
 (&
p
);

72 i‡(*
p
 != ')')

73 
îr‹
;

75 
p
++;

78 i‡(
íd±r
 !
NULL
)

79 *
íd±r
 = (*Ë
p
;

80  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

82 
îr‹
:

83 i‡(
íd±r
 !
NULL
)

84 *
íd±r
 = (*Ë
≈å
;

85 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

86 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

88 
	}
}

	@src/sub.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_sub
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, mpc_§˝å 
c
, 
mpc_∫d_t
 
∫d
)

27 
öex_ª
, 
öex_im
;

29 
öex_ª
 = 
	`mp‰_sub
 (
	`MPC_RE
(
a
), MPC_RE(
b
), MPC_RE(
c
), 
	`MPC_RND_RE
(
∫d
));

30 
öex_im
 = 
	`mp‰_sub
 (
	`MPC_IM
(
a
), MPC_IM(
b
), MPC_IM(
c
), 
	`MPC_RND_IM
(
∫d
));

32  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

33 
	}
}

	@src/sub_fr.c

23 
	~"mpc-im∂.h
"

27 
	$mpc_sub_‰
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
mp‰_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

29 
öex_ª
, 
öex_im
;

31 
öex_ª
 = 
	`mp‰_sub
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

32 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

34  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

35 
	}
}

	@src/sub_ui.c

22 
	~"mpc-im∂.h
"

26 
	$mpc_sub_ui
 (
mpc_±r
 
a
, 
mpc_§˝å
 
b
, 
c
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

30 
öex_ª
 = 
	`mp‰_sub_ui
 (
	`MPC_RE
(
a
), MPC_RE(
b
), 
c
, 
	`MPC_RND_RE
(
∫d
));

31 
öex_im
 = 
	`mp‰_£t
 (
	`MPC_IM
(
a
), MPC_IM(
b
), 
	`MPC_RND_IM
(
∫d
));

33  
	`MPC_INEX
(
öex_ª
, 
öex_im
);

34 
	}
}

	@src/swap.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_sw≠
 (
mpc_±r
 
a
, mpc_±∏
b
)

28 
	`mp‰_sw≠
 (
	`MPC_RE
(
a
), MPC_RE(
b
));

29 
	`mp‰_sw≠
 (
	`MPC_IM
(
a
), MPC_IM(
b
));

30 
	}
}

	@src/tan.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_èn
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

27 
mpc_t
 
x
, 
y
;

28 
mp_¥ec_t
 
¥ec
;

29 
mp_exp_t
 
îr
;

30 
ok
 = 0;

31 
öex
;

34 i‡(!
	`mp‰_numbî_p
 (
	`MPC_RE
 (
›
)Ë|| !mp‰_numbî_∞(
	`MPC_IM
 (op)))

36 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
›
)))

38 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

43 
öex
 = 
	`mpc_£t_si_si
 (
r›
, 0,

44 (
	`MPFR_SIGN
 (
	`MPC_IM
 (
›
)) < 0) ? -1 : +1,

45 
∫d
);

51 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

52 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

53 
öex
 = 
	`MPC_INEX
 (0, 0);

56 i‡(
	`mp‰_«n_p
 (
	`MPC_IM
 (
›
)))

58 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
 (
›
), 0) == 0)

62 
	`mpc_£t
 (
r›
, 
›
, 
∫d
);

63 
öex
 = 
	`MPC_INEX
 (0, 0);

68 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

69 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

70 
öex
 = 
	`MPC_INEX
 (0, 0);

73 i‡(
	`mp‰_öf_p
 (
	`MPC_RE
 (
›
)))

75 i‡(
	`mp‰_öf_p
 (
	`MPC_IM
 (
›
)))

81 c⁄° 
sign_ª
 = 
	`mp‰_signbô
 (
	`MPC_RE
 (
›
));

82 
öex_im
;

84 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
	`MPC_RND_RE
 (
∫d
));

85 
	`mp‰_£tsign
 (
	`MPC_RE
 (
r›
), MPC_RE (r›), 
sign_ª
, 
GMP_RNDN
);

88 
öex_im
 = 
	`mp‰_£t_si
 (
	`MPC_IM
 (
r›
),

89 
	`mp‰_signbô
 (
	`MPC_IM
 (
›
)) ? -1 : +1,

90 
	`MPC_RND_IM
 (
∫d
));

91 
öex
 = 
	`MPC_INEX
 (0, 
öex_im
);

97 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
r›
));

98 
	`mp‰_£t_«n
 (
	`MPC_IM
 (
r›
));

99 
öex
 = 
	`MPC_INEX
 (0, 0);

106 
mp‰_t
 
c
;

107 
mp‰_t
 
s
;

108 
öex_im
;

110 
	`mp‰_öô
 (
c
);

111 
	`mp‰_öô
 (
s
);

113 
	`mp‰_sö_cos
 (
s
, 
c
, 
	`MPC_RE
 (
›
), 
GMP_RNDN
);

114 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
r›
), 0, 
	`MPC_RND_RE
 (
∫d
));

115 
	`mp‰_£tsign
 (
	`MPC_RE
 (
r›
), MPC_RE (rop),

116 
	`mp‰_signbô
 (
c
Ë!mp‰_signbô (
s
), 
GMP_RNDN
);

118 
öex_im
 = 
	`mp‰_£t_si
 (
	`MPC_IM
 (
r›
),

119 (
	`mp‰_signbô
 (
	`MPC_IM
 (
›
)) ? -1 : +1),

120 
	`MPC_RND_IM
 (
∫d
));

121 
öex
 = 
	`MPC_INEX
 (0, 
öex_im
);

123 
	`mp‰_˛ór
 (
s
);

124 
	`mp‰_˛ór
 (
c
);

127  
öex
;

130 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
›
)))

134 
öex_im
;

136 
	`mp‰_£t
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

137 
öex_im
 = 
	`mp‰_ènh
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

139  
	`MPC_INEX
 (0, 
öex_im
);

142 i‡(
	`mp‰_zîo_p
 (
	`MPC_IM
 (
›
)))

146 
öex_ª
;

148 
öex_ª
 = 
	`mp‰_èn
 (
	`MPC_RE
 (
r›
), MPC_RE (
›
), 
	`MPC_RND_RE
 (
∫d
));

149 
	`mp‰_£t
 (
	`MPC_IM
 (
r›
), MPC_IM (
›
), 
	`MPC_RND_IM
 (
∫d
));

151  
	`MPC_INEX
 (
öex_ª
, 0);

174 
¥ec
 = 
	`MPC_MAX_PREC
(
r›
);

176 
	`mpc_öô2
 (
x
, 2);

177 
	`mpc_öô2
 (
y
, 2);

179 
îr
 = 7;

183 
mp_exp_t
 
k
;

184 
mp_exp_t
 
exr
, 
eyr
, 
eyi
, 
ezr
;

186 
ok
 = 0;

189 
¥ec
 +
	`mpc_˚û_log2
 (¥ecË+ 
îr
;

190 
	`mpc_£t_¥ec
 (
x
, 
¥ec
);

191 
	`mpc_£t_¥ec
 (
y
, 
¥ec
);

196 
	`mpc_sö
 (
x
, 
›
, 
MPC_RNDZZ
);

197 
	`mp‰_signbô
 (
	`MPC_RE
 (
x
)) ?

198 
	`mp‰_√xtbñow
 (
	`MPC_RE
 (
x
)Ë: 
	`mp‰_√xèbove
 (MPC_RE (x));

199 
	`mp‰_signbô
 (
	`MPC_IM
 (
x
)) ?

200 
	`mp‰_√xtbñow
 (
	`MPC_IM
 (
x
)Ë: 
	`mp‰_√xèbove
 (MPC_IM (x));

201 
exr
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
 (
x
));

202 
	`mpc_cos
 (
y
, 
›
, 
MPC_RNDZZ
);

203 
	`mp‰_signbô
 (
	`MPC_RE
 (
y
)) ?

204 
	`mp‰_√xtbñow
 (
	`MPC_RE
 (
y
)Ë: 
	`mp‰_√xèbove
 (MPC_RE (y));

205 
	`mp‰_signbô
 (
	`MPC_IM
 (
y
)) ?

206 
	`mp‰_√xtbñow
 (
	`MPC_IM
 (
y
)Ë: 
	`mp‰_√xèbove
 (MPC_IM (y));

207 
eyr
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
 (
y
));

208 
eyi
 = 
	`mp‰_gë_exp
 (
	`MPC_IM
 (
y
));

211 
öex
 = 
	`mpc_div
 (
x
, x, 
y
, 
MPC_RNDZZ
);

218 i‡(
	`mp‰_zîo_p
 (
	`MPC_RE
 (
x
)Ë|| mp‰_zîo_∞(
	`MPC_IM
 (x)))

220 
îr
 = 
¥ec
;

223 i‡(
	`MPC_INEX_RE
 (
öex
))

224 
	`mp‰_signbô
 (
	`MPC_RE
 (
x
)) ?

225 
	`mp‰_√xtbñow
 (
	`MPC_RE
 (
x
)Ë: 
	`mp‰_√xèbove
 (MPC_RE (x));

226 i‡(
	`MPC_INEX_IM
 (
öex
))

227 
	`mp‰_signbô
 (
	`MPC_IM
 (
x
)) ?

228 
	`mp‰_√xtbñow
 (
	`MPC_IM
 (
x
)Ë: 
	`mp‰_√xèbove
 (MPC_IM (x));

229 
ezr
 = 
	`mp‰_gë_exp
 (
	`MPC_RE
 (
x
));

234 
k
 = 
exr
 - 
ezr
 + 
	`MPC_MAX
(-
eyr
,Éy∏- 2 * 
eyi
);

235 
îr
 = 
k
 < 2 ? 7 : (k == 2 ? 8 : (5 + k));

238 
ok
 = 
	`mp‰_öf_p
 (
	`MPC_RE
 (
x
))

239 || 
	`mp‰_ˇn_round
 (
	`MPC_RE
(
x
), 
¥ec
 - 
îr
, 
GMP_RNDN
, 
GMP_RNDZ
,

240 
	`MPFR_PREC
(
	`MPC_RE
(
r›
)Ë+ (
	`MPC_RND_RE
(
∫d
Ë=
GMP_RNDN
));

242 i‡(
ok
)

245 
ok
 = 
	`mp‰_öf_p
 (
	`MPC_IM
 (
x
))

246 || 
	`mp‰_ˇn_round
 (
	`MPC_IM
(
x
), 
¥ec
 - 6, 
GMP_RNDN
, 
GMP_RNDZ
,

247 
	`MPFR_PREC
(
	`MPC_IM
(
r›
)Ë+ (
	`MPC_RND_IM
(
∫d
Ë=
GMP_RNDN
));

250 
ok
 == 0);

252 
öex
 = 
	`mpc_£t
 (
r›
, 
x
, 
∫d
);

254 
	`mpc_˛ór
 (
x
);

255 
	`mpc_˛ór
 (
y
);

257  
öex
;

258 
	}
}

	@src/tanh.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_ènh
 (
mpc_±r
 
r›
, 
mpc_§˝å
 
›
, 
mpc_∫d_t
 
∫d
)

28 
mpc_t
 
z
;

29 
mpc_t
 
èn_z
;

30 
öex
;

35 
	`MPC_RE
 (
z
)[0] = 
	`MPC_IM
 (
›
)[0];

36 
	`MPC_IM
 (
z
)[0] = 
	`MPC_RE
 (
›
)[0];

37 
	`MPC_RE
 (
èn_z
)[0] = 
	`MPC_IM
 (
r›
)[0];

38 
	`MPC_IM
 (
èn_z
)[0] = 
	`MPC_RE
 (
r›
)[0];

40 
öex
 = 
	`mpc_èn
 (
èn_z
, 
z
, 
	`RNDC
 (
	`MPC_RND_IM
 (
∫d
), 
	`MPC_RND_RE
 (rnd)));

43 
	`MPC_RE
 (
r›
)[0] = 
	`MPC_IM
 (
èn_z
)[0];

44 
	`MPC_IM
 (
r›
)[0] = 
	`MPC_RE
 (
èn_z
)[0];

47  
	`MPC_INEX
 (
	`MPC_INEX_IM
 (
öex
), 
	`MPC_INEX_RE
 (inex));

48 
	}
}

	@src/uceil_log2.c

22 
	~"mpc-im∂.h
"

27 
	$mpc_˚û_log2
 (
d
)

29 
exp
;

31 
exp
 = 0; 
d
 > 1; d = (d + 1) / 2)

32 
exp
++;

33  
exp
;

34 
	}
}

	@src/ui_div.c

22 
	~<limôs.h
>

23 
	~"mpc-im∂.h
"

26 
	$mpc_ui_div
 (
mpc_±r
 
a
, 
b
, 
mpc_§˝å
 
c
, 
mpc_∫d_t
 
∫d
)

28 
öex
;

29 
mpc_t
 
bb
;

31 
	`mpc_öô2
 (
bb
, (Ë* 
CHAR_BIT
);

32 
	`mpc_£t_ui
 (
bb
, 
b
, 
∫d
);

33 
öex
 = 
	`mpc_div
 (
a
, 
bb
, 
c
, 
∫d
);

34 
	`mpc_˛ór
 (
bb
);

36  
öex
;

37 
	}
}

	@src/ui_ui_sub.c

22 
	~"mpc-im∂.h
"

25 
	$mpc_ui_ui_sub
 (
mpc_±r
 
a
, 
b
, 
c
,

26 
mpc_§˝å
 
d
, 
mpc_∫d_t
 
∫d
)

28 
öex_ª
, 
öex_im
;

30 
öex_ª
 = 
	`mp‰_ui_sub
 (
	`MPC_RE
 (
a
), 
b
, MPC_RE (
d
), 
	`MPC_RND_RE
 (
∫d
));

31 
öex_im
 = 
	`mp‰_ui_sub
 (
	`MPC_IM
 (
a
), 
c
, MPC_IM (
d
), 
	`MPC_RND_IM
 (
∫d
));

33  
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

34 
	}
}

	@src/urandom.c

23 
	~"mpc-im∂.h
"

26 
	$mpc_uøndom
 (
mpc_±r
 
a
, 
gmp_ønd°©e_t
 
°©e
)

28 
r
, 
i
;

30 
r
 = 
	`mp‰_uøndomb
 (
	`MPC_RE
(
a
), 
°©e
);

31 
i
 = 
	`mp‰_uøndomb
 (
	`MPC_IM
(
a
), 
°©e
);

32  
r
 && 
i
;

33 
	}
}

	@tests/comparisons.c

22 
	~"mpc-ã°s.h
"

26 
	$ßme_mp‰_vÆue
 (
mp‰_±r
 
gŸ
, mp‰_±∏
ªf
, 
known_sign
)

30 i‡(
	`mp‰_«n_p
 (
gŸ
))

31  
	`mp‰_«n_p
 (
ªf
);

32 i‡(
	`mp‰_öf_p
 (
gŸ
))

33  
	`mp‰_öf_p
 (
ªf
) &&

34 (!
known_sign
 || 
	`mp‰_signbô
 (
gŸ
Ë=mp‰_signbô (
ªf
));

35 i‡(
	`mp‰_zîo_p
 (
gŸ
))

36  
	`mp‰_zîo_p
 (
ªf
) &&

37 (!
known_sign
 || 
	`mp‰_signbô
 (
gŸ
Ë=mp‰_signbô (
ªf
));

38  
	`mp‰_cmp
 (
gŸ
, 
ªf
) == 0;

39 
	}
}

42 
	$ßme_mpc_vÆue
 (
mpc_±r
 
gŸ
, mpc_±∏
ªf
, 
known_signs_t
 
known_signs
)

44  
	`ßme_mp‰_vÆue
 (
	`MPC_RE
 (
gŸ
), MPC_RE (
ªf
), 
known_signs
.
ª
)

45 && 
	`ßme_mp‰_vÆue
 (
	`MPC_IM
 (
gŸ
), MPC_IM (
ªf
), 
known_signs
.
im
);

46 
	}
}

	@tests/memory.c

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<limôs.h
>

28 
	~"gmp.h
"

30 
	#__gmp_deÁu…_Æloˇã
 
mÆloc


	)

31 
	#__gmp_deÁu…_ªÆloˇã
(
p
,
ﬁd
,
√w
Ë
	`ªÆloc
’,√w)

	)

32 
	#__gmp_deÁu…_‰ì
(
p
,
size
Ë
	`‰ì
’)

	)

44 
	shódî
 {

45 *
	m±r
;

46 
size_t
 
	msize
;

47 
hódî
 *
	m√xt
;

50 
hódî
 *
	gã°s_mem‹y_li°
;

54 
hódî
 **

55 
	$ã°s_mem‹y_föd
 (*
±r
)

57 
hódî
 **
hp
;

59 
hp
 = &
ã°s_mem‹y_li°
; *h∞!
NULL
; h∞&((*hp)->
√xt
))

60 i‡((*
hp
)->
±r
 ==Ötr)

61  
hp
;

63  
NULL
;

64 
	}
}

75 
	$ã°s_Æloˇã
 (
size_t
 
size
)

77 
hódî
 *
h
;

79 i‡(
size
 == 0)

81 
	`¥ötf
 ("tests_allocate():áttemptÅoállocate 0 bytes\n");

82 
	`ab‹t
 ();

85 
h
 = (
hódî
 *Ë
	`__gmp_deÁu…_Æloˇã
 ( (*h));

86 
h
->
√xt
 = 
ã°s_mem‹y_li°
;

87 
ã°s_mem‹y_li°
 = 
h
;

89 
h
->
size
 = size;

90 
h
->
±r
 = 
	`__gmp_deÁu…_Æloˇã
 (
size
);

91  
h
->
±r
;

92 
	}
}

95 
	$ã°s_ªÆloˇã
 (*
±r
, 
size_t
 
ﬁd_size
, size_à
√w_size
)

97 
hódî
 **
hp
, *
h
;

99 i‡(
√w_size
 == 0)

101 
	`¥ötf
 ("tests_reallocate():áttemptÅoÑeallocate 0x%lXÅo 0 bytes\n",

102 (Ë
±r
);

103 
	`ab‹t
 ();

106 
hp
 = 
	`ã°s_mem‹y_föd
 (
±r
);

107 i‡(
hp
 =
NULL
)

109 
	`¥ötf
 ("tests_reallocate():áttemptÅoÑeallocate badÖointer 0x%lX\n",

110 (Ë
±r
);

111 
	`ab‹t
 ();

113 
h
 = *
hp
;

115 i‡(
h
->
size
 !
ﬁd_size
)

119 
	`¥ötf
 ("tests_reallocate(): bad old size %lu, should be %lu\n",

120 (Ë
ﬁd_size
, (Ë
h
->
size
);

121 
	`ab‹t
 ();

124 
h
->
size
 = 
√w_size
;

125 
h
->
±r
 = 
	`__gmp_deÁu…_ªÆloˇã
 (±r, 
ﬁd_size
, 
√w_size
);

126  
h
->
±r
;

127 
	}
}

129 
hódî
 **

130 
	$ã°s_‰ì_föd
 (*
±r
)

132 
hódî
 **
hp
 = 
	`ã°s_mem‹y_föd
 (
±r
);

133 i‡(
hp
 =
NULL
)

135 
	`¥ötf
 ("tests_free():áttemptÅo free badÖointer 0x%lX\n",

136 (Ë
±r
);

137 
	`ab‹t
 ();

139  
hp
;

140 
	}
}

143 
	$ã°s_‰ì_nosize
 (*
±r
)

145 
hódî
 **
hp
 = 
	`ã°s_‰ì_föd
 (
±r
);

146 
hódî
 *
h
 = *
hp
;

148 *
hp
 = 
h
->
√xt
;

150 
	`__gmp_deÁu…_‰ì
 (
±r
, 
h
->
size
);

151 
	`__gmp_deÁu…_‰ì
 (
h
,  (*h));

152 
	}
}

155 
	$ã°s_‰ì
 (*
±r
, 
size_t
 
size
)

157 
hódî
 **
hp
 = 
	`ã°s_‰ì_föd
 (
±r
);

158 
hódî
 *
h
 = *
hp
;

160 i‡(
h
->
size
 != size)

164 
	`¥ötf
 ("tests_free(): bad size %lu, should be %lu\n",

165 (Ë
size
, (Ë
h
->size);

166 
	`ab‹t
 ();

169 
	`ã°s_‰ì_nosize
 (
±r
);

170 
	}
}

173 
	$ã°s_mem‹y_°¨t
 ()

175 
ã°s_mem‹y_li°
 = 
NULL
;

176 
	`mp_£t_mem‹y_fun˘i⁄s
 (
ã°s_Æloˇã
, 
ã°s_ªÆloˇã
, 
ã°s_‰ì
);

177 
	}
}

180 
	$ã°s_mem‹y_íd
 ()

182 i‡(
ã°s_mem‹y_li°
 !
NULL
)

184 
hódî
 *
h
;

185 
cou¡
;

187 
	`¥ötf
 ("tests_memory_end():Çotáll memory freed\n");

189 
cou¡
 = 0;

190 
h
 = 
ã°s_mem‹y_li°
; h !
NULL
; h = h->
√xt
)

191 
cou¡
++;

193 
	`¥ötf
 (" %u block†ªmaöög\n", 
cou¡
);

194 
	`ab‹t
 ();

196 
	}
}

	@tests/mpc-tests.h

22 #i‚de‡
MPC_TESTS_H


23 
	#MPC_TESTS_H


	)

25 
	~<°dio.h
>

26 
	~<˘y≥.h
>

28 
	~"mpc-im∂.h
"

31 
	#MPFR_OUT
(
X
) \

32 
	`¥ötf
 (#X" [%ld]=", 
	`MPFR_PREC
 (
X
));\

33 
	`mp‰_out_°r
 (
°dout
, 2, 0, (
X
), 
GMP_RNDN
);\

34 
	`¥ötf
 ("\n");

	)

37 
	#MPC_INEX_STR
(
öex
) \

38 (
öex
) == 0 ? "(0, 0)" \

39 : (
öex
) == 1 ? "(+1, 0)" \

40 : (
öex
) == 2 ? "(-1, 0)" \

41 : (
öex
) == 4 ? "(0, +1)" \

42 : (
öex
) == 5 ? "(+1, +1)" \

43 : (
öex
) == 6 ? "(-1, +1)" \

44 : (
öex
) == 8 ? "(0, -1)" \

45 : (
öex
) == 9 ? "(+1, -1)" \

46 : (
öex
Ë=10 ? "(-1, -1)" : "unknown"

	)

48 
	#QUOTE
(
X
Ë
	`NAME
(X)

	)

49 
	#NAME
(
X
Ë#X

	)

57 
gmp_ønd°©e_t
 
ønds
;

58 
ønds_öôülized
;

60 
ã°_°¨t
 ();

61 
ã°_íd
 ();

63 
ã°_deÁu…_øndom
 (
mpc_±r
, 
mp_exp_t
, mp_exp_t, , );

64 
uøndomm_ui
 ();

72 
	mª
;

73 
	mim
;

74 } 
	tknown_signs_t
;

84 
ßme_mp‰_vÆue
 (
mp‰_±r
 
gŸ
, mp‰_±∏
ªf
, 
known_sign
);

85 
ßme_mpc_vÆue
 (
mpc_±r
 
gŸ
, mpc_±∏
ªf
, 
known_signs_t
 
known_signs
);

90 (*
	tCC_func_±r
Ë(
	tmpc_t
, 
	tmpc_§˝å
, 
	tmpc_∫d_t
);

91 (*
	tCCC_func_±r
Ë(
	tmpc_t
, 
	tmpc_§˝å
, mpc_§˝å, 
	tmpc_∫d_t
);

92 (*
	tCCU_func_±r
Ë(
	tmpc_t
, 
	tmpc_§˝å
, , 
	tmpc_∫d_t
);

93 (*
	tCCS_func_±r
Ë(
	tmpc_t
, 
	tmpc_§˝å
, , 
	tmpc_∫d_t
);

94 (*
	tCCI_func_±r
Ë(
	tmpc_t
, 
	tmpc_§˝å
, , 
	tmpc_∫d_t
);

95 (*
	tCCF_func_±r
Ë(
	tmpc_t
, 
	tmpc_§˝å
, 
	tmp‰_§˝å
, 
	tmpc_∫d_t
);

96 (*
	tCFC_func_±r
Ë(
	tmpc_t
, 
	tmp‰_§˝å
, 
	tmpc_§˝å
, 
	tmpc_∫d_t
);

97 (*
	tCUC_func_±r
Ë(
	tmpc_t
, , 
	tmpc_§˝å
, 
	tmpc_∫d_t
);

98 (*
	tCUUC_func_±r
Ë(
	tmpc_t
, , , 
	tmpc_§˝å
,

99 
	tmpc_∫d_t
);

100 (*
	tFC_func_±r
Ë(
	tmp‰_t
, 
	tmpc_§˝å
, 
	tmp‰_∫d_t
);

104 
FC_func_±r
 
FC
;

105 
CC_func_±r
 
CC
;

106 
CCC_func_±r
 
CCC
;

107 
CCU_func_±r
 
CCU
;

108 
CCS_func_±r
 
CCS
;

109 
CCI_func_±r
 
CCI
;

110 
CCF_func_±r
 
CCF
;

111 
CFC_func_±r
 
CFC
;

112 
CUC_func_±r
 
CUC
;

113 
CUUC_func_±r
 
CUUC
;

114 } 
	tfunc_±r
;

119 
FC
,

120 
CC
,

121 
CCC
,

122 
CCU
,

123 
CCS
,

124 
CCI
,

125 
CCF
,

126 
CFC
,

127 
CUC
,

128 
CUUC


129 } 
	tfunc_ty≥
;

132 
	#FUNC_PROP_NONE
 0

	)

133 
	#FUNC_PROP_SYMETRIC
 1

	)

137 
func_±r
 
poöãr
;

138 
func_ty≥
 
ty≥
;

139 * 
«me
;

140 
¥›îtõs
;

141 } 
	tmpc_fun˘i⁄
;

143 
	#DECL_FUNC
(
_·y≥
, 
_fv¨
, 
_func
) \

144 
mpc_fun˘i⁄
 
_fv¨
; \

145 
_fv¨
.
poöãr
.
_·y≥
 = 
_func
; \

146 
_fv¨
.
ty≥
 = 
_·y≥
; \

147 
_fv¨
.
«me
 = 
	`QUOTE
 (
_func
); \

148 
_fv¨
.
¥›îtõs
 = 
FUNC_PROP_NONE
;

	)

160 
	`tgíîic
 (
mpc_fun˘i⁄
, 
mp‰_¥ec_t
, mp‰_¥ec_t, mp‰_¥ec_t, 
mp_exp_t
);

166 
	`d©a_check
 (
mpc_fun˘i⁄
, const *);

168 
FILE
 * 
	`›í_d©a_fûe
 (c⁄° *
fûe_«me
);

169 
	`˛o£_d©a_fûe
 (
FILE
 *
Â
);

172 
	`skù_whôe•a˚_commíts
 (
FILE
 *
Â
);

173 
	`ªad_ã∫¨y
 (
FILE
 *
Â
, * 
ã∫¨y
);

174 
	`ªad_mp‰_roundög_mode
 (
FILE
 *
Â
, 
mp‰_∫d_t
* 
∫d
);

175 
	`ªad_mpc_roundög_mode
 (
FILE
 *
Â
, 
mpc_∫d_t
* 
∫d
);

176 
mp‰_¥ec_t
 
	`ªad_mp‰_¥ec
 (
FILE
 *
Â
);

177 
	`ªad_öt
 (
FILE
 *
Â
, *
n
, c⁄° *
«me
);

178 
size_t
 
	`ªad_°rög
 (
FILE
 *
Â
, **
buf„r_±r
, size_à
buf„r_Àngth
, c⁄° *
«me
);

179 
	`ªad_mp‰
 (
FILE
 *
Â
, 
mp‰_±r
 
x
, *
known_sign
);

180 
	`ªad_mpc
 (
FILE
 *
Â
, 
mpc_±r
 
z
, 
known_signs_t
 *
ks
);

181 
	`ã°s_mem‹y_°¨t
 ();

182 
	`ã°s_mem‹y_íd
 ();

184 
	#TERNARY_NOT_CHECKED
 255

	)

186 
	#TERNARY_ERROR
 254

	)

	@tests/random.c

26 
	~<°dlib.h
>

28 
	~"mpc-ã°s.h
"

30 
	~"c⁄fig.h
"

32 #ifde‡
TIME_WITH_SYS_TIME


33 
	~<sys/time.h
>

34 
	~<time.h
>

36 #ifde‡
HAVE_SYS_TIME_H


37 
	~<sys/time.h
>

39 
	~<time.h
>

43 
gmp_ønd°©e_t
 
	gønds
;

44 
	gønds_öôülized
;

47 
	$ã°_°¨t
 ()

49 *
ívú⁄mít_£ed
;

50 
£ed
;

52 
	`ã°s_mem‹y_°¨t
 ();

54 i‡(
ønds_öôülized
)

56 
	`Ârötf
 (
°dîr
,

58 
	`exô
 (1);

61 
	`gmp_øndöô_deÁu…
 (
ønds
);

62 
ønds_öôülized
 = 1;

64 
ívú⁄mít_£ed
 = 
	`gëív
 ("GMP_CHECK_RANDOMIZE");

65 i‡(
ívú⁄mít_£ed
 =
NULL
)

66 
	`gmp_ønd£ed_ui
 (
ønds
, 0xfac11e);

69 
£ed
 = 
	`©oi
 (
ívú⁄mít_£ed
);

70 i‡(
£ed
 == 0 || seed == 1)

72 #i‡
HAVE_GETTIMEOFDAY


73 
timevÆ
 
tv
;

74 
	`gëtimeofday
 (&
tv
, 
NULL
);

75 
£ed
 = 
tv
.
tv_£c
 +Åv.
tv_u£c
;

77 
time_t
 
tv
;

78 
	`time
 (&
tv
);

79 
£ed
 = 
tv
;

81 
	`gmp_ønd£ed_ui
 (
ønds
, 
£ed
);

82 
	`¥ötf
 ("Seed GMP_CHECK_RANDOMIZE=%lu "

83 "(ö˛udêthi†ö bugÑï‹ts)\n", 
£ed
);

87 
	`¥ötf
 ("Re-£edög wôh GMP_CHECK_RANDOMIZE=%lu\n", 
£ed
);

88 
	`gmp_ønd£ed_ui
 (
ønds
, 
£ed
);

91 
	}
}

94 
	$ã°_íd
 ()

96 i‡(
ønds_öôülized
)

98 
ønds_öôülized
 = 0;

99 
	`gmp_ønd˛ór
 (
ønds
);

101 
	`mp‰_‰ì_ˇche
 ();

102 
	`ã°s_mem‹y_íd
 ();

103 
	}
}

113 
	$ã°_deÁu…_øndom
 (
mpc_±r
 
z
, 
mp_exp_t
 
emö
, mp_exp_à
emax
,

114 
√g©ive_¥obabûôy
,

115 
zîo_¥obabûôy
)

117 c⁄° 
ønge
 = ()
emax
 - ()
emö
 + 1;

118 
r
;

120 i‡(!
ønds_öôülized
)

122 
	`Ârötf
 (
°dîr
,

124 
	`exô
 (1);

129 
	`mpc_uøndom
 (
z
, 
ønds
);

130 } 
	`mp‰_zîo_p
 (
	`MPC_RE
 (
z
)Ë|| mp‰_zîo_∞(
	`MPC_IM
 (z)));

132 i‡(
zîo_¥obabûôy
 > 256)

133 
zîo_¥obabûôy
 = 256;

134 
r
 = 
	`gmp_uøndomb_ui
 (
ønds
, 19);

135 i‡((
r
 & 0x1FFË< 
zîo_¥obabûôy


136 || ((
r
 >> 9Ë& 0x1FFË< 
zîo_¥obabûôy
)

138 
zîo_ª_p
 = (
r
 & 0x1FFË< 
zîo_¥obabûôy
;

139 
zîo_im_p
 = ((
r
 >> 9Ë& 0x1FFË< 
zîo_¥obabûôy
;

141 i‡(
zîo_ª_p
 && 
zîo_im_p
)

144 
zîo_ª_p
 = (
r
 >> 18) & 1;

145 
zîo_im_p
 = !
zîo_ª_p
;

147 i‡(
zîo_ª_p
)

148 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z
), 0, 
GMP_RNDN
);

149 i‡(
zîo_im_p
)

150 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z
), 0, 
GMP_RNDN
);

152 i‡(!
	`mp‰_zîo_p
 (
	`MPC_RE
 (
z
)))

153 
	`mp‰_£t_exp
 (
	`MPC_RE
 (
z
), (
mp_exp_t
Ë
	`gmp_uøndomm_ui
 (
ønds
, 
ønge
Ë+ 
emö
);

155 i‡(!
	`mp‰_zîo_p
 (
	`MPC_IM
 (
z
)))

156 
	`mp‰_£t_exp
 (
	`MPC_IM
 (
z
), (
mp_exp_t
Ë
	`gmp_uøndomm_ui
 (
ønds
, 
ønge
Ë+ 
emö
);

158 i‡(
√g©ive_¥obabûôy
 > 256)

159 
√g©ive_¥obabûôy
 = 256;

160 
r
 = 
	`gmp_uøndomb_ui
 (
ønds
, 16);

161 i‡((
r
 & 0xFFË< 
√g©ive_¥obabûôy
)

162 
	`mp‰_√g
 (
	`MPC_RE
 (
z
), MPC_RE (z), 
GMP_RNDN
);

163 i‡(((
r
>>8Ë& 0xFFË< 
√g©ive_¥obabûôy
)

164 
	`mp‰_√g
 (
	`MPC_IM
 (
z
), MPC_IM (z), 
GMP_RNDN
);

165 
	}
}

	@tests/read_data.c

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"mpc-ã°s.h
"

26 *
	g∑th«me
;

27 
	glöe_numbî
;

30 
	gã°_löe_numbî
;

32 
	g√xtch¨
;

35 
	#MPC_INEX_CMP
(
r
, 
i
, 
c
) \

36 (((
r
Ë=
TERNARY_NOT_CHECKED
 || (rË=
	`MPC_INEX_RE
(
c
)) \

37 && ((
i
Ë=
TERNARY_NOT_CHECKED
 || (iË=
	`MPC_INEX_IM
 (
c
)))

	)

39 
	#MPFR_INEX_STR
(
öex
) \

40 (
öex
Ë=
TERNARY_NOT_CHECKED
 ? "?" \

41 : (
öex
) == +1 ? "+1" \

42 : (
öex
Ë=-1 ? "-1" : "0"

	)

44 c⁄° *
	gmp‰_∫d_mode
 [] =

47 c⁄° *
	g∫d_mode
[] =

67 
FILE
 *

68 
	$›í_d©a_fûe
 (c⁄° *
fûe_«me
)

70 
FILE
 *
Â
;

71 *
§c_dú
;

72 
deÁu…_§cdú
[] = ".";

74 
§c_dú
 = 
	`gëív
 ("srcdir");

75 i‡(
§c_dú
 =
NULL
)

76 
§c_dú
 = 
deÁu…_§cdú
;

78 
∑th«me
 = (*Ë
	`mÆloc
 ((
	`°æí
 (
§c_dú
)Ë+ såÀ¿(
fûe_«me
) + 2);

79 i‡(
∑th«me
 =
NULL
)

81 
	`¥ötf
 ("Cannotállocate memory\n");

82 
	`exô
 (1);

84 
	`•rötf
 (
∑th«me
, "%s/%s", 
§c_dú
, 
fûe_«me
);

85 
Â
 = 
	`f›í
 (
∑th«me
, "r");

86 i‡(
Â
 =
NULL
)

88 
	`Ârötf
 (
°dîr
, "U«bÀÅÿ›í %s\n", 
∑th«me
);

89 
	`exô
 (1);

92  
Â
;

93 
	}
}

96 
	$˛o£_d©a_fûe
 (
FILE
 *
Â
)

98 
	`‰ì
 (
∑th«me
);

99 
	`f˛o£
 (
Â
);

100 
	}
}

104 
	$skù_löe
 (
FILE
 *
Â
)

108 
√xtch¨
 !
EOF
 &&Çextchar != '\n')

109 
√xtch¨
 = 
	`gëc
 (
Â
);

110 i‡(
√xtch¨
 !
EOF
)

112 
löe_numbî
 ++;

113 
√xtch¨
 = 
	`gëc
 (
Â
);

115 
	}
}

118 
	$skù_whôe•a˚
 (
FILE
 *
Â
)

122 
	`is•a˚
 (
√xtch¨
))

124 i‡(
√xtch¨
 == '\n')

125 
löe_numbî
 ++;

126 
√xtch¨
 = 
	`gëc
 (
Â
);

128 
	}
}

131 
	$skù_whôe•a˚_commíts
 (
FILE
 *
Â
)

134 
	`skù_whôe•a˚
 (
Â
);

135 
√xtch¨
 == '#') {

136 
	`skù_löe
 (
Â
);

137 i‡(
√xtch¨
 !
EOF
)

138 
	`skù_whôe•a˚
 (
Â
);

140 
	}
}

143 
size_t


144 
	$ªad_°rög
 (
FILE
 *
Â
, **
buf„r_±r
, 
size_t
 
buf„r_Àngth
, c⁄° *
«me
)

146 
size_t
 
pos
;

147 *
buf„r
;

149 
pos
 = 0;

150 
buf„r
 = *
buf„r_±r
;

152 i‡(
√xtch¨
 == '"')

153 
√xtch¨
 = 
	`gëc
 (
Â
);

155 
îr‹
;

157 
√xtch¨
 !
EOF
 &&Çextchar != '"')

159 i‡(
√xtch¨
 == '\n')

160 
löe_numbî
 ++;

161 i‡(
pos
 + 1 > 
buf„r_Àngth
)

163 
buf„r
 = (*Ë
	`ªÆloc
 (buf„r, 2 * 
buf„r_Àngth
);

164 i‡(
buf„r
 =
NULL
)

166 
	`¥ötf
 ("Cannotállocate memory\n");

167 
	`exô
 (1);

169 
buf„r_Àngth
 *= 2;

171 
buf„r
[
pos
++] = 
√xtch¨
;

172 
√xtch¨
 = 
	`gëc
 (
Â
);

175 i‡(
√xtch¨
 != '"')

176 
îr‹
;

178 i‡(
pos
 + 1 > 
buf„r_Àngth
)

180 
buf„r
 = (*Ë
	`ªÆloc
 (buf„r, 
buf„r_Àngth
 + 1);

181 i‡(
buf„r
 =
NULL
)

183 
	`¥ötf
 ("Cannotállocate memory\n");

184 
	`exô
 (1);

186 
buf„r_Àngth
 *= 2;

188 
buf„r
[
pos
] = '\0';

190 
√xtch¨
 = 
	`gëc
 (
Â
);

191 
	`skù_whôe•a˚_commíts
 (
Â
);

193 
buf„r_±r
 = &
buf„r
;

195  
buf„r_Àngth
;

197 
îr‹
:

198 
	`¥ötf
 ("Error: UnableÅoÑead %s in file '%s'Üine '%lu'\n",

199 
«me
, 
∑th«me
, 
löe_numbî
);

200 
	`exô
 (1);

201 
	}
}

207 
	$ªad_ã∫¨y
 (
FILE
 *
Â
, * 
ã∫¨y
)

209 
√xtch¨
)

212 *
ã∫¨y
 = 
TERNARY_ERROR
;

215 *
ã∫¨y
 = 
TERNARY_NOT_CHECKED
;

218 *
ã∫¨y
 = +1;

221 *
ã∫¨y
 = 0;

224 *
ã∫¨y
 = -1;

227 
	`¥ötf
 ("Error: UnexpectedÅernary value '%c' in file '%s'Üine %lu\n",

228 
√xtch¨
, 
∑th«me
, 
löe_numbî
);

229 
	`exô
 (1);

232 
√xtch¨
 = 
	`gëc
 (
Â
);

233 
	`skù_whôe•a˚_commíts
 (
Â
);

234 
	}
}

237 
	$ªad_mp‰_roundög_mode
 (
FILE
 *
Â
, 
mp‰_∫d_t
* 
∫d
)

239 
√xtch¨
)

242 *
∫d
 = 
GMP_RNDN
;

245 *
∫d
 = 
GMP_RNDZ
;

248 *
∫d
 = 
GMP_RNDU
;

251 *
∫d
 = 
GMP_RNDD
;

254 
	`¥ötf
 ("Error: UnexpectedÑounding mode '%c' in file '%s'Üine %lu\n",

255 
√xtch¨
, 
∑th«me
, 
löe_numbî
);

256 
	`exô
 (1);

259 
√xtch¨
 = 
	`gëc
 (
Â
);

260 i‡(
√xtch¨
 !
EOF
 && !
	`is•a˚
 (nextchar)) {

261 
	`¥ötf
 ("Error: Rounding modeÇot followed by white space in file "

263 
∑th«me
, 
löe_numbî
);

264 
	`exô
 (1);

266 
	`skù_whôe•a˚_commíts
 (
Â
);

267 
	}
}

270 
	$ªad_mpc_roundög_mode
 (
FILE
 *
Â
, 
mpc_∫d_t
* 
∫d
)

272 
mp‰_∫d_t
 
ª
, 
im
;

273 
	`ªad_mp‰_roundög_mode
 (
Â
, &
ª
);

274 
	`ªad_mp‰_roundög_mode
 (
Â
, &
im
);

275 *
∫d
 = 
	`RNDC
 (
ª
, 
im
);

276 
	}
}

279 
	$ªad_öt
 (
FILE
 *
Â
, *
ƒód
, c⁄° *
«me
)

281 
n
 = 0;

283 i‡(
√xtch¨
 =
EOF
)

285 
	`¥ötf
 ("Error: Unexpected EOF whenÑeading int "

287 
∑th«me
, 
löe_numbî
);

288 
	`exô
 (1);

290 
	`ungëc
 (
√xtch¨
, 
Â
);

291 
n
 = 
	`fsˇnf
 (
Â
, "%i", 
ƒód
);

292 i‡(
	`„º‹
 (
Â
Ë|| 
n
 =0 ||Ç =
EOF
)

294 
	`¥ötf
 ("Error: CannotÑead %s in file '%s'Üine %lu\n",

295 
«me
, 
∑th«me
, 
löe_numbî
);

296 
	`exô
 (1);

298 
√xtch¨
 = 
	`gëc
 (
Â
);

299 
	`skù_whôe•a˚_commíts
 (
Â
);

300 
	}
}

303 
	$ªad_uöt
 (
FILE
 *
Â
, *
ui
)

305 
n
 = 0;

307 i‡(
√xtch¨
 =
EOF
)

309 
	`¥ötf
 ("Error: Unexpected EOF whenÑeading uint "

311 
∑th«me
, 
löe_numbî
);

312 
	`exô
 (1);

314 
	`ungëc
 (
√xtch¨
, 
Â
);

315 
n
 = 
	`fsˇnf
 (
Â
, "%lu", 
ui
);

316 i‡(
	`„º‹
 (
Â
Ë|| 
n
 =0 ||Ç =
EOF
)

318 
	`¥ötf
 ("Error: CannotÑead uint in file '%s'Üine %lu\n",

319 
∑th«me
, 
löe_numbî
);

320 
	`exô
 (1);

322 
√xtch¨
 = 
	`gëc
 (
Â
);

323 
	`skù_whôe•a˚_commíts
 (
Â
);

324 
	}
}

326 
mp‰_¥ec_t


327 
	$ªad_mp‰_¥ec
 (
FILE
 *
Â
)

329 
¥ec
;

330 
n
;

332 i‡(
√xtch¨
 =
EOF
) {

333 
	`¥ötf
 ("Error: Unexpected EOF whenÑeading mpfrÖrecision "

335 
∑th«me
, 
löe_numbî
);

336 
	`exô
 (1);

338 
	`ungëc
 (
√xtch¨
, 
Â
);

339 
n
 = 
	`fsˇnf
 (
Â
, "%lu", &
¥ec
);

340 i‡(
	`„º‹
 (
Â
))

341 
	`≥º‹
 ("Error whenÑeading mpfrÖrecision");

342 i‡(
n
 =0 ||Ç =
EOF
 || 
¥ec
 < 
MPFR_PREC_MIN
 ||Öª¯> 
MPFR_PREC_MAX
) {

343 
	`¥ötf
 ("Error: Impossible mpfrÖrecision in file '%s'Üine %lu\n",

344 
∑th«me
, 
löe_numbî
);

345 
	`exô
 (1);

347 
√xtch¨
 = 
	`gëc
 (
Â
);

348 
	`skù_whôe•a˚_commíts
 (
Â
);

349  (
mp‰_¥ec_t
Ë
¥ec
;

350 
	}
}

353 
	$ªad_mp‰_m™tisß
 (
FILE
 *
Â
, 
mp‰_±r
 
x
)

355 i‡(
√xtch¨
 =
EOF
) {

356 
	`¥ötf
 ("Error: Unexpected EOF whenÑeading mpfr mantissa "

358 
∑th«me
, 
löe_numbî
);

359 
	`exô
 (1);

361 
	`ungëc
 (
√xtch¨
, 
Â
);

362 i‡(
	`mp‰_öp_°r
 (
x
, 
Â
, 0, 
GMP_RNDN
) == 0) {

363 
	`¥ötf
 ("Error: ImpossibleÅoÑead mpfr mantissa "

365 
∑th«me
, 
löe_numbî
);

366 
	`exô
 (1);

368 
√xtch¨
 = 
	`gëc
 (
Â
);

369 
	`skù_whôe•a˚_commíts
 (
Â
);

370 
	}
}

373 
	$ªad_mp‰
 (
FILE
 *
Â
, 
mp‰_±r
 
x
, *
known_sign
)

375 
sign
;

376 
	`mp‰_£t_¥ec
 (
x
, 
	`ªad_mp‰_¥ec
 (
Â
));

377 
sign
 = 
√xtch¨
;

378 
	`ªad_mp‰_m™tisß
 (
Â
, 
x
);

383 i‡(
known_sign
 !
NULL
)

384 *
known_sign
 =

385 (!
	`mp‰_zîo_p
 (
x
Ë&& !
	`mp‰_öf_p
 (x))

386 || 
sign
 == '+' || sign == '-';

387 
	}
}

390 
	$ªad_mpc
 (
FILE
 *
Â
, 
mpc_±r
 
z
, 
known_signs_t
 *
ks
)

392 
	`ªad_mp‰
 (
Â
, 
	`MPC_RE
 (
z
), 
ks
 =
NULL
 ? NULL : &ks->
ª
);

393 
	`ªad_mp‰
 (
Â
, 
	`MPC_IM
 (
z
), 
ks
 =
NULL
 ? NULL : &ks->
im
);

394 
	}
}

397 
	$check_com∑tibÀ
 (
öex
, 
mp‰_t
 
ex≥˘ed
, 
mp‰_∫d_t
 
∫d
, *
s
)

399 i‡((
∫d
 =
GMP_RNDU
 && 
öex
 == -1) ||

400 (
∫d
 =
GMP_RNDD
 && 
öex
 == +1) ||

401 (
∫d
 =
GMP_RNDZ
 && 
	`mp‰_signbô
 (
ex≥˘ed
Ë=0 && 
öex
 == +1) ||

402 (
∫d
 =
GMP_RNDZ
 && 
	`mp‰_signbô
 (
ex≥˘ed
Ë=1 && 
öex
 == -1))

404 i‡(
s
 !
NULL
)

405 
	`¥ötf
 ("IncompatibleÅernary value '%c' (%sÖart) in file '%s'Üine %lu\n",

406 (
öex
 =1Ë? '+' : '-', 
s
, 
∑th«me
, 
ã°_löe_numbî
);

408 
	`¥ötf
 ("IncompatibleÅernary value '%c' in file '%s'Üine %lu\n",

409 (
öex
 =1Ë? '+' : '-', 
∑th«me
, 
ã°_löe_numbî
);

411 
	}
}

415 
	$ªad_cc
 (
FILE
 *
Â
, *
öex_ª
, *
öex_im
, 
mpc_±r
 
ex≥˘ed
,

416 
known_signs_t
 *
signs
, 
mpc_±r
 
›
, 
mpc_∫d_t
 *
∫d
)

418 
ã°_löe_numbî
 = 
löe_numbî
;

419 
	`ªad_ã∫¨y
 (
Â
, 
öex_ª
);

420 
	`ªad_ã∫¨y
 (
Â
, 
öex_im
);

421 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, 
signs
);

422 
	`ªad_mpc
 (
Â
, 
›
, 
NULL
);

423 
	`ªad_mpc_roundög_mode
 (
Â
, 
∫d
);

424 
	`check_com∑tibÀ
 (*
öex_ª
, 
	`MPC_RE
(
ex≥˘ed
), 
	`MPC_RND_RE
(*
∫d
), "real");

425 
	`check_com∑tibÀ
 (*
öex_im
, 
	`MPC_IM
(
ex≥˘ed
), 
	`MPC_RND_IM
(*
∫d
), "imag");

426 
	}
}

429 
	$ªad_fc
 (
FILE
 *
Â
, *
öex
, 
mp‰_±r
 
ex≥˘ed
, *
sign
, 
mpc_±r
 
›
,

430 
mp‰_∫d_t
 *
∫d
)

432 
ã°_löe_numbî
 = 
löe_numbî
;

433 
	`ªad_ã∫¨y
 (
Â
, 
öex
);

434 
	`ªad_mp‰
 (
Â
, 
ex≥˘ed
, 
sign
);

435 
	`ªad_mpc
 (
Â
, 
›
, 
NULL
);

436 
	`ªad_mp‰_roundög_mode
 (
Â
, 
∫d
);

437 
	`check_com∑tibÀ
 (*
öex
, 
ex≥˘ed
, *
∫d
, 
NULL
);

438 
	}
}

441 
	$ªad_ccc
 (
FILE
 *
Â
, *
öex_ª
, *
öex_im
, 
mpc_±r
 
ex≥˘ed
,

442 
known_signs_t
 *
signs
, 
mpc_±r
 
›1
, mpc_±∏
›2
, 
mpc_∫d_t
 *
∫d
)

444 
ã°_löe_numbî
 = 
löe_numbî
;

445 
	`ªad_ã∫¨y
 (
Â
, 
öex_ª
);

446 
	`ªad_ã∫¨y
 (
Â
, 
öex_im
);

447 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, 
signs
);

448 
	`ªad_mpc
 (
Â
, 
›1
, 
NULL
);

449 
	`ªad_mpc
 (
Â
, 
›2
, 
NULL
);

450 
	`ªad_mpc_roundög_mode
 (
Â
, 
∫d
);

451 
	`check_com∑tibÀ
 (*
öex_ª
, 
	`MPC_RE
(
ex≥˘ed
), 
	`MPC_RND_RE
(*
∫d
), "real");

452 
	`check_com∑tibÀ
 (*
öex_im
, 
	`MPC_IM
(
ex≥˘ed
), 
	`MPC_RND_IM
(*
∫d
), "imag");

453 
	}
}

456 
	$ªad_cfc
 (
FILE
 *
Â
, *
öex_ª
, *
öex_im
, 
mpc_±r
 
ex≥˘ed
,

457 
known_signs_t
 *
signs
, 
mp‰_±r
 
›1
, 
mpc_±r
 
›2
, 
mpc_∫d_t
 *
∫d
)

459 
ã°_löe_numbî
 = 
löe_numbî
;

460 
	`ªad_ã∫¨y
 (
Â
, 
öex_ª
);

461 
	`ªad_ã∫¨y
 (
Â
, 
öex_im
);

462 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, 
signs
);

463 
	`ªad_mp‰
 (
Â
, 
›1
, 
NULL
);

464 
	`ªad_mpc
 (
Â
, 
›2
, 
NULL
);

465 
	`ªad_mpc_roundög_mode
 (
Â
, 
∫d
);

466 
	`check_com∑tibÀ
 (*
öex_ª
, 
	`MPC_RE
(
ex≥˘ed
), 
	`MPC_RND_RE
(*
∫d
), "real");

467 
	`check_com∑tibÀ
 (*
öex_im
, 
	`MPC_IM
(
ex≥˘ed
), 
	`MPC_RND_IM
(*
∫d
), "imag");

468 
	}
}

471 
	$ªad_ccf
 (
FILE
 *
Â
, *
öex_ª
, *
öex_im
, 
mpc_±r
 
ex≥˘ed
,

472 
known_signs_t
 *
signs
, 
mpc_±r
 
›1
, 
mp‰_±r
 
›2
, 
mpc_∫d_t
 *
∫d
)

474 
ã°_löe_numbî
 = 
löe_numbî
;

475 
	`ªad_ã∫¨y
 (
Â
, 
öex_ª
);

476 
	`ªad_ã∫¨y
 (
Â
, 
öex_im
);

477 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, 
signs
);

478 
	`ªad_mpc
 (
Â
, 
›1
, 
NULL
);

479 
	`ªad_mp‰
 (
Â
, 
›2
, 
NULL
);

480 
	`ªad_mpc_roundög_mode
 (
Â
, 
∫d
);

481 
	`check_com∑tibÀ
 (*
öex_ª
, 
	`MPC_RE
(
ex≥˘ed
), 
	`MPC_RND_RE
(*
∫d
), "real");

482 
	`check_com∑tibÀ
 (*
öex_im
, 
	`MPC_IM
(
ex≥˘ed
), 
	`MPC_RND_IM
(*
∫d
), "imag");

483 
	}
}

486 
	$ªad_ccu
 (
FILE
 *
Â
, *
öex_ª
, *
öex_im
, 
mpc_±r
 
ex≥˘ed
,

487 
known_signs_t
 *
signs
, 
mpc_±r
 
›1
, *
›2
, 
mpc_∫d_t
 *
∫d
)

489 
ã°_löe_numbî
 = 
löe_numbî
;

490 
	`ªad_ã∫¨y
 (
Â
, 
öex_ª
);

491 
	`ªad_ã∫¨y
 (
Â
, 
öex_im
);

492 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, 
signs
);

493 
	`ªad_mpc
 (
Â
, 
›1
, 
NULL
);

494 
	`ªad_uöt
 (
Â
, 
›2
);

495 
	`ªad_mpc_roundög_mode
 (
Â
, 
∫d
);

496 
	`check_com∑tibÀ
 (*
öex_ª
, 
	`MPC_RE
(
ex≥˘ed
), 
	`MPC_RND_RE
(*
∫d
), "real");

497 
	`check_com∑tibÀ
 (*
öex_im
, 
	`MPC_IM
(
ex≥˘ed
), 
	`MPC_RND_IM
(*
∫d
), "imag");

498 
	}
}

503 
	$d©a_check
 (
mpc_fun˘i⁄
 
fun˘i⁄
, c⁄° *
fûe_«me
)

505 
FILE
 *
Â
;

507 
öex_ª
;

508 
mp‰_t
 
x1
, 
x2
;

509 
mp‰_∫d_t
 
mp‰_∫d
 = 
GMP_RNDN
;

510 
sign_ªÆ
;

512 
öex_im
;

513 
mpc_t
 
z1
, 
z2
, 
z3
, 
z4
;

514 
mpc_∫d_t
 
∫d
 = 
MPC_RNDNN
;

516 
ui
;

518 
known_signs_t
 
signs
;

519 
öex
 = 0;

521 
Â
 = 
	`›í_d©a_fûe
 (
fûe_«me
);

524 
	`mpc_öô2
 (
z1
, 2);

525 
fun˘i⁄
.
ty≥
)

527 
FC
:

528 
	`mp‰_öô
 (
x1
);

529 
	`mp‰_öô
 (
x2
);

531 
CC
: 
CCU
:

532 
	`mpc_öô2
 (
z2
, 2);

533 
	`mpc_öô2
 (
z3
, 2);

535 
CCC
:

536 
	`mpc_öô2
 (
z2
, 2);

537 
	`mpc_öô2
 (
z3
, 2);

538 
	`mpc_öô2
 (
z4
, 2);

540 
CFC
: 
CCF
:

541 
	`mp‰_öô
 (
x1
);

542 
	`mpc_öô2
 (
z2
, 2);

543 
	`mpc_öô2
 (
z3
, 2);

550 
löe_numbî
 = 1;

551 
√xtch¨
 = 
	`gëc
 (
Â
);

552 
	`skù_whôe•a˚_commíts
 (
Â
);

553 
√xtch¨
 !
EOF
) {

558 
fun˘i⁄
.
ty≥
)

560 
FC
:

561 
	`ªad_fc
 (
Â
, &
öex_ª
, 
x1
, &
sign_ªÆ
, 
z1
, &
mp‰_∫d
);

562 
	`mp‰_£t_¥ec
 (
x2
, 
	`MPFR_PREC
 (
x1
));

563 
öex
 = 
fun˘i⁄
.
poöãr
.
	`FC
 (
x2
, 
z1
, 
mp‰_∫d
);

564 i‡((
öex_ª
 !
TERNARY_NOT_CHECKED
 && i√x_ª !
öex
)

565 || !
	`ßme_mp‰_vÆue
 (
x1
, 
x2
, 
sign_ªÆ
))

567 
mp‰_t
 
gŸ
, 
ex≥˘ed
;

568 
mpc_t
 
›
;

569 
›
[0] = 
z1
[0];

570 
gŸ
[0] = 
x2
[0];

571 
ex≥˘ed
[0] = 
x1
[0];

572 
	`¥ötf
 ("%s(op) failed (%s:%lu)\nwithÑounding mode %s\n",

573 
fun˘i⁄
.
«me
, 
fûe_«me
, 
ã°_löe_numbî
,

574 
mp‰_∫d_mode
[
mp‰_∫d
]);

575 i‡(
öex_ª
 !
TERNARY_NOT_CHECKED
 && i√x_ª !
öex
)

576 
	`¥ötf
("ternary value: got %s,Éxpected %s\n",

577 
	`MPFR_INEX_STR
 (
öex
), MPFR_INEX_STR (
öex_ª
));

578 
	`OUT
 (
›
);

579 
	`¥ötf
 (" ");

580 
	`MPFR_OUT
 (
gŸ
);

581 
	`MPFR_OUT
 (
ex≥˘ed
);

583 
	`exô
 (1);

587 
CC
:

588 
	`ªad_cc
 (
Â
, &
öex_ª
, &
öex_im
, 
z1
, &
signs
, 
z2
, &
∫d
);

589 
	`mp‰_£t_¥ec
 (
	`MPC_RE
 (
z3
), 
	`MPC_PREC_RE
 (
z1
));

590 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
z3
), 
	`MPC_PREC_IM
 (
z1
));

591 
öex
 = 
fun˘i⁄
.
poöãr
.
	`CC
 (
z3
, 
z2
, 
∫d
);

592 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
)

593 || !
	`ßme_mpc_vÆue
 (
z3
, 
z1
, 
signs
))

595 
mpc_t
 
›
, 
gŸ
, 
ex≥˘ed
;

596 
›
[0] = 
z2
[0];

597 
ex≥˘ed
[0]
z1
[0];

598 
gŸ
[0] = 
z3
[0];

599 
	`¥ötf
 ("%s(op) failed (line %lu)\nwithÑounding mode %s\n",

600 
fun˘i⁄
.
«me
, 
ã°_löe_numbî
, 
∫d_mode
[
∫d
]);

601 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
))

602 
	`¥ötf
("ternary value: got %s,Éxpected (%s, %s)\n",

603 
	`MPC_INEX_STR
 (
öex
),

604 
	`MPFR_INEX_STR
 (
öex_ª
), MPFR_INEX_STR (
öex_im
));

605 
	`OUT
 (
›
);

606 
	`¥ötf
 (" ");

607 
	`OUT
 (
gŸ
);

608 
	`OUT
 (
ex≥˘ed
);

610 
	`exô
 (1);

614 
CCC
:

615 
	`ªad_ccc
 (
Â
, &
öex_ª
, &
öex_im
, 
z1
, &
signs
, 
z2
, 
z3
, &
∫d
);

616 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
z4
), 
	`MPC_PREC_RE
 (
z1
));

617 
	`mp‰_£t_¥ec
 (
	`MPC_IM
(
z4
), 
	`MPC_PREC_IM
 (
z1
));

618 
öex
 = 
fun˘i⁄
.
poöãr
.
	`CCC
 (
z4
, 
z2
, 
z3
, 
∫d
);

619 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
)

620 || !
	`ßme_mpc_vÆue
 (
z4
, 
z1
, 
signs
))

623 
mpc_t
 
›1
, 
›2
, 
gŸ
, 
ex≥˘ed
;

624 
›1
[0] = 
z2
[0];

625 
›2
[0] = 
z3
[0];

626 
ex≥˘ed
[0]
z1
[0];

627 
gŸ
[0] = 
z4
[0];

628 
	`¥ötf
 ("%s(op) failed (line %lu)\nwithÑounding mode %s\n",

629 
fun˘i⁄
.
«me
, 
ã°_löe_numbî
, 
∫d_mode
[
∫d
]);

630 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
))

631 
	`¥ötf
("ternary value: got %s,Éxpected (%s, %s)\n",

632 
	`MPC_INEX_STR
 (
öex
),

633 
	`MPFR_INEX_STR
 (
öex_ª
), MPFR_INEX_STR (
öex_im
));

634 
	`OUT
 (
›1
);

635 
	`OUT
 (
›2
);

636 
	`¥ötf
 (" ");

637 
	`OUT
 (
gŸ
);

638 
	`OUT
 (
ex≥˘ed
);

640 
	`exô
 (1);

642 i‡(
fun˘i⁄
.
¥›îtõs
 & 
FUNC_PROP_SYMETRIC
)

644 
öex
 = 
fun˘i⁄
.
poöãr
.
	`CCC
 (
z4
, 
z3
, 
z2
, 
∫d
);

645 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
)

646 || !
	`ßme_mpc_vÆue
 (
z4
, 
z1
, 
signs
))

649 
mpc_t
 
›1
, 
›2
, 
gŸ
, 
ex≥˘ed
;

650 
›1
[0] = 
z3
[0];

651 
›2
[0] = 
z2
[0];

652 
ex≥˘ed
[0]
z1
[0];

653 
gŸ
[0] = 
z4
[0];

654 
	`¥ötf
 ("%s(op) failed (line %lu/symetricÅest)\n"

656 
fun˘i⁄
.
«me
, 
ã°_löe_numbî
, 
∫d_mode
[
∫d
]);

657 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
))

658 
	`¥ötf
("ternary value: got %s,Éxpected (%s, %s)\n",

659 
	`MPC_INEX_STR
 (
öex
),

660 
	`MPFR_INEX_STR
 (
öex_ª
), MPFR_INEX_STR (
öex_im
));

661 
	`OUT
 (
›1
);

662 
	`OUT
 (
›2
);

663 
	`¥ötf
 (" ");

664 
	`OUT
 (
gŸ
);

665 
	`OUT
 (
ex≥˘ed
);

667 
	`exô
 (1);

672 
CFC
:

673 
	`ªad_cfc
 (
Â
, &
öex_ª
, &
öex_im
, 
z1
, &
signs
, 
x1
, 
z2
, &
∫d
);

674 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
z3
), 
	`MPC_PREC_RE
 (
z1
));

675 
	`mp‰_£t_¥ec
 (
	`MPC_IM
(
z3
), 
	`MPC_PREC_IM
 (
z1
));

676 
öex
 = 
fun˘i⁄
.
poöãr
.
	`CFC
 (
z3
, 
x1
, 
z2
, 
∫d
);

677 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
)

678 || !
	`ßme_mpc_vÆue
 (
z3
, 
z1
, 
signs
))

681 
mpc_t
 
›2
, 
gŸ
, 
ex≥˘ed
;

682 
mp‰_t
 
›1
;

683 
›1
[0] = 
x1
[0];

684 
›2
[0] = 
z2
[0];

685 
ex≥˘ed
[0]
z1
[0];

686 
gŸ
[0] = 
z3
[0];

687 
	`¥ötf
 ("%s(op) failed (line %lu)\nwithÑounding mode %s\n",

688 
fun˘i⁄
.
«me
, 
ã°_löe_numbî
, 
∫d_mode
[
∫d
]);

689 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
))

690 
	`¥ötf
("ternary value: got %s,Éxpected (%s, %s)\n",

691 
	`MPC_INEX_STR
 (
öex
),

692 
	`MPFR_INEX_STR
 (
öex_ª
), MPFR_INEX_STR (
öex_im
));

693 
	`MPFR_OUT
 (
›1
);

694 
	`OUT
 (
›2
);

695 
	`¥ötf
 (" ");

696 
	`OUT
 (
gŸ
);

697 
	`OUT
 (
ex≥˘ed
);

699 
	`exô
 (1);

703 
CCF
:

704 
	`ªad_ccf
 (
Â
, &
öex_ª
, &
öex_im
, 
z1
, &
signs
, 
z2
, 
x1
, &
∫d
);

705 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
z3
), 
	`MPC_PREC_RE
 (
z1
));

706 
	`mp‰_£t_¥ec
 (
	`MPC_IM
(
z3
), 
	`MPC_PREC_IM
 (
z1
));

707 
öex
 = 
fun˘i⁄
.
poöãr
.
	`CCF
 (
z3
, 
z2
, 
x1
, 
∫d
);

708 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
)

709 || !
	`ßme_mpc_vÆue
 (
z3
, 
z1
, 
signs
))

712 
mpc_t
 
›1
, 
gŸ
, 
ex≥˘ed
;

713 
mp‰_t
 
›2
;

714 
›1
[0] = 
z2
[0];

715 
›2
[0] = 
x1
[0];

716 
ex≥˘ed
[0]
z1
[0];

717 
gŸ
[0] = 
z3
[0];

718 
	`¥ötf
 ("%s(op) failed (line %lu)\nwithÑounding mode %s\n",

719 
fun˘i⁄
.
«me
, 
ã°_löe_numbî
, 
∫d_mode
[
∫d
]);

720 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
))

721 
	`¥ötf
("ternary value: got %s,Éxpected (%s, %s)\n",

722 
	`MPC_INEX_STR
 (
öex
),

723 
	`MPFR_INEX_STR
 (
öex_ª
), MPFR_INEX_STR (
öex_im
));

724 
	`OUT
 (
›1
);

725 
	`MPFR_OUT
 (
›2
);

726 
	`¥ötf
 (" ");

727 
	`OUT
 (
gŸ
);

728 
	`OUT
 (
ex≥˘ed
);

730 
	`exô
 (1);

734 
CCU
:

735 
	`ªad_ccu
 (
Â
, &
öex_ª
, &
öex_im
, 
z1
, &
signs
, 
z2
, &
ui
, &
∫d
);

736 
	`mp‰_£t_¥ec
 (
	`MPC_RE
(
z3
), 
	`MPC_PREC_RE
 (
z1
));

737 
	`mp‰_£t_¥ec
 (
	`MPC_IM
(
z3
), 
	`MPC_PREC_IM
 (
z1
));

738 
öex
 = 
fun˘i⁄
.
poöãr
.
	`CCU
 (
z3
, 
z2
, 
ui
, 
∫d
);

739 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
)

740 || !
	`ßme_mpc_vÆue
 (
z3
, 
z1
, 
signs
))

743 
mpc_t
 
›1
, 
gŸ
, 
ex≥˘ed
;

744 
›1
[0] = 
z2
[0];

745 
ex≥˘ed
[0]
z1
[0];

746 
gŸ
[0] = 
z3
[0];

747 
	`¥ötf
 ("%s(op) failed (line %lu)\nwithÑounding mode %s\n",

748 
fun˘i⁄
.
«me
, 
ã°_löe_numbî
, 
∫d_mode
[
∫d
]);

749 i‡(!
	`MPC_INEX_CMP
 (
öex_ª
, 
öex_im
, 
öex
))

750 
	`¥ötf
("ternary value: got %s,Éxpected (%s, %s)\n",

751 
	`MPC_INEX_STR
 (
öex
),

752 
	`MPFR_INEX_STR
 (
öex_ª
), MPFR_INEX_STR (
öex_im
));

753 
	`OUT
 (
›1
);

754 
	`¥ötf
 ("›2 %lu\¿ ", 
ui
);

755 
	`OUT
 (
gŸ
);

756 
	`OUT
 (
ex≥˘ed
);

758 
	`exô
 (1);

768 
	`mpc_˛ór
 (
z1
);

769 
fun˘i⁄
.
ty≥
)

771 
FC
:

772 
	`mp‰_˛ór
 (
x1
);

773 
	`mp‰_˛ór
 (
x2
);

775 
CC
: 
CCU
:

776 
	`mpc_˛ór
 (
z2
);

777 
	`mpc_˛ór
 (
z3
);

779 
CCC
:

780 
	`mpc_˛ór
 (
z2
);

781 
	`mpc_˛ór
 (
z3
);

782 
	`mpc_˛ór
 (
z4
);

784 
CFC
: 
CCF
:

785 
	`mp‰_˛ór
 (
x1
);

786 
	`mpc_˛ór
 (
z2
);

787 
	`mpc_˛ór
 (
z3
);

793 
	`˛o£_d©a_fûe
 (
Â
);

794 
	}
}

	@tests/tabs.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
FC
, 
f
, 
mpc_abs
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 1, 0);

32 
	`d©a_check
 (
f
, "abs.dat");

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tacos.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_acos
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "acos.dat");

32 
	`tgíîic
 (
f
, 2, 512, 7, 7);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tacosh.c

22 
	~"mpc-ã°s.h
"

25 
	$bug20091120
 ()

27 
mpc_t
 
x
, 
y
;

29 
	`mpc_öô2
 (
x
, 53);

30 
	`mpc_öô3
 (
y
, 17, 42);

31 
	`mpc_£t_ui_ui
 (
x
, 1, 1, 
MPC_RNDNN
);

32 
	`mpc_acosh
 (
y
, 
x
, 
MPC_RNDNN
);

33 i‡(
	`mp‰_gë_¥ec
 (
	`mpc_ªÆªf
(
y
)) != 17 ||

34 
	`mp‰_gë_¥ec
 (
	`mpc_imagªf
(
y
)) != 42)

36 
	`¥ötf
 ("Error, mpc_acosh changedÅheÖrecisions!!!\n");

37 
	`exô
 (1);

39 
	`mpc_˛ór
 (
x
);

40 
	`mpc_˛ór
 (
y
);

41 
	}
}

44 
	$maö
 ()

46 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_acosh
);

48 
	`ã°_°¨t
 ();

50 
	`bug20091120
 ();

52 
	`d©a_check
 (
f
, "acosh.dat");

53 
	`tgíîic
 (
f
, 2, 512, 7, 7);

55 
	`ã°_íd
 ();

58 
	}
}

	@tests/tadd.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$check_ã∫¨y_vÆue
 ()

28 
mpc_t
 
x
, 
y
, 
z
;

29 
mp_¥ec_t
 
¥ec
;

31 
	`mpc_öô2
 (
x
, 2);

32 
	`mpc_öô2
 (
y
, 2);

33 
	`mpc_öô2
 (
z
, 2);

35 
¥ec
 = 2;Örec <= 1000;Örec++)

37 
	`mpc_£t_¥ec
 (
x
, 
¥ec
);

38 
	`mpc_£t_¥ec
 (
y
, 
¥ec
);

40 
	`mpc_£t_ui
 (
x
, 1, 
MPC_RNDNN
);

41 
	`mpc_mul_2exp
 (
x
, x, 
¥ec
, 
MPC_RNDNN
);

42 
	`mpc_£t_ui
 (
y
, 1, 
MPC_RNDNN
);

44 i‡(
	`mpc_add
 (
z
, 
x
, 
y
, 
MPC_RNDNN
) == 0)

46 
	`Ârötf
 (
°dîr
, "Error in mpc_add: 2^(-prec)+1 cannot beÉxact\n");

47 
	`exô
 (1);

51 
	`mpc_˛ór
 (
x
);

52 
	`mpc_˛ór
 (
y
);

53 
	`mpc_˛ór
 (
z
);

54 
	}
}

57 
	$maö
 ()

59 
	`DECL_FUNC
 (
CCC
, 
f
, 
mpc_add
);

60 
f
.
¥›îtõs
 = 
FUNC_PROP_SYMETRIC
;

62 
	`ã°_°¨t
 ();

64 
	`check_ã∫¨y_vÆue
();

65 
	`d©a_check
 (
f
, "add.dat");

66 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

68 
	`ã°_íd
 ();

71 
	}
}

	@tests/tadd_fr.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$check_ã∫¨y_vÆue
 (
mp‰_¥ec_t
 
¥ec_max
, mp‰_¥ec_à
°ï
)

28 
mp‰_¥ec_t
 
¥ec
;

29 
mpc_t
 
z
;

30 
mp‰_t
 
f
;

32 
	`mpc_öô2
 (
z
, 2);

33 
	`mp‰_öô
 (
f
);

35 
¥ec
 = 2;Öª¯< 
¥ec_max
;Öª¯+
°ï
)

37 
	`mpc_£t_¥ec
 (
z
, 
¥ec
);

38 
	`mp‰_£t_¥ec
 (
f
, 
¥ec
);

40 
	`mpc_£t_ui
 (
z
, 1, 
MPC_RNDNN
);

41 
	`mp‰_£t_ui
 (
f
, 1, 
GMP_RNDN
);

42 i‡(
	`mpc_add_‰
 (
z
, z, 
f
, 
MPC_RNDNZ
))

44 
	`¥ötf
 ("Error in mpc_add_fr: 1+1 should beÉxact\n");

45 
	`exô
 (1);

48 
	`mpc_£t_ui
 (
z
, 1, 
MPC_RNDNN
);

49 
	`mpc_mul_2exp
 (
z
, z, 
¥ec
, 
MPC_RNDNN
);

50 i‡(
	`mpc_add_‰
 (
z
, z, 
f
, 
MPC_RNDNN
) == 0)

52 
	`Ârötf
 (
°dîr
, "Error in mpc_add_fr: 2^prec+1 cannot beÉxact\n");

53 
	`exô
 (1);

56 
	`mpc_˛ór
 (
z
);

57 
	`mp‰_˛ór
 (
f
);

58 
	}
}

61 
	$maö
 ()

63 
	`DECL_FUNC
 (
CCF
, 
f
, 
mpc_add_‰
);

64 
	`ã°_°¨t
 ();

66 
	`check_ã∫¨y_vÆue
 (1024, 1);

68 
	`d©a_check
 (
f
, "add_fr.dat");

69 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

71 
	`ã°_íd
 ();

73 
	}
}

	@tests/tadd_ui.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$check_ã∫¨y_vÆue
 ()

28 
i
;

29 
mpc_t
 
z
;

31 
	`mpc_öô2
 (
z
, 2);

33 
i
=2; i <= 1024; i++)

35 
	`mpc_£t_¥ec
 (
z
, 
i
);

37 
	`mpc_£t_ui
 (
z
, 1, 
MPC_RNDNN
);

38 i‡(
	`mpc_add_ui
 (
z
, z, 1, 
MPC_RNDNZ
))

40 
	`¥ötf
 ("Error in mpc_add_ui: 1+1 should beÉxact\n");

41 
	`exô
 (1);

44 
	`mpc_£t_ui
 (
z
, 1, 
MPC_RNDNN
);

45 
	`mpc_mul_2exp
 (
z
, z, 
i
, 
MPC_RNDNN
);

46 i‡(
	`mpc_add_ui
 (
z
, z, 1, 
MPC_RNDNN
) == 0)

48 
	`¥ötf
 ("Error in mpc_add_ui: 2^prec+1 cannot beÉxact\n");

49 
	`exô
 (1);

53 
	`mpc_˛ór
 (
z
);

54 
	}
}

57 
	$maö
 ()

59 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_add_ui
);

61 
	`ã°_°¨t
 ();

63 
	`check_ã∫¨y_vÆue
 ();

64 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

66 
	`ã°_íd
 ();

69 
	}
}

	@tests/targ.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
FC
, 
f
, 
mpc_¨g
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 1, 4096);

32 
	`d©a_check
 (
f
, "arg.dat");

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tasin.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_asö
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "asin.dat");

32 
	`tgíîic
 (
f
, 2, 512, 7, 7);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tasinh.c

22 
	~"mpc-ã°s.h
"

25 
	$bug20091120
 ()

27 
mpc_t
 
x
, 
y
;

29 
	`mpc_öô2
 (
x
, 53);

30 
	`mpc_öô3
 (
y
, 17, 42);

31 
	`mpc_£t_ui_ui
 (
x
, 1, 1, 
MPC_RNDNN
);

32 
	`mpc_asöh
 (
y
, 
x
, 
MPC_RNDNN
);

33 i‡(
	`mp‰_gë_¥ec
 (
	`mpc_ªÆªf
(
y
)) != 17 ||

34 
	`mp‰_gë_¥ec
 (
	`mpc_imagªf
(
y
)) != 42)

36 
	`¥ötf
 ("Error, mpc_asinh changedÅheÖrecisions!!!\n");

37 
	`exô
 (1);

39 
	`mpc_˛ór
 (
x
);

40 
	`mpc_˛ór
 (
y
);

41 
	}
}

44 
	$maö
 ()

46 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_asöh
);

48 
	`ã°_°¨t
 ();

50 
	`bug20091120
 ();

52 
	`d©a_check
 (
f
, "asinh.dat");

53 
	`tgíîic
 (
f
, 2, 512, 7, 7);

55 
	`ã°_íd
 ();

58 
	}
}

	@tests/tatan.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_©™
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "atan.dat");

32 
	`tgíîic
 (
f
, 2, 512, 5, 128);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tatanh.c

22 
	~"mpc-ã°s.h
"

25 
	$bug20091120
 ()

27 
mpc_t
 
x
, 
y
;

29 
	`mpc_öô2
 (
x
, 53);

30 
	`mpc_öô3
 (
y
, 17, 42);

31 
	`mpc_£t_ui_ui
 (
x
, 1, 1, 
MPC_RNDNN
);

32 
	`mpc_©™h
 (
y
, 
x
, 
MPC_RNDNN
);

33 i‡(
	`mp‰_gë_¥ec
 (
	`mpc_ªÆªf
(
y
)) != 17 ||

34 
	`mp‰_gë_¥ec
 (
	`mpc_imagªf
(
y
)) != 42)

36 
	`¥ötf
 ("Error, mpc_atanh changedÅheÖrecisions!!!\n");

37 
	`exô
 (1);

39 
	`mpc_˛ór
 (
x
);

40 
	`mpc_˛ór
 (
y
);

41 
	}
}

44 
	$maö
 ()

46 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_©™h
);

48 
	`ã°_°¨t
 ();

50 
	`bug20091120
 ();

52 
	`d©a_check
 (
f
, "atanh.dat");

53 
	`tgíîic
 (
f
, 2, 512, 5, 128);

55 
	`ã°_íd
 ();

58 
	}
}

	@tests/tconj.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_c⁄j
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "conj.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 1, 0);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tcos.c

22 
	~"mpc-ã°s.h
"

25 
	$bug20090105
 ()

28 
mpc_t
 
›
, 
ex≥˘ed
, 
gŸ
;

29 
	`mpc_öô2
 (
›
, 324);

30 
	`mpc_öô2
 (
ex≥˘ed
, 324);

31 
	`mpc_öô2
 (
gŸ
, 324);

33 
	`mp‰_£t_°r
 (
	`MPC_RE
(
›
), "-3.f1813b1487372434fea4414a520f65a343a16d0ec1ffb"

34 "b2b880154db8d63377˚788fc4215c450300@1", 16, 
GMP_RNDN
);

35 
	`mp‰_£t_°r
 (
	`MPC_IM
(
›
), "-2.b7a0c80bcacf1ccbbac614bf53a58b672b1b503161bee"

36 "59a82e46a23570b652f7ba5f01ef766d1c50", 16,
GMP_RNDN
);

37 
	`mp‰_£t_°r
 (
	`MPC_RE
(
ex≥˘ed
), "7.57c5b08a2b11b660d906a354289b0724b9c4b237"

38 "95abe33424e8d9858e534bd5d776ddd18e34b0240", 16, 
GMP_RNDN
);

39 
	`mp‰_£t_°r
 (
	`MPC_IM
(
ex≥˘ed
), "-1.f41a389646d068e0263561cb3c5d1df763945ad"

40 "ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46", 16,
GMP_RNDN
);

42 
	`mpc_cos
 (
gŸ
, 
›
, 
MPC_RNDNN
);

43 i‡(
	`mpc_cmp
 (
gŸ
, 
ex≥˘ed
) != 0)

45 
	`¥ötf
 ("Error in bug20090105: cos(op) withÑounding mode MPC_RNDNN\n");

46 
	`OUT
 (
›
);

47 
	`OUT
 (
ex≥˘ed
);

48 
	`¥ötf
(" ");

49 
	`OUT
 (
gŸ
);

51 
	`exô
 (1);

54 
	`mpc_˛ór
 (
gŸ
);

55 
	`mpc_˛ór
(
ex≥˘ed
);

56 
	`mpc_˛ór
 (
›
);

57 
	}
}

60 
	$maö
 ()

62 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_cos
);

64 
	`ã°_°¨t
 ();

66 
	`d©a_check
 (
f
, "cos.dat");

67 
	`tgíîic
 (
f
, 2, 512, 7, 7);

69 
	`bug20090105
 ();

71 
	`ã°_íd
 ();

74 
	}
}

	@tests/tcosh.c

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~"mpc-ã°s.h
"

27 
	$ã°_Áûed
 (
mpc_t
 
›
, mpc_à
gë
, mpc_à
ex≥˘ed
)

29 
	`¥ötf
 ("mpc_cosh(op) failed\n with ");

30 
	`OUT
 (
›
);

31 
	`¥ötf
 (" ");

32 
	`OUT
 (
gë
);

33 
	`OUT
 (
ex≥˘ed
);

34 
	`exô
 (1);

35 
	}
}

38 
	$puª_ªÆ_¨gumít
 ()

44 
mpc_t
 
u
;

45 
mpc_t
 
z
;

46 
mpc_t
 
cosh_z
;

48 
	`mpc_öô2
 (
z
, 2);

49 
	`mpc_öô2
 (
u
, 100);

50 
	`mpc_öô2
 (
cosh_z
, 100);

53 
	`mpc_£t_ui_ui
 (
z
, 1, 0, 
MPC_RNDNN
);

54 
	`mp‰_cosh
 (
	`MPC_RE
 (
u
), MPC_RE (
z
), 
GMP_RNDN
);

55 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
u
), 0, 
GMP_RNDN
);

56 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

57 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || 
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

58 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

61 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

62 
	`mpc_c⁄j
 (
u
, u, 
MPC_RNDNN
);

63 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

64 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || !
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

65 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

68 
	`mpc_√g
 (
z
, z, 
MPC_RNDNN
);

69 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

70 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || !
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

71 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

74 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

75 
	`mpc_c⁄j
 (
u
, u, 
MPC_RNDNN
);

76 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

77 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || 
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

78 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

80 
	`mpc_˛ór
 (
cosh_z
);

81 
	`mpc_˛ór
 (
z
);

82 
	`mpc_˛ór
 (
u
);

83 
	}
}

86 
	$puª_imagö¨y_¨gumít
 ()

90 
mpc_t
 
u
;

91 
mpc_t
 
z
;

92 
mpc_t
 
cosh_z
;

94 
	`mpc_öô2
 (
z
, 2);

95 
	`mpc_öô2
 (
u
, 100);

96 
	`mpc_öô2
 (
cosh_z
, 100);

99 
	`mpc_£t_ui_ui
 (
z
, 0, 1, 
MPC_RNDNN
);

100 
	`mp‰_cos
 (
	`MPC_RE
 (
u
), 
	`MPC_IM
 (
z
), 
GMP_RNDN
);

101 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
u
), 0, 
GMP_RNDN
);

102 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

103 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || 
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

104 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

107 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

108 
	`mpc_c⁄j
 (
u
, u, 
MPC_RNDNN
);

109 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

110 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || !
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

111 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

114 
	`mpc_√g
 (
z
, z, 
MPC_RNDNN
);

115 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

116 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || !
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

117 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

120 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

121 
	`mpc_c⁄j
 (
u
, u, 
MPC_RNDNN
);

122 
	`mpc_cosh
 (
cosh_z
, 
z
, 
MPC_RNDNN
);

123 i‡(
	`mpc_cmp
 (
cosh_z
, 
u
Ë!0 || 
	`mp‰_signbô
 (
	`MPC_IM
 (cosh_z)))

124 
	`ã°_Áûed
 (
z
, 
cosh_z
, 
u
);

126 
	`mpc_˛ór
 (
cosh_z
);

127 
	`mpc_˛ór
 (
z
);

128 
	`mpc_˛ór
 (
u
);

129 
	}
}

132 
	$maö
 ()

134 
	`DECL_FUNC
(
CC
, 
f
,
mpc_cosh
);

136 
	`ã°_°¨t
 ();

138 
	`d©a_check
 (
f
, "cosh.dat");

139 
	`tgíîic
 (
f
, 2, 512, 7, 7);

141 
	`puª_ªÆ_¨gumít
 ();

142 
	`puª_imagö¨y_¨gumít
 ();

144 
	`ã°_íd
 ();

147 
	}
}

	@tests/tdiv.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$check_ªguœr
 ()

28 
mpc_t
 
b
, 
c
, 
q
;

29 
öex
;

31 
	`mpc_öô2
 (
b
, 10);

32 
	`mpc_öô2
 (
c
, 10);

33 
	`mpc_öô2
 (
q
, 10);

36 
	`mpc_£t_ui_ui
 (
b
, 973, 964, 
MPC_RNDNN
);

37 
	`mpc_£t_ui_ui
 (
c
, 725, 745, 
MPC_RNDNN
);

38 
öex
 = 
	`mpc_div
 (
q
, 
b
, 
c
, 
MPC_RNDZZ
);

39 
	`mpc_£t_si_si
 (
b
, 43136, -787, 
MPC_RNDNN
);

40 
	`mpc_div_2exp
 (
b
, b, 15, 
MPC_RNDNN
);

41 i‡(
	`mpc_cmp
 (
q
, 
b
Ë|| 
	`MPC_INEX_RE
 (
öex
Ë=0 || 
	`MPC_INEX_IM
 (inex) == 0)

43 
	`¥ötf
 ("mpc_div failed for (973+I*964)/(725+I*745)\n");

44 
	`exô
 (1);

48 
	`mpc_£t_si_si
 (
b
, -837, 637, 
MPC_RNDNN
);

49 
	`mpc_£t_si_si
 (
c
, 63, -5, 
MPC_RNDNN
);

50 
öex
 = 
	`mpc_div
 (
q
, 
b
, 
c
, 
MPC_RNDZN
);

51 
	`mpc_£t_si_si
 (
b
, -14, 9, 
MPC_RNDNN
);

52 i‡(
	`mpc_cmp
 (
q
, 
b
Ë|| 
öex
 != 0)

54 
	`¥ötf
 ("mpc_div failed for (-837+I*637)/(63-I*5)\n");

55 
	`exô
 (1);

58 
	`mpc_£t_¥ec
 (
b
, 2);

59 
	`mpc_£t_¥ec
 (
c
, 2);

60 
	`mpc_£t_¥ec
 (
q
, 2);

63 
	`mpc_£t_ui_ui
 (
b
, 4, 3, 
MPC_RNDNN
);

64 
	`mpc_£t_ui_ui
 (
c
, 1, 2, 
MPC_RNDNN
);

65 
öex
 = 
	`mpc_div
 (
q
, 
b
, 
c
, 
MPC_RNDNN
);

66 
	`mpc_£t_si_si
 (
b
, 2, -1, 
MPC_RNDNN
);

67 i‡(
	`mpc_cmp
 (
q
, 
b
Ë|| 
öex
 != 0)

69 
	`¥ötf
 ("mpc_div failed for (4+I*3)/(1+I*2)\n");

70 
	`exô
 (1);

74 
	`mpc_£t_¥ec
 (
b
, 4);

75 
	`mpc_£t_¥ec
 (
c
, 4);

76 
	`mpc_£t_¥ec
 (
q
, 4);

78 
	`mpc_£t_si_si
 (
b
, -3, 0, 
MPC_RNDNN
);

79 
	`mpc_div_2exp
 (
b
, b, 206, 
MPC_RNDNN
);

80 
	`mpc_£t_si_si
 (
c
, -1, -5, 
MPC_RNDNN
);

81 
	`mp‰_div_2ui
 (
	`MPC_RE
 (
c
), MPC_RE (c), 733, 
GMP_RNDN
);

82 
	`mp‰_div_2ui
 (
	`MPC_IM
 (
c
), MPC_IM (c), 1750, 
GMP_RNDN
);

83 
öex
 = 
	`mpc_div
 (
q
, 
b
, 
c
, 
MPC_RNDNZ
);

84 
	`mpc_£t_si_si
 (
b
, 3, -7, 
MPC_RNDNN
);

85 
	`mp‰_mul_2ui
 (
	`MPC_RE
 (
b
), MPC_RE (b), 527, 
GMP_RNDN
);

86 
	`mp‰_div_2ui
 (
	`MPC_IM
 (
b
), MPC_IM (b), 489, 
GMP_RNDN
);

88 i‡(
	`mpc_cmp
 (
q
, 
b
))

90 
	`¥ötf
 ("mpc_div failed for -3p-206/(-1p-733 -I* 5p-1750)\n");

91 
	`exô
 (1);

95 
	`mpc_£t_¥ec
 (
b
, 4);

96 
	`mpc_£t_¥ec
 (
c
, 4);

97 
	`mpc_£t_¥ec
 (
q
, 4);

98 
	`mpc_£t_si_si
 (
b
, 15, 14, 
MPC_RNDNN
);

99 
	`mpc_£t_si_si
 (
c
, 11, 0, 
MPC_RNDNN
);

100 
öex
 = 
	`mpc_div
 (
q
, 
b
, 
c
, 
MPC_RNDNN
);

101 
	`mpc_£t_si_si
 (
b
, 11, 10, 
MPC_RNDNN
);

102 
	`mpc_div_ui
 (
b
, b, 8, 
MPC_RNDNN
);

103 i‡(
	`mpc_cmp
 (
q
, 
b
Ë|| 
öex
 !
	`MPC_INEX
(1, -1))

105 
	`¥ötf
 ("mpc_div failed for (15+14*I)/11\n");

106 
	`exô
 (1);

109 
	`mpc_˛ór
 (
b
);

110 
	`mpc_˛ór
 (
c
);

111 
	`mpc_˛ór
 (
q
);

112 
	}
}

115 
	$maö
 ()

117 
	`DECL_FUNC
 (
CCC
, 
f
, 
mpc_div
);

119 
	`ã°_°¨t
 ();

121 
	`check_ªguœr
 ();

123 
	`d©a_check
 (
f
, "div.dat");

124 
	`tgíîic
 (
f
, 2, 1024, 7, 4096);

126 
	`ã°_íd
 ();

128 
	}
}

	@tests/tdiv_2exp.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_div_2exp
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/tdiv_fr.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCF
, 
f
, 
mpc_div_‰
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "div_fr.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tdiv_ui.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_div_ui
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/texp.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_exp
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "exp.dat");

32 
	`tgíîic
 (
f
, 2, 512, 7, 256);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tfr_div.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CFC
, 
f
, 
mpc_‰_div
);

28 
	`ã°_°¨t
();

30 
	`d©a_check
 (
f
, "fr_div.dat");

31 
	`tgíîic
 (
f
, 2, 1024, 7, 65535);

33 
	`ã°_íd
 ();

35 
	}
}

	@tests/tfr_sub.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
(
CFC
, 
f
, 
mpc_‰_sub
);

29 
	`ã°_°¨t
();

31 
	`d©a_check
 (
f
, "fr_sub.dat");

32 
	`tgíîic
 (
f
, 2, 4096, 7, 0);

34 
	`ã°_íd
 ();

36 
	}
}

	@tests/tgeneric.c

24 
	~"mpc-ã°s.h
"

28 
	#MPFR_CAN_ROUND
(
b
,
îr
,
¥ec
,
∫d
) \

29 (
	`mp‰_zîo_p
 (
b
Ë|| 
	`mp‰_öf_p
 (b) \

30 || 
	`mp‰_ˇn_round
 (
b
, ()
	`mp‰_gë_¥ec
 (bË- (
îr
), (
∫d
), \

31 
GMP_RNDZ
, (
¥ec
Ë+ ((
∫d
)==
GMP_RNDN
)))

	)

34 
	$tgíîic_cc
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›
, mpc_±∏
r›
,

35 
mpc_±r
 
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

37 
known_signs_t
 
ks
 = {1, 1};

43 
fun˘i⁄
->
poöãr
.
	`CC
 (
r›4
, 
›
, 
∫d
);

44 
fun˘i⁄
->
poöãr
.
	`CC
 (
r›
, 
›
, 
∫d
);

48 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

49 
	`MPC_RND_RE
 (
∫d
))

50 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

51 
	`MPC_RND_IM
 (
∫d
)))

52 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

57 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

61 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

62 
	`OUT
 (
›
);

64 
	`¥ötf
 ("withÑounding mode (%s, %s)",

65 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

66 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

68 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

69 
	`OUT
 (
r›
);

70 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

71 
	`OUT
 (
r›4
);

72 
	`¥ötf
 ("and isÑoundedÅo ");

73 
	`OUT
 (
r›4∫d
);

75 
	`exô
 (1);

76 
	}
}

79 
	$tgíîic_fc
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›
, 
mp‰_±r
 
r›
,

80 
mp‰_±r
 
r›4
, mp‰_±∏
r›4∫d
, 
mp‰_∫d_t
 
∫d
)

82 
fun˘i⁄
->
poöãr
.
	`FC
 (
r›4
, 
›
, 
∫d
);

83 
fun˘i⁄
->
poöãr
.
	`FC
 (
r›
, 
›
, 
∫d
);

84 i‡(
	`MPFR_CAN_ROUND
 (
r›4
, 1, 
	`MPFR_PREC
 (
r›
), 
∫d
))

85 
	`mp‰_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

89 i‡(
	`ßme_mp‰_vÆue
 (
r›
, 
r›4∫d
, 1))

92 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

93 
	`OUT
 (
›
);

94 
	`¥ötf
 ("wôhÑoundög modê%s", 
	`mp‰_¥öt_∫d_mode
 (
∫d
));

96 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

97 
	`MPFR_OUT
 (
r›
);

98 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

99 
	`MPFR_OUT
 (
r›4
);

100 
	`¥ötf
 ("and isÑoundedÅo ");

101 
	`MPFR_OUT
 (
r›4∫d
);

103 
	`exô
 (1);

104 
	}
}

107 
	$tgíîic_cfc
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mp‰_±r
 
›1
, 
mpc_±r
 
›2
,

108 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

110 
known_signs_t
 
ks
 = {1, 1};

112 
fun˘i⁄
->
poöãr
.
	`CFC
 (
r›4
, 
›1
, 
›2
, 
∫d
);

113 
fun˘i⁄
->
poöãr
.
	`CFC
 (
r›
, 
›1
, 
›2
, 
∫d
);

114 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

115 
	`MPC_RND_RE
 (
∫d
))

116 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

117 
	`MPC_RND_IM
 (
∫d
)))

118 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

122 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

125 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

126 
	`MPFR_OUT
 (
›1
);

127 
	`OUT
 (
›2
);

128 
	`¥ötf
 ("withÑounding mode (%s, %s)",

129 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

130 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

132 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

133 
	`OUT
 (
r›
);

134 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

135 
	`OUT
 (
r›4
);

136 
	`¥ötf
 ("and isÑoundedÅo ");

137 
	`OUT
 (
r›4∫d
);

139 
	`exô
 (1);

140 
	}
}

143 
	$tgíîic_ccf
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›1
, 
mp‰_±r
 
›2
,

144 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

146 
known_signs_t
 
ks
 = {1, 1};

148 
fun˘i⁄
->
poöãr
.
	`CCF
 (
r›4
, 
›1
, 
›2
, 
∫d
);

149 
fun˘i⁄
->
poöãr
.
	`CCF
 (
r›
, 
›1
, 
›2
, 
∫d
);

150 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

151 
	`MPC_RND_RE
 (
∫d
))

152 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

153 
	`MPC_RND_IM
 (
∫d
)))

154 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

158 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

161 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

162 
	`OUT
 (
›1
);

163 
	`MPFR_OUT
 (
›2
);

164 
	`¥ötf
 ("withÑounding mode (%s, %s)",

165 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

166 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

168 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

169 
	`OUT
 (
r›
);

170 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

171 
	`OUT
 (
r›4
);

172 
	`¥ötf
 ("and isÑoundedÅo ");

173 
	`OUT
 (
r›4∫d
);

175 
	`exô
 (1);

176 
	}
}

179 
	$tgíîic_ccc
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›1
, mpc_±∏
›2
,

180 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

182 
known_signs_t
 
ks
 = {1, 1};

188 
fun˘i⁄
->
poöãr
.
	`CCC
 (
r›4
, 
›1
, 
›2
, 
∫d
);

189 
fun˘i⁄
->
poöãr
.
	`CCC
 (
r›
, 
›1
, 
›2
, 
∫d
);

192 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

193 
	`MPC_RND_RE
 (
∫d
))

194 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

195 
	`MPC_RND_IM
 (
∫d
)))

196 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

201 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

205 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

206 
	`OUT
 (
›1
);

207 
	`OUT
 (
›2
);

208 
	`¥ötf
 ("withÑounding mode (%s, %s)",

209 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

210 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

212 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

213 
	`OUT
 (
r›
);

214 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

215 
	`OUT
 (
r›4
);

216 
	`¥ötf
 ("and isÑoundedÅo ");

217 
	`OUT
 (
r›4∫d
);

219 
	`exô
 (1);

220 
	}
}

223 
	$tgíîic_ccu
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›1
, 
›2
,

224 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

226 
known_signs_t
 
ks
 = {1, 1};

228 
fun˘i⁄
->
poöãr
.
	`CCU
 (
r›4
, 
›1
, 
›2
, 
∫d
);

229 
fun˘i⁄
->
poöãr
.
	`CCU
 (
r›
, 
›1
, 
›2
, 
∫d
);

230 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

231 
	`MPC_RND_RE
 (
∫d
))

232 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

233 
	`MPC_RND_IM
 (
∫d
)))

234 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

238 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

241 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

242 
	`OUT
 (
›1
);

243 
	`¥ötf
 ("›2=%lu\n", 
›2
);

244 
	`¥ötf
 ("withÑounding mode (%s, %s)",

245 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

246 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

248 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

249 
	`OUT
 (
r›
);

250 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

251 
	`OUT
 (
r›4
);

252 
	`¥ötf
 ("and isÑoundedÅo ");

253 
	`OUT
 (
r›4∫d
);

255 
	`exô
 (1);

256 
	}
}

259 
	$tgíîic_cuc
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
›1
, 
mpc_±r
 
›2
,

260 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

262 
known_signs_t
 
ks
 = {1, 1};

264 
fun˘i⁄
->
poöãr
.
	`CUC
 (
r›4
, 
›1
, 
›2
, 
∫d
);

265 
fun˘i⁄
->
poöãr
.
	`CUC
 (
r›
, 
›1
, 
›2
, 
∫d
);

266 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

267 
	`MPC_RND_RE
 (
∫d
))

268 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

269 
	`MPC_RND_IM
 (
∫d
)))

270 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

274 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

277 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

278 
	`¥ötf
 ("›1=%lu\n", 
›1
);

279 
	`OUT
 (
›2
);

280 
	`¥ötf
 ("withÑounding mode (%s, %s)",

281 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

282 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

284 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

285 
	`OUT
 (
r›
);

286 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

287 
	`OUT
 (
r›4
);

288 
	`¥ötf
 ("and isÑoundedÅo ");

289 
	`OUT
 (
r›4∫d
);

291 
	`exô
 (1);

292 
	}
}

295 
	$tgíîic_ccs
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›1
, 
›2
,

296 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

298 
known_signs_t
 
ks
 = {1, 1};

300 
fun˘i⁄
->
poöãr
.
	`CCS
 (
r›4
, 
›1
, 
›2
, 
∫d
);

301 
fun˘i⁄
->
poöãr
.
	`CCS
 (
r›
, 
›1
, 
›2
, 
∫d
);

302 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

303 
	`MPC_RND_RE
 (
∫d
))

304 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

305 
	`MPC_RND_IM
 (
∫d
)))

306 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

310 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

313 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

314 
	`OUT
 (
›1
);

315 
	`¥ötf
 ("›2=%ld\n", 
›2
);

316 
	`¥ötf
 ("withÑounding mode (%s, %s)",

317 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

318 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

320 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

321 
	`OUT
 (
r›
);

322 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

323 
	`OUT
 (
r›4
);

324 
	`¥ötf
 ("and isÑoundedÅo ");

325 
	`OUT
 (
r›4∫d
);

327 
	`exô
 (1);

328 
	}
}

332 
	$tgíîic_cci
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
mpc_±r
 
›1
, 
›2
,

333 
mpc_±r
 
r›
, mpc_±∏
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

335 
known_signs_t
 
ks
 = {1, 1};

337 
fun˘i⁄
->
poöãr
.
	`CCI
 (
r›4
, 
›1
, 
›2
, 
∫d
);

338 
fun˘i⁄
->
poöãr
.
	`CCI
 (
r›
, 
›1
, 
›2
, 
∫d
);

339 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

340 
	`MPC_RND_RE
 (
∫d
))

341 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

342 
	`MPC_RND_IM
 (
∫d
)))

343 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

347 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

350 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

351 
	`OUT
 (
›1
);

352 
	`¥ötf
 ("›2=%d\n", 
›2
);

353 
	`¥ötf
 ("withÑounding mode (%s, %s)",

354 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

355 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

357 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

358 
	`OUT
 (
r›
);

359 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

360 
	`OUT
 (
r›4
);

361 
	`¥ötf
 ("and isÑoundedÅo ");

362 
	`OUT
 (
r›4∫d
);

364 
	`exô
 (1);

365 
	}
}

368 
	$tgíîic_cuuc
 (
mpc_fun˘i⁄
 *
fun˘i⁄
, 
›1
,

369 
›2
, 
mpc_±r
 
›3
, mpc_±∏
r›
,

370 
mpc_±r
 
r›4
, mpc_±∏
r›4∫d
, 
mpc_∫d_t
 
∫d
)

372 
known_signs_t
 
ks
 = {1, 1};

374 
fun˘i⁄
->
poöãr
.
	`CUUC
 (
r›4
, 
›1
, 
›2
, 
›3
, 
∫d
);

375 
fun˘i⁄
->
poöãr
.
	`CUUC
 (
r›
, 
›1
, 
›2
, 
›3
, 
∫d
);

376 i‡(
	`MPFR_CAN_ROUND
 (
	`MPC_RE
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_RE (
r›
)),

377 
	`MPC_RND_RE
 (
∫d
))

378 && 
	`MPFR_CAN_ROUND
 (
	`MPC_IM
 (
r›4
), 1, 
	`MPFR_PREC
 (MPC_IM (
r›
)),

379 
	`MPC_RND_IM
 (
∫d
)))

380 
	`mpc_£t
 (
r›4∫d
, 
r›4
, 
∫d
);

384 i‡(
	`ßme_mpc_vÆue
 (
r›
, 
r›4∫d
, 
ks
))

387 
	`¥ötf
 ("Roundög i¿%†mighàbêöc‹ª˘ f‹\n", 
fun˘i⁄
->
«me
);

388 
	`¥ötf
 ("›1=%lu\n", 
›1
);

389 
	`¥ötf
 ("›2=%lu\n", 
›2
);

390 
	`OUT
 (
›3
);

391 
	`¥ötf
 ("withÑounding mode (%s, %s)",

392 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_RE
 (
∫d
)),

393 
	`mp‰_¥öt_∫d_mode
 (
	`MPC_RND_IM
 (
∫d
)));

395 
	`¥ötf
 ("\n%† give†", 
fun˘i⁄
->
«me
);

396 
	`OUT
 (
r›
);

397 
	`¥ötf
 ("%†quadru∂ê¥ecisi⁄ give†", 
fun˘i⁄
->
«me
);

398 
	`OUT
 (
r›4
);

399 
	`¥ötf
 ("and isÑoundedÅo ");

400 
	`OUT
 (
r›4∫d
);

402 
	`exô
 (1);

403 
	}
}

409 
	$ªu£_cc
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

411 
known_signs_t
 
ks
 = {1, 1};

413 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

414 
fun˘i⁄
->
poöãr
.
	`CC
 (
ex≥˘ed
, 
z
, 
MPC_RNDNN
);

415 
fun˘i⁄
->
poöãr
.
	`CC
 (
gŸ
, gŸ, 
MPC_RNDNN
);

416 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

418 
	`¥ötf
 ("Eº‹ f‹ %s(z, zËf‹\n", 
fun˘i⁄
->
«me
);

419 
	`OUT
 (
z
);

420 
	`OUT
 (
ex≥˘ed
);

421 
	`OUT
 (
gŸ
);

423 
	`exô
 (1);

425 
	}
}

428 
	$ªu£_fc
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_±r
 
z
, mpc_±∏
x
, 
mp‰_±r
 
ex≥˘ed
)

430 
	`mpc_£t
 (
x
, 
z
, 
MPC_RNDNN
);

431 
fun˘i⁄
->
poöãr
.
	`FC
 (
ex≥˘ed
, 
z
, 
GMP_RNDN
);

432 
fun˘i⁄
->
poöãr
.
	`FC
 (
	`MPC_RE
 (
x
), x, 
GMP_RNDN
);

433 i‡(!
	`ßme_mp‰_vÆue
 (
	`MPC_RE
 (
x
), 
ex≥˘ed
, 1))

435 
mp‰_t
 
gŸ
;

436 
gŸ
[0] = 
	`MPC_RE
(
x
)[0];

437 
	`¥ötf
 ("Eº‹ f‹ %s(MPC_RE(z), zËf‹\n", 
fun˘i⁄
->
«me
);

438 
	`OUT
 (
z
);

439 
	`MPFR_OUT
 (
ex≥˘ed
);

440 
	`MPFR_OUT
 (
gŸ
);

442 
	`exô
 (1);

444 
	`mpc_£t
 (
x
, 
z
, 
MPC_RNDNN
);

445 
fun˘i⁄
->
poöãr
.
	`FC
 (
	`MPC_IM
 (
x
), x, 
GMP_RNDN
);

446 i‡(!
	`ßme_mp‰_vÆue
 (
	`MPC_IM
 (
x
), 
ex≥˘ed
, 1))

448 
mp‰_t
 
gŸ
;

449 
gŸ
[0] = 
	`MPC_IM
(
x
)[0];

450 
	`¥ötf
 ("Eº‹ f‹ %s(MPC_IM(z), zËf‹ \n", 
fun˘i⁄
->
«me
);

451 
	`OUT
 (
z
);

452 
	`MPFR_OUT
 (
ex≥˘ed
);

453 
	`MPFR_OUT
 (
gŸ
);

455 
	`exô
 (1);

457 
	}
}

460 
	$ªu£_cfc
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, 
mp‰_§˝å
 
x
, 
mpc_±r
 
gŸ
,

461 
mpc_±r
 
ex≥˘ed
)

463 
known_signs_t
 
ks
 = {1, 1};

465 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

466 
fun˘i⁄
->
poöãr
.
	`CFC
 (
ex≥˘ed
, 
x
, 
z
, 
MPC_RNDNN
);

467 
fun˘i⁄
->
poöãr
.
	`CFC
 (
gŸ
, 
x
, gŸ, 
MPC_RNDNN
);

468 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

470 
	`¥ötf
 ("Eº‹ f‹ %s(z, x, zËf‹\n", 
fun˘i⁄
->
«me
);

471 
	`MPFR_OUT
 (
x
);

472 
	`OUT
 (
z
);

473 
	`OUT
 (
ex≥˘ed
);

474 
	`OUT
 (
gŸ
);

476 
	`exô
 (1);

478 
	}
}

481 
	$ªu£_ccf
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, 
mp‰_§˝å
 
x
, 
mpc_±r
 
gŸ
,

482 
mpc_±r
 
ex≥˘ed
)

484 
known_signs_t
 
ks
 = {1, 1};

486 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

487 
fun˘i⁄
->
poöãr
.
	`CCF
 (
ex≥˘ed
, 
z
, 
x
, 
MPC_RNDNN
);

488 
fun˘i⁄
->
poöãr
.
	`CCF
 (
gŸ
, gŸ, 
x
, 
MPC_RNDNN
);

489 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

491 
	`¥ötf
 ("Eº‹ f‹ %s(z, z, xËf‹\n", 
fun˘i⁄
->
«me
);

492 
	`OUT
 (
z
);

493 
	`MPFR_OUT
 (
x
);

494 
	`OUT
 (
ex≥˘ed
);

495 
	`OUT
 (
gŸ
);

497 
	`exô
 (1);

499 
	}
}

502 
	$ªu£_ccc
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, mpc_§˝å 
x
,

503 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

505 
known_signs_t
 
ks
 = {1, 1};

507 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

508 
fun˘i⁄
->
poöãr
.
	`CCC
 (
ex≥˘ed
, 
z
, 
x
, 
MPC_RNDNN
);

509 
fun˘i⁄
->
poöãr
.
	`CCC
 (
gŸ
, gŸ, 
x
, 
MPC_RNDNN
);

510 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

512 
	`¥ötf
 ("Eº‹ f‹ %s(z, z, xËf‹\n", 
fun˘i⁄
->
«me
);

513 
	`OUT
 (
z
);

514 
	`OUT
 (
x
);

515 
	`OUT
 (
ex≥˘ed
);

516 
	`OUT
 (
gŸ
);

518 
	`exô
 (1);

520 
	`mpc_£t
 (
gŸ
, 
x
, 
MPC_RNDNN
);

521 
fun˘i⁄
->
poöãr
.
	`CCC
 (
ex≥˘ed
, 
z
, 
x
, 
MPC_RNDNN
);

522 
fun˘i⁄
->
poöãr
.
	`CCC
 (
gŸ
, 
z
, gŸ, 
MPC_RNDNN
);

523 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

525 
	`¥ötf
 ("Eº‹ f‹ %s(x, z, xËf‹\n", 
fun˘i⁄
->
«me
);

526 
	`OUT
 (
z
);

527 
	`OUT
 (
x
);

528 
	`OUT
 (
ex≥˘ed
);

529 
	`OUT
 (
gŸ
);

531 
	`exô
 (1);

533 
	`mpc_£t
 (
gŸ
, 
x
, 
MPC_RNDNN
);

534 
fun˘i⁄
->
poöãr
.
	`CCC
 (
ex≥˘ed
, 
x
, x, 
MPC_RNDNN
);

535 
fun˘i⁄
->
poöãr
.
	`CCC
 (
gŸ
, gŸ, gŸ, 
MPC_RNDNN
);

536 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

538 
	`¥ötf
 ("Eº‹ f‹ %s(x, x, xËf‹\n", 
fun˘i⁄
->
«me
);

539 
	`OUT
 (
x
);

540 
	`OUT
 (
ex≥˘ed
);

541 
	`OUT
 (
gŸ
);

543 
	`exô
 (1);

545 
	}
}

548 
	$ªu£_ccu
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, 
ul
,

549 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

551 
known_signs_t
 
ks
 = {1, 1};

553 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

554 
fun˘i⁄
->
poöãr
.
	`CCU
 (
ex≥˘ed
, 
z
, 
ul
, 
MPC_RNDNN
);

555 
fun˘i⁄
->
poöãr
.
	`CCU
 (
gŸ
, gŸ, 
ul
, 
MPC_RNDNN
);

556 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

558 
	`¥ötf
 ("Eº‹ f‹ %s(z, z,ÇËf‹\n", 
fun˘i⁄
->
«me
);

559 
	`OUT
 (
z
);

560 
	`¥ötf
 ("n=%lu\n", 
ul
);

561 
	`OUT
 (
ex≥˘ed
);

562 
	`OUT
 (
gŸ
);

564 
	`exô
 (1);

566 
	}
}

569 
	$ªu£_cuc
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
ul
, 
mpc_§˝å
 
z
,

570 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

572 
known_signs_t
 
ks
 = {1, 1};

574 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

575 
fun˘i⁄
->
poöãr
.
	`CUC
 (
ex≥˘ed
, 
ul
, 
z
,
MPC_RNDNN
);

576 
fun˘i⁄
->
poöãr
.
	`CUC
 (
gŸ
, 
ul
, gŸ, 
MPC_RNDNN
);

577 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

579 
	`¥ötf
 ("Eº‹ f‹ %s(z,Ç, zËf‹\n", 
fun˘i⁄
->
«me
);

580 
	`¥ötf
 ("n=%lu\n", 
ul
);

581 
	`OUT
 (
z
);

582 
	`OUT
 (
ex≥˘ed
);

583 
	`OUT
 (
gŸ
);

585 
	`exô
 (1);

587 
	}
}

590 
	$ªu£_ccs
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, 
lo
,

591 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

593 
known_signs_t
 
ks
 = {1, 1};

595 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

596 
fun˘i⁄
->
poöãr
.
	`CCS
 (
ex≥˘ed
, 
z
, 
lo
, 
MPC_RNDNN
);

597 
fun˘i⁄
->
poöãr
.
	`CCS
 (
gŸ
, gŸ, 
lo
, 
MPC_RNDNN
);

598 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

600 
	`¥ötf
 ("Eº‹ f‹ %s(z, z,ÇËf‹\n", 
fun˘i⁄
->
«me
);

601 
	`OUT
 (
z
);

602 
	`¥ötf
 ("n=%ld\n", 
lo
);

603 
	`OUT
 (
ex≥˘ed
);

604 
	`OUT
 (
gŸ
);

606 
	`exô
 (1);

608 
	}
}

611 
	$ªu£_cci
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
mpc_§˝å
 
z
, 
i
,

612 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

614 
known_signs_t
 
ks
 = {1, 1};

616 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

617 
fun˘i⁄
->
poöãr
.
	`CCI
 (
ex≥˘ed
, 
z
, 
i
, 
MPC_RNDNN
);

618 
fun˘i⁄
->
poöãr
.
	`CCI
 (
gŸ
, gŸ, 
i
, 
MPC_RNDNN
);

619 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

621 
	`¥ötf
 ("Eº‹ f‹ %s(z, z,ÇËf‹\n", 
fun˘i⁄
->
«me
);

622 
	`OUT
 (
z
);

623 
	`¥ötf
 ("n=%d\n", 
i
);

624 
	`OUT
 (
ex≥˘ed
);

625 
	`OUT
 (
gŸ
);

627 
	`exô
 (1);

629 
	}
}

632 
	$ªu£_cuuc
 (
mpc_fun˘i⁄
* 
fun˘i⁄
, 
ul1
, 
ul2
,

633 
mpc_§˝å
 
z
, 
mpc_±r
 
gŸ
, mpc_±∏
ex≥˘ed
)

635 
known_signs_t
 
ks
 = {1, 1};

637 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

638 
fun˘i⁄
->
poöãr
.
	`CUUC
 (
ex≥˘ed
, 
ul1
, 
ul2
, 
z
,
MPC_RNDNN
);

639 
fun˘i⁄
->
poöãr
.
	`CUUC
 (
gŸ
, 
ul1
, 
ul2
, gŸ, 
MPC_RNDNN
);

640 i‡(!
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
))

642 
	`¥ötf
 ("Eº‹ f‹ %s(z, m,Ç, zËf‹\n", 
fun˘i⁄
->
«me
);

643 
	`¥ötf
 ("m=%lu\n", 
ul1
);

644 
	`¥ötf
 ("n=%lu\n", 
ul2
);

645 
	`OUT
 (
z
);

646 
	`OUT
 (
ex≥˘ed
);

647 
	`OUT
 (
gŸ
);

649 
	`exô
 (1);

651 
	}
}

664 
	$tgíîic
 (
mpc_fun˘i⁄
 
fun˘i⁄
, 
mp‰_¥ec_t
 
¥ec_mö
,

665 
mp‰_¥ec_t
 
¥ec_max
, mp‰_¥ec_à
°ï
, 
mp_exp_t
 
exp_max
)

667 
ul1
 = 0, 
ul2
 = 0;

668 
lo
 = 0;

669 
i
 = 0;

670 
mp‰_t
 
x1
, 
x2
, 
xxxx
;

671 
mpc_t
 
z1
, 
z2
, 
z3
, 
z4
, 
zzzz
;

673 
mp‰_∫d_t
 
∫d_ª
;

674 
mp‰_∫d_t
 
∫d_im
;

675 
mp‰_¥ec_t
 
¥ec
;

676 
mp_exp_t
 
exp_mö
;

677 
•ecül
, 
•ecül_ˇ£s
;

679 
	`mpc_öô2
 (
z1
, 
¥ec_max
);

680 
fun˘i⁄
.
ty≥
)

682 
CCC
:

683 
	`mpc_öô2
 (
z2
, 
¥ec_max
);

684 
	`mpc_öô2
 (
z3
, 
¥ec_max
);

685 
	`mpc_öô2
 (
z4
, 
¥ec_max
);

686 
	`mpc_öô2
 (
zzzz
, 4*
¥ec_max
);

687 
•ecül_ˇ£s
 = 4;

689 
FC
:

690 
	`mp‰_öô2
 (
x1
, 
¥ec_max
);

691 
	`mp‰_öô2
 (
x2
, 
¥ec_max
);

692 
	`mp‰_öô2
 (
xxxx
, 4*
¥ec_max
);

693 
	`mpc_öô2
 (
z2
, 
¥ec_max
);

694 
•ecül_ˇ£s
 = 2;

696 
CCF
: 
CFC
:

697 
	`mp‰_öô2
 (
x1
, 
¥ec_max
);

698 
	`mpc_öô2
 (
z2
, 
¥ec_max
);

699 
	`mpc_öô2
 (
z3
, 
¥ec_max
);

700 
	`mpc_öô2
 (
zzzz
, 4*
¥ec_max
);

701 
•ecül_ˇ£s
 = 3;

703 
CCI
: 
CCS
:

704 
CCU
: 
CUC
:

705 
	`mpc_öô2
 (
z2
, 
¥ec_max
);

706 
	`mpc_öô2
 (
z3
, 
¥ec_max
);

707 
	`mpc_öô2
 (
zzzz
, 4*
¥ec_max
);

708 
•ecül_ˇ£s
 = 3;

710 
CUUC
:

711 
	`mpc_öô2
 (
z2
, 
¥ec_max
);

712 
	`mpc_öô2
 (
z3
, 
¥ec_max
);

713 
	`mpc_öô2
 (
zzzz
, 4*
¥ec_max
);

714 
•ecül_ˇ£s
 = 2;

716 
CC
:

718 
	`mpc_öô2
 (
z2
, 
¥ec_max
);

719 
	`mpc_öô2
 (
z3
, 
¥ec_max
);

720 
	`mpc_öô2
 (
zzzz
, 4*
¥ec_max
);

721 
•ecül_ˇ£s
 = 2;

724 
exp_mö
 = 
	`mp‰_gë_emö
 ();

725 i‡(
exp_max
 <= 0)

726 
exp_max
 = 
	`mp‰_gë_emax
 ();

727 i‡(
exp_max
 > 
	`mp‰_gë_emax
 ())

728 
exp_max
 = 
	`mp‰_gë_emax
();

729 i‡(-
exp_max
 > 
exp_mö
)

730 
exp_mö
 = - 
exp_max
;

732 i‡(
°ï
 < 1)

733 
°ï
 = 1;

735 
¥ec
 = 
¥ec_mö
, 
•ecül
 = 0;

736 
¥ec
 <
¥ec_max
 && 
•ecül
 <
•ecül_ˇ£s
;

737 
¥ec
+=
°ï
, 
•ecül
 +’ª¯=
¥ec_max
 ? 1 : 0))

743 c⁄° 
zîo_¥obabûôy
 = 
•ecül
 != 0 ? 0 : 25;

745 
	`mpc_£t_¥ec
 (
z1
, 
¥ec
);

746 
	`ã°_deÁu…_øndom
 (
z1
, 
exp_mö
, 
exp_max
, 128, 
zîo_¥obabûôy
);

748 
fun˘i⁄
.
ty≥
)

750 
CCC
:

751 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

752 
	`ã°_deÁu…_øndom
 (
z2
, 
exp_mö
, 
exp_max
, 128, 
zîo_¥obabûôy
);

753 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

754 
	`mpc_£t_¥ec
 (
z4
, 
¥ec
);

755 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

756 
•ecül
)

759 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

762 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

765 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z2
), 0, 
GMP_RNDN
);

768 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z2
), 0, 
GMP_RNDN
);

772 
FC
:

773 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

774 
	`mp‰_£t_¥ec
 (
x1
, 
¥ec
);

775 
	`mp‰_£t_¥ec
 (
x2
, 
¥ec
);

776 
	`mp‰_£t_¥ec
 (
xxxx
, 4*
¥ec
);

777 
•ecül
)

780 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

783 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

787 
CCU
: 
CUC
:

788 
	`mpc_£t_¥ec
 (
z2
, 128);

790 
	`ã°_deÁu…_øndom
 (
z2
, 0, 64, 128, 
zîo_¥obabûôy
);

791 } !
	`mp‰_fôs_ul⁄g_p
 (
	`MPC_RE
 (
z2
), 
GMP_RNDN
));

792 
ul1
 = 
	`mp‰_gë_ui
 (
	`MPC_RE
(
z2
), 
GMP_RNDN
);

793 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

794 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

795 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

796 
•ecül
)

799 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

802 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

805 
ul1
 = 0;

809 
CUUC
:

810 
	`mpc_£t_¥ec
 (
z2
, 128);

812 
	`ã°_deÁu…_øndom
 (
z2
, 0, 64, 128, 
zîo_¥obabûôy
);

813 } !
	`mp‰_fôs_ul⁄g_p
 (
	`MPC_RE
 (
z2
), 
GMP_RNDN
)

814 ||!
	`mp‰_fôs_ul⁄g_p
 (
	`MPC_IM
 (
z2
), 
GMP_RNDN
));

815 
ul1
 = 
	`mp‰_gë_ui
 (
	`MPC_RE
(
z2
), 
GMP_RNDN
);

816 
ul2
 = 
	`mp‰_gë_ui
 (
	`MPC_IM
(
z2
), 
GMP_RNDN
);

817 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

818 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

819 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

820 
•ecül
)

823 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

826 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

829 
ul1
 = 0;

832 
ul2
 = 0;

836 
CCS
:

837 
	`mpc_£t_¥ec
 (
z2
, 128);

839 
	`ã°_deÁu…_øndom
 (
z2
, 0, 64, 128, 
zîo_¥obabûôy
);

840 } !
	`mp‰_fôs_¶⁄g_p
 (
	`MPC_RE
 (
z2
), 
GMP_RNDN
));

841 
lo
 = 
	`mp‰_gë_si
 (
	`MPC_RE
(
z2
), 
GMP_RNDN
);

842 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

843 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

844 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

845 
•ecül
)

848 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

851 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

854 
lo
 = 0;

858 
CCI
:

859 
	`mpc_£t_¥ec
 (
z2
, 128);

861 
	`ã°_deÁu…_øndom
 (
z2
, 0, 64, 128, 
zîo_¥obabûôy
);

862 } !
	`mp‰_fôs_¶⁄g_p
 (
	`MPC_RE
 (
z2
), 
GMP_RNDN
));

863 
i
 = ()
	`mp‰_gë_si
 (
	`MPC_RE
(
z2
), 
GMP_RNDN
);

864 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

865 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

866 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

867 
•ecül
)

870 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

873 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

876 
i
 = 0;

880 
CCF
: 
CFC
:

881 
	`mp‰_£t_¥ec
 (
x1
, 
¥ec
);

882 
	`mp‰_£t
 (
x1
, 
	`MPC_RE
 (
z1
), 
GMP_RNDN
);

883 
	`ã°_deÁu…_øndom
 (
z1
, 
exp_mö
, 
exp_max
, 128, 
zîo_¥obabûôy
);

884 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

885 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

886 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

887 
•ecül
)

890 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

893 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

896 
	`mp‰_£t_ui
 (
x1
, 0, 
GMP_RNDN
);

900 
CC
:

902 
	`mpc_£t_¥ec
 (
z2
, 
¥ec
);

903 
	`mpc_£t_¥ec
 (
z3
, 
¥ec
);

904 
	`mpc_£t_¥ec
 (
zzzz
, 4*
¥ec
);

905 
•ecül
)

908 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
z1
), 0, 
GMP_RNDN
);

911 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

916 
∫d_ª
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_re); ++rnd_re)

917 
fun˘i⁄
.
ty≥
)

919 
CCC
:

920 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

921 
	`tgíîic_ccc
 (&
fun˘i⁄
, 
z1
, 
z2
, 
z3
, 
zzzz
, 
z4
,

922 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

923 
	`ªu£_ccc
 (&
fun˘i⁄
, 
z1
, 
z2
, 
z3
, 
z4
);

925 
FC
:

926 
	`tgíîic_fc
 (&
fun˘i⁄
, 
z1
, 
x1
, 
xxxx
, 
x2
, 
∫d_ª
);

927 
	`ªu£_fc
 (&
fun˘i⁄
, 
z1
, 
z2
, 
x1
);

929 
CC
:

930 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

931 
	`tgíîic_cc
 (&
fun˘i⁄
, 
z1
, 
z2
, 
zzzz
, 
z3
,

932 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

933 
	`ªu£_cc
 (&
fun˘i⁄
, 
z1
, 
z2
, 
z3
);

935 
CFC
:

936 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

937 
	`tgíîic_cfc
 (&
fun˘i⁄
, 
x1
, 
z1
, 
z2
, 
zzzz
, 
z3
,

938 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

939 
	`ªu£_cfc
 (&
fun˘i⁄
, 
z1
, 
x1
, 
z2
, 
z3
);

941 
CCF
:

942 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

943 
	`tgíîic_ccf
 (&
fun˘i⁄
, 
z1
, 
x1
, 
z2
, 
zzzz
, 
z3
,

944 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

945 
	`ªu£_ccf
 (&
fun˘i⁄
, 
z1
, 
x1
, 
z2
, 
z3
);

947 
CCU
:

948 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

949 
	`tgíîic_ccu
 (&
fun˘i⁄
, 
z1
, 
ul1
, 
z2
, 
zzzz
, 
z3
,

950 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

951 
	`ªu£_ccu
 (&
fun˘i⁄
, 
z1
, 
ul1
, 
z2
, 
z3
);

953 
CUC
:

954 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

955 
	`tgíîic_cuc
 (&
fun˘i⁄
, 
ul1
, 
z1
, 
z2
, 
zzzz
, 
z3
,

956 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

957 
	`ªu£_cuc
 (&
fun˘i⁄
, 
ul1
, 
z1
, 
z2
, 
z3
);

959 
CCS
:

960 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

961 
	`tgíîic_ccs
 (&
fun˘i⁄
, 
z1
, 
lo
, 
z2
, 
zzzz
, 
z3
,

962 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

963 
	`ªu£_ccs
 (&
fun˘i⁄
, 
z1
, 
lo
, 
z2
, 
z3
);

965 
CCI
:

966 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

967 
	`tgíîic_cci
 (&
fun˘i⁄
, 
z1
, 
i
, 
z2
, 
zzzz
, 
z3
,

968 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

969 
	`ªu£_cci
 (&
fun˘i⁄
, 
z1
, 
i
, 
z2
, 
z3
);

971 
CUUC
:

972 
∫d_im
 = 
GMP_RNDN
; 
	`mp‰_¥öt_∫d_mode
 (rnd_im); ++rnd_im)

973 
	`tgíîic_cuuc
 (&
fun˘i⁄
, 
ul1
, 
ul2
, 
z1
, 
z2
, 
zzzz
, 
z3
,

974 
	`RNDC
 (
∫d_ª
, 
∫d_im
));

975 
	`ªu£_cuuc
 (&
fun˘i⁄
, 
ul1
, 
ul2
, 
z1
, 
z2
, 
z3
);

978 
	`¥ötf
 ("tgenericÇot yet implemented forÅhis kind of"

980 
	`exô
 (1);

984 
	`mpc_˛ór
 (
z1
);

985 
fun˘i⁄
.
ty≥
)

987 
CCC
:

988 
	`mpc_˛ór
 (
z2
);

989 
	`mpc_˛ór
 (
z3
);

990 
	`mpc_˛ór
 (
z4
);

991 
	`mpc_˛ór
 (
zzzz
);

993 
FC
:

994 
	`mpc_˛ór
 (
z2
);

995 
	`mp‰_˛ór
 (
x1
);

996 
	`mp‰_˛ór
 (
x2
);

997 
	`mp‰_˛ór
 (
xxxx
);

999 
CCF
: 
CFC
:

1000 
	`mp‰_˛ór
 (
x1
);

1001 
	`mpc_˛ór
 (
z2
);

1002 
	`mpc_˛ór
 (
z3
);

1003 
	`mpc_˛ór
 (
zzzz
);

1005 
CUUC
:

1006 
CCI
: 
CCS
:

1007 
CCU
: 
CUC
:

1008 
CC
:

1010 
	`mpc_˛ór
 (
z2
);

1011 
	`mpc_˛ór
 (
z3
);

1012 
	`mpc_˛ór
 (
zzzz
);

1014 
	}
}

	@tests/tget_version.c

22 
	~<°dio.h
>

23 
	~<°rög.h
>

24 
	~<°dlib.h
>

25 
	~"mpc-ã°s.h
"

28 
	$maö
 ()

30 
	`¥ötf
 ("GMP: include %d.%d.%d,Üib %s\n",

31 
__GNU_MP_VERSION
, 
__GNU_MP_VERSION_MINOR
, 
__GNU_MP_VERSION_PATCHLEVEL
,

32 
gmp_vîsi⁄
);

33 
	`¥ötf
 ("MPFR: include %s,Üib %s\n",

34 
MPFR_VERSION_STRING
,

35 
	`mp‰_gë_vîsi⁄
 ());

36 
	`¥ötf
 ("MPC: in˛udê%s,Üib %s\n", 
MPC_VERSION_STRING
,

37 
	`mpc_gë_vîsi⁄
 ());

39 i‡(
	`°rcmp
 (
	`mpc_gë_vîsi⁄
 (), 
MPC_VERSION_STRING
) != 0)

41 
	`¥ötf
 ("Error: headerándÜibrary doÇot match\n"

43 
	`mpc_gë_vîsi⁄
(), 
MPC_VERSION_STRING
);

44 
	`exô
 (1);

48 
	}
}

	@tests/timag.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
FC
, 
f
, 
mpc_imag
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 1, 4096);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/tio_str.c

22 
	#_XOPEN_SOURCE


	)

23 
	~<°dio.h
>

24 
	~<°rög.h
>

26 
	~"mpc-ã°s.h
"

28 #ifde‡
HAVE_UNISTD_H


29 
	~<uni°d.h
>

32 
löe_numbî
;

34 
√xtch¨
;

35 c⁄° *
∫d_mode
[];

38 
	$check_fûe
 (c⁄° * 
fûe_«me
)

40 
FILE
 *
Â
;

42 
tmp
;

43 
ba£
;

44 
öex_ª
;

45 
öex_im
;

46 
mpc_t
 
ex≥˘ed
, 
gŸ
;

47 
mpc_∫d_t
 
∫d
 = 
MPC_RNDNN
;

48 
öex
 = 0, 
ex≥˘ed_öex
;

49 
size_t
 
ex≥˘ed_size
, 
size
;

50 
known_signs_t
 
ks
 = {1, 1};

52 
Â
 = 
	`›í_d©a_fûe
 (
fûe_«me
);

54 
	`mpc_öô2
 (
ex≥˘ed
, 53);

55 
	`mpc_öô2
 (
gŸ
, 53);

58 
löe_numbî
 = 1;

59 
√xtch¨
 = 
	`gëc
 (
Â
);

60 
	`skù_whôe•a˚_commíts
 (
Â
);

62 
√xtch¨
 !
EOF
)

65 
	`ªad_ã∫¨y
 (
Â
, &
öex_ª
);

66 
	`ªad_ã∫¨y
 (
Â
, &
öex_im
);

67 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, &
ks
);

68 i‡(
öex_ª
 =
TERNARY_ERROR
 || 
öex_im
 == TERNARY_ERROR)

69 
ex≥˘ed_öex
 = -1;

71 
ex≥˘ed_öex
 = 
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

72 
	`ªad_öt
 (
Â
, &
tmp
, "size");

73 
ex≥˘ed_size
 = (
size_t
)
tmp
;

74 
	`ªad_öt
 (
Â
, &
ba£
, "base");

75 
	`ªad_mpc_roundög_mode
 (
Â
, &
∫d
);

78 
√xtch¨
 != '"')

79 
√xtch¨
 = 
	`gëc
 (
Â
);

80 
	`mp‰_£t_¥ec
 (
	`MPC_RE
 (
gŸ
), 
	`MPC_PREC_RE
 (
ex≥˘ed
));

81 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
gŸ
), 
	`MPC_PREC_IM
 (
ex≥˘ed
));

82 
öex
 = 
	`mpc_öp_°r
 (
gŸ
, 
Â
, &
size
, 
ba£
, 
∫d
);

85 i‡(
öex
 !
ex≥˘ed_öex
 || !
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
)

86 || 
size
 !
ex≥˘ed_size
)

88 
	`¥ötf
 ("mpc_inp_str failed (line %lu) withÑounding mode %s\n",

89 
löe_numbî
, 
∫d_mode
[
∫d
]);

90 i‡(
öex
 !
ex≥˘ed_öex
)

91 
	`¥ötf
(" got inexact value: %d\nexpected inexact value: %d\n",

92 
öex
, 
ex≥˘ed_öex
);

93 i‡(
size
 !
ex≥˘ed_size
)

94 
	`¥ötf
 (" got size: %lu\nexpected size: %lu\n ",

95 (Ë
size
, (Ë
ex≥˘ed_size
);

96 
	`¥ötf
 (" ");

97 
	`OUT
 (
gŸ
);

98 
	`OUT
 (
ex≥˘ed
);

100 
	`exô
 (1);

103 (
√xtch¨
 = 
	`gëc
 (
Â
)) != '"');

104 
√xtch¨
 = 
	`gëc
 (
Â
);

106 
	`skù_whôe•a˚_commíts
 (
Â
);

109 
	`mpc_˛ór
 (
ex≥˘ed
);

110 
	`mpc_˛ór
 (
gŸ
);

111 
	`˛o£_d©a_fûe
 (
Â
);

112 
	}
}

115 
	$check_io_°r
 (
mpc_±r
 
ªad_numbî
, mpc_±∏
ex≥˘ed
)

117 
tmp_fûe
[] = "mpc_test";

118 
FILE
 *
Â
;

119 
size_t
 
sz
;

121 i‡(!(
Â
 = 
	`f›í
 (
tmp_fûe
, "w")))

123 
	`¥ötf
 ("Eº‹: CouldÇŸ o≥¿fûê%s\n", 
tmp_fûe
);

125 
	`exô
 (1);

128 
	`mpc_out_°r
 (
Â
, 10, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

129 
	`f˛o£
 (
Â
);

131 i‡(!(
Â
 = 
	`f›í
 (
tmp_fûe
, "r")))

133 
	`¥ötf
 ("Eº‹: CouldÇŸ o≥¿fûê%s\n", 
tmp_fûe
);

135 
	`exô
 (1);

137 i‡(
	`mpc_öp_°r
 (
ªad_numbî
, 
Â
, &
sz
, 10, 
MPC_RNDNN
) == -1)

139 
	`¥ötf
 ("Error: mpc_inp_str cannot correctlyÑe-readÇumber "

140 "ö fûê%s\n", 
tmp_fûe
);

142 
	`exô
 (1);

144 
	`f˛o£
 (
Â
);

147 
	`mp‰_˛ór_Êags
 ();

148 i‡(
	`mpc_cmp
 (
ªad_numbî
, 
ex≥˘ed
Ë!0 || 
	`mp‰_î™geÊag_p
())

150 
	`¥ötf
 ("Error: inp_str o out_str <> Id\n");

151 
	`OUT
 (
ªad_numbî
);

152 
	`OUT
 (
ex≥˘ed
);

154 
	`exô
 (1);

156 
	}
}

158 #i‚de‡
NO_STREAM_REDIRECTION


161 
	$check_°dout
 (
mpc_±r
 
ªad_numbî
, mpc_±∏
ex≥˘ed
)

163 
tmp_fûe
[] = "mpc_test";

164 
fd
;

165 
size_t
 
sz
;

167 
	`fÊush
(
°dout
);

168 
fd
 = 
	`dup
(
	`fûío
(
°dout
));

169 i‡(
	`‰e›í
(
tmp_fûe
, "w", 
°dout
Ë=
NULL
)

171 
	`¥ötf
 ("mpc_inp_str cannotÑedirect stdout\n");

172 
	`exô
 (1);

174 
	`mpc_out_°r
 (
NULL
, 2, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

175 
	`fÊush
(
°dout
);

176 
	`dup2
(
fd
, 
	`fûío
(
°dout
));

177 
	`˛o£
(
fd
);

178 
	`˛óªº
(
°dout
);

180 
	`fÊush
(
°dö
);

181 
fd
 = 
	`dup
(
	`fûío
(
°dö
));

182 i‡(
	`‰e›í
(
tmp_fûe
, "r", 
°dö
Ë=
NULL
)

184 
	`¥ötf
 ("mpc_inp_str cannotÑedirect stdout\n");

185 
	`exô
 (1);

187 i‡(
	`mpc_öp_°r
 (
ªad_numbî
, 
NULL
, &
sz
, 2, 
MPC_RNDNN
) == -1)

189 
	`¥ötf
 ("mpc_inp_str cannot correctlyÑe-readÇumber "

190 "ö fûê%s\n", 
tmp_fûe
);

191 
	`exô
 (1);

193 
	`mp‰_˛ór_Êags
 ();

195 i‡(
	`mpc_cmp
 (
ªad_numbî
, 
ex≥˘ed
Ë!0 || 
	`mp‰_î™geÊag_p
())

197 
	`¥ötf
 ("mpc_inp_str didÇotÑeadÅheÇumber which was written by "

199 
	`OUT
 (
ªad_numbî
);

200 
	`OUT
 (
ex≥˘ed
);

201 
	`exô
 (1);

203 
	`fÊush
(
°dö
);

204 
	`dup2
(
fd
, 
	`fûío
(
°dö
));

205 
	`˛o£
(
fd
);

206 
	`˛óªº
(
°dö
);

207 
	}
}

211 
	$maö
 ()

213 
mpc_t
 
z
, 
x
;

214 
mp_¥ec_t
 
¥ec
;

216 
	`ã°_°¨t
 ();

218 
	`mpc_öô2
 (
z
, 1000);

219 
	`mpc_öô2
 (
x
, 1000);

221 
	`check_fûe
 ("inp_str.dat");

223 
¥ec
 = 2;Örec <= 1000;Örec+=7)

225 
	`mpc_£t_¥ec
 (
z
, 
¥ec
);

226 
	`mpc_£t_¥ec
 (
x
, 
¥ec
);

228 
	`mpc_£t_si_si
 (
x
, 1, 1, 
MPC_RNDNN
);

229 
	`check_io_°r
 (
z
, 
x
);

231 
	`mpc_£t_si_si
 (
x
, -1, 1, 
MPC_RNDNN
);

232 
	`check_io_°r
 (
z
, 
x
);

234 
	`mp‰_£t_öf
 (
	`MPC_RE
(
x
), -1);

235 
	`mp‰_£t_öf
 (
	`MPC_IM
(
x
), +1);

236 
	`check_io_°r
 (
z
, 
x
);

238 
	`ã°_deÁu…_øndom
 (
x
, -1024, 1024, 128, 25);

239 
	`check_io_°r
 (
z
, 
x
);

242 #i‚de‡
NO_STREAM_REDIRECTION


243 
	`mpc_£t_si_si
 (
x
, 1, -4, 
MPC_RNDNN
);

244 
	`mpc_div_ui
 (
x
, x, 3, 
MPC_RNDDU
);

246 
	`check_°dout
(
z
, 
x
);

249 
	`mpc_˛ór
 (
z
);

250 
	`mpc_˛ór
 (
x
);

252 
	`ã°_íd
 ();

255 
	}
}

	@tests/tlog.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$maö
 ()

28 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_log
);

30 
	`ã°_°¨t
 ();

32 
	`d©a_check
 (
f
, "log.dat");

33 
	`tgíîic
 (
f
, 2, 512, 7, 128);

35 
	`ã°_íd
 ();

38 
	}
}

	@tests/tmul.c

22 
	~<°dlib.h
>

23 #ifde‡
TIMING


24 
	~<sys/times.h
>

26 
	~"mpc-ã°s.h
"

29 
	$cmpmul
 (
mpc_§˝å
 
x
, mpc_§˝å 
y
, 
mpc_∫d_t
 
∫d
)

37 
mpc_t
 
z
, 
t
;

38 
öexa˘_z
, 
öexa˘_t
;

40 
	`mpc_öô2
 (
z
, 
	`MPC_MAX_PREC
 (
x
));

41 
	`mpc_öô2
 (
t
, 
	`MPC_MAX_PREC
 (
x
));

43 
öexa˘_z
 = 
	`mpc_mul_«ive
 (
z
, 
x
, 
y
, 
∫d
);

44 
öexa˘_t
 = 
	`mpc_mul_k¨©suba
 (
t
, 
x
, 
y
, 
∫d
);

46 i‡(
	`mpc_cmp
 (
z
, 
t
))

48 
	`Ârötf
 (
°dîr
, "mulánd mul2 differ forÑnd=(%s,%s) \nx=",

49 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

50 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

51 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

52 
	`Ârötf
 (
°dîr
, "\nand y=");

53 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
y
, 
MPC_RNDNN
);

54 
	`Ârötf
 (
°dîr
, "\nmpc_mul_naive gives ");

55 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

56 
	`Ârötf
 (
°dîr
, "\nmpc_mul_karatsuba gives ");

57 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
t
, 
MPC_RNDNN
);

58 
	`Ârötf
 (
°dîr
, "\n");

59 
	`exô
 (1);

61 i‡(
öexa˘_z
 !
öexa˘_t
)

63 
	`Ârötf
 (
°dîr
, "TheÑeturn values of mulánd mul2 differ forÑnd=(%s,%s) \nx=",

64 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

65 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

66 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

67 
	`Ârötf
 (
°dîr
, "\nand y=");

68 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
y
, 
MPC_RNDNN
);

69 
	`Ârötf
 (
°dîr
, "\nand x*y=");

70 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

71 
	`Ârötf
 (
°dîr
, "\nmpc_mul_«ivê give†%i", 
öexa˘_z
);

72 
	`Ârötf
 (
°dîr
, "\nmpc_mul_k¨©sub®give†%i", 
öexa˘_t
);

73 
	`Ârötf
 (
°dîr
, "\n");

74 
	`exô
 (1);

77 
	`mpc_˛ór
 (
z
);

78 
	`mpc_˛ór
 (
t
);

79 
	}
}

83 
	$ã°mul
 (
a
, 
b
, 
c
, 
d
, 
mp_¥ec_t
 
¥ec
, 
mpc_∫d_t
 
∫d
)

85 
mpc_t
 
x
, 
y
;

87 
	`mpc_öô2
 (
x
, 
¥ec
);

88 
	`mpc_öô2
 (
y
, 
¥ec
);

90 
	`mpc_£t_si_si
 (
x
, 
a
, 
b
, 
∫d
);

91 
	`mpc_£t_si_si
 (
y
, 
c
, 
d
, 
∫d
);

93 
	`cmpmul
 (
x
, 
y
, 
∫d
);

95 
	`mpc_˛ór
 (
x
);

96 
	`mpc_˛ór
 (
y
);

97 
	}
}

101 
	$check_ªguœr
 ()

103 
mpc_t
 
x
, 
y
;

104 
mpc_∫d_t
 
∫d_ª
, 
∫d_im
;

105 
mp_¥ec_t
 
¥ec
;

107 
	`ã°mul
 (247, -65, -223, 416, 8, 24);

108 
	`ã°mul
 (5, -896, 5, -32, 3, 2);

109 
	`ã°mul
 (-3, -512, -1, -1, 2, 16);

110 
	`ã°mul
 (266013312, 121990769, 110585572, 116491059, 27, 0);

111 
	`ã°mul
 (170, 9, 450, 251, 8, 0);

112 
	`ã°mul
 (768, 85, 169, 440, 8, 16);

113 
	`ã°mul
 (145, 1816, 848, 169, 8, 24);

114 
	`ã°mul
 (0, 1816, 848, 169, 8, 24);

115 
	`ã°mul
 (145, 0, 848, 169, 8, 24);

116 
	`ã°mul
 (145, 1816, 0, 169, 8, 24);

117 
	`ã°mul
 (145, 1816, 848, 0, 8, 24);

119 
	`mpc_öô2
 (
x
, 1000);

120 
	`mpc_öô2
 (
y
, 1000);

124 
	`mpc_£t_¥ec
 (
x
, 7);

125 
	`mpc_£t_¥ec
 (
y
, 7);

126 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
x
), "0xB4p+733", 16, 
GMP_RNDN
);

127 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
x
), "0x90p+244", 16, 
GMP_RNDN
);

128 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
y
), "0xECp-146", 16, 
GMP_RNDN
);

129 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
y
), "0xACp-471", 16, 
GMP_RNDN
);

130 
	`cmpmul
 (
x
, 
y
, 
MPC_RNDNN
);

131 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
x
), "0xB4p+733", 16, 
GMP_RNDN
);

132 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
x
), "0x90p+244", 16, 
GMP_RNDN
);

133 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
y
), "0xACp-471", 16, 
GMP_RNDN
);

134 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
y
), "-0xECp-146", 16, 
GMP_RNDN
);

135 
	`cmpmul
 (
x
, 
y
, 
MPC_RNDNN
);

137 
¥ec
 = 2;Örec < 1000;Örec =Örec * 1.1 + 1)

139 
	`mpc_£t_¥ec
 (
x
, 
¥ec
);

140 
	`mpc_£t_¥ec
 (
y
, 
¥ec
);

142 
	`ã°_deÁu…_øndom
 (
x
, -1024, 1024, 128, 25);

143 
	`ã°_deÁu…_øndom
 (
y
, -1024, 1024, 128, 25);

145 
∫d_ª
 = 0;Ñnd_re < 4;Ñnd_re ++)

146 
∫d_im
 = 0;Ñnd_im < 4;Ñnd_im ++)

147 
	`cmpmul
 (
x
, 
y
, 
	`RNDC
(
∫d_ª
, 
∫d_im
));

150 
	`mpc_˛ór
 (
x
);

151 
	`mpc_˛ór
 (
y
);

152 
	}
}

156 
	$check_•ecül
 ()

158 
mpc_t
 
x
, 
y
, 
z
;

159 
öexa˘
;

161 
	`mpc_öô2
 (
x
, 8);

162 
	`mpc_öô2
 (
y
, 8);

163 
	`mpc_öô2
 (
z
, 8);

165 
	`mpc_£t_si_si
 (
x
, 4, 3, 
MPC_RNDNN
);

166 
	`mpc_£t_si_si
 (
y
, 1, -2, 
MPC_RNDNN
);

167 
öexa˘
 = 
	`mpc_mul
 (
z
, 
x
, 
y
, 
MPC_RNDNN
);

168 i‡(
	`MPC_INEX_RE
(
öexa˘
Ë|| 
	`MPC_INEX_IM
(inexact))

170 
	`Ârötf
 (
°dîr
, "Error: (4+3*I)*(1-2*I) should beÉxact withÖrec=8\n");

171 
	`exô
 (1);

174 
	`mpc_£t_¥ec
 (
x
, 27);

175 
	`mpc_£t_¥ec
 (
y
, 27);

176 
	`mp‰_£t_°r
 (
	`MPC_RE
(
x
), "1.11111011011000010101000000e-2", 2, 
GMP_RNDN
);

177 
	`mp‰_£t_°r
 (
	`MPC_IM
(
x
), "1.11010001010110111001110001e-3", 2, 
GMP_RNDN
);

178 
	`mp‰_£t_°r
 (
	`MPC_RE
(
y
), "1.10100101110110011011100100e-1", 2, 
GMP_RNDN
);

179 
	`mp‰_£t_°r
 (
	`MPC_IM
(
y
), "1.10111100011000001100110011e-1", 2, 
GMP_RNDN
);

180 
	`cmpmul
 (
x
, 
y
, 0);

182 
	`mpc_˛ór
 (
x
);

183 
	`mpc_˛ór
 (
y
);

184 
	`mpc_˛ór
 (
z
);

185 
	}
}

187 #ifde‡
TIMING


189 
	$timemul
 ()

194 
mpc_t
 
x
, 
y
, 
z
;

195 
i
, 
j
;

196 c⁄° 
ã°s
 = 10000;

197 
tms
 
time_ﬁd
, 
time_√w
;

198 
∑s£d1
, 
∑s£d2
;

200 
	`mpc_öô
 (
x
);

201 
	`mpc_öô
 (
y
);

202 
	`mpc_öô_£t_ui_ui
 (
z
, 1, 0, 
MPC_RNDNN
);

204 
i
 = 1; i < 50; i++)

206 
	`mpc_£t_¥ec
 (
x
, 
i
 * 
BITS_PER_MP_LIMB
);

207 
	`mpc_£t_¥ec
 (
y
, 
i
 * 
BITS_PER_MP_LIMB
);

208 
	`mpc_£t_¥ec
 (
z
, 
i
 * 
BITS_PER_MP_LIMB
);

209 
	`ã°_deÁu…_øndom
 (
x
, -1, 1, 128, 25);

210 
	`ã°_deÁu…_øndom
 (
y
, -1, 1, 128, 25);

212 
	`times
 (&
time_ﬁd
);

213 
j
 = 0; j < 
ã°s
; j++)

214 
	`mpc_mul_«ive
 (
z
, 
x
, 
y
, 
MPC_RNDNN
);

215 
	`times
 (&
time_√w
);

216 
∑s£d1
 = ((Ë(
time_√w
.
tms_utime
 - 
time_ﬁd
.tms_utime)) / 100;

218 
	`times
 (&
time_ﬁd
);

219 
j
 = 0; j < 
ã°s
; j++)

220 
	`mpc_mul_k¨©suba
 (
z
, 
x
, 
y
, 
MPC_RNDNN
);

221 
	`times
 (&
time_√w
);

222 
∑s£d2
 = ((Ë(
time_√w
.
tms_utime
 - 
time_ﬁd
.tms_utime)) / 100;

224 
	`¥ötf
 ("Timêf‹ %3lòlimb†«ive/K¨©suba: %5.2‡%5.2f\n", 
i
,

225 
∑s£d1
, 
∑s£d2
);

228 
	`mpc_˛ór
 (
x
);

229 
	`mpc_˛ór
 (
y
);

230 
	`mpc_˛ór
 (
z
);

231 
	}
}

235 
	$maö
 ()

237 
	`DECL_FUNC
 (
CCC
, 
f
, 
mpc_mul
);

238 
f
.
¥›îtõs
 = 
FUNC_PROP_SYMETRIC
;

240 
	`ã°_°¨t
 ();

242 #ifde‡
TIMING


243 
	`timemul
 ();

246 
	`check_•ecül
 ();

247 
	`check_ªguœr
 ();

249 
	`d©a_check
 (
f
, "mul.dat");

250 
	`tgíîic
 (
f
, 2, 4096, 41, 100);

252 
	`ã°_íd
 ();

254 
	}
}

	@tests/tmul_2exp.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_mul_2exp
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/tmul_fr.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCF
, 
f
, 
mpc_mul_‰
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "mul_fr.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tmul_i.c

22 
	~"mpc-ã°s.h
"

25 
	$check_dif„ª¡_¥ecisi⁄s
()

28 
mpc_t
 
z
, 
ex≥˘ed
, 
gŸ
;

29 
ªs
;

31 
	`mpc_öô2
(
z
, 128);

32 
	`mpc_öô2
(
ex≥˘ed
, 128);

33 
	`mpc_öô2
(
gŸ
, 128);

36 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
z
), 32);

37 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
ex≥˘ed
), 32);

38 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
gŸ
), 32);

40 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
z
), "0x100000000Â-32", 16, 
GMP_RNDN
);

41 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
z
), "-1", 2, 
GMP_RNDN
);

42 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
ex≥˘ed
), "+1", 2, 
GMP_RNDN
);

43 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
ex≥˘ed
), "0x100000000Â-32", 16, 
GMP_RNDN
);

45 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

46 
ªs
 = 
	`mpc_mul_i
 (
gŸ
, gŸ, +1, 
MPC_RNDNN
);

47 i‡(
	`MPC_INEX_RE
(
ªs
Ë!0 || 
	`MPC_INEX_IM
(res) >=0)

49 
	`¥ötf
("Wrong inexact flag for mpc_mul_i(z, z,Ç)\n"

51 
	`MPC_INEX_RE
(
ªs
), 
	`MPC_INEX_IM
(res));

52 
	`exô
(1);

54 i‡(
	`mpc_cmp
(
gŸ
, 
ex≥˘ed
) != 0)

56 
	`¥ötf
 ("Error for mpc_mul_i(z, z,Ç) for\n");

57 
	`OUT
 (
z
);

58 
	`¥ötf
 ("n=+1\n");

59 
	`OUT
 (
ex≥˘ed
);

60 
	`OUT
 (
gŸ
);

62 
	`exô
 (1);

65 
	`mpc_√g
 (
ex≥˘ed
,Éx≥˘ed, 
MPC_RNDNN
);

66 
	`mpc_£t
 (
gŸ
, 
z
, 
MPC_RNDNN
);

67 
	`mpc_mul_i
 (
gŸ
, gŸ, -1, 
MPC_RNDNN
);

68 i‡(
	`mpc_cmp
(
gŸ
, 
ex≥˘ed
) != 0)

70 
	`¥ötf
 ("Error for mpc_mul_i(z, z,Ç) for\n");

71 
	`OUT
 (
z
);

72 
	`¥ötf
 ("n=-1\n");

73 
	`OUT
 (
ex≥˘ed
);

74 
	`OUT
 (
gŸ
);

76 
	`exô
 (1);

79 
	`mpc_˛ór
 (
z
);

80 
	`mpc_˛ór
 (
ex≥˘ed
);

81 
	`mpc_˛ór
 (
gŸ
);

82 
	}
}

85 
	$maö
 ()

87 
	`DECL_FUNC
 (
CCI
, 
f
, 
mpc_mul_i
);

89 
	`ã°_°¨t
 ();

91 
	`check_dif„ª¡_¥ecisi⁄s
 ();

92 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

94 
	`ã°_íd
 ();

97 
	}
}

	@tests/tmul_si.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCS
, 
f
, 
mpc_mul_si
);

28 
	`ã°_°¨t
 ();

30 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

32 
	`ã°_íd
 ();

35 
	}
}

	@tests/tmul_ui.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_mul_ui
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/tneg.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_√g
);

28 
	`ã°_°¨t
 ();

30 
	`d©a_check
 (
f
, "neg.dat");

31 
	`tgíîic
 (
f
, 2, 1024, 1, 0);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/tnorm.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
FC
, 
f
, 
mpc_n‹m
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "norm.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 1, 4096);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tpow.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCC
, 
f
, 
mpc_pow
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "pow.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 7, 10);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tpow_d.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
mpc_t
 
z
;

29 
	`ã°_°¨t
 ();

31 
	`mpc_öô2
 (
z
, 11);

33 
	`mpc_£t_ui_ui
 (
z
, 2, 3, 
MPC_RNDNN
);

34 
	`mpc_pow_d
 (
z
, z, 3.0, 
MPC_RNDNN
);

35 i‡(
	`mpc_cmp_si_si
 (
z
, -46, 9) != 0)

37 
	`¥ötf
 ("Error for mpc_pow_d (1)\n");

38 
	`exô
 (1);

41 
	`mpc_£t_si_si
 (
z
, -3, 4, 
MPC_RNDNN
);

42 
	`mpc_pow_d
 (
z
, z, 0.5, 
MPC_RNDNN
);

43 i‡(
	`mpc_cmp_si_si
 (
z
, 1, 2) != 0)

45 
	`¥ötf
 ("Error for mpc_pow_d (2)\n");

46 
	`exô
 (1);

49 
	`mpc_£t_ui_ui
 (
z
, 2, 3, 
MPC_RNDNN
);

50 
	`mpc_pow_d
 (
z
, z, 6.0, 
MPC_RNDNN
);

51 i‡(
	`mpc_cmp_si_si
 (
z
, 2035, -828) != 0)

53 
	`¥ötf
 ("Error for mpc_pow_d (3)\n");

54 
	`exô
 (1);

57 
	`mpc_˛ór
 (
z
);

59 
	`ã°_íd
 ();

62 
	}
}

	@tests/tpow_fr.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
mpc_t
 
z
;

28 
mp‰_t
 
f
;

30 
	`ã°_°¨t
 ();

32 
	`mpc_öô2
 (
z
, 5);

33 
	`mp‰_öô2
 (
f
, 3);

34 
	`mpc_£t_ui_ui
 (
z
, 3, 2, 
MPC_RNDNN
);

35 
	`mp‰_£t_ui
 (
f
, 3, 
GMP_RNDN
);

36 
	`mpc_pow_‰
 (
z
, z, 
f
, 
MPC_RNDNN
);

37 i‡(
	`mpc_cmp_si_si
 (
z
, -9, 46) != 0)

39 
	`¥ötf
 ("Error for mpc_pow_fr (1)\n");

40 
	`exô
 (1);

42 
	`mpc_˛ór
 (
z
);

43 
	`mp‰_˛ór
 (
f
);

45 
	`ã°_íd
 ();

48 
	}
}

	@tests/tpow_ld.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
mpc_t
 
z
;

29 
	`ã°_°¨t
 ();

31 
	`mpc_öô2
 (
z
, 5);

32 
	`mpc_£t_ui_ui
 (
z
, 3, 2, 
MPC_RNDNN
);

33 
	`mpc_pow_ld
 (
z
, z, (Ë3.0, 
MPC_RNDNN
);

34 i‡(
	`mpc_cmp_si_si
 (
z
, -9, 46) != 0)

36 
	`¥ötf
 ("Error for mpc_pow_ld (1)\n");

37 
	`exô
 (1);

39 
	`mpc_˛ór
 (
z
);

41 
	`ã°_íd
 ();

44 
	}
}

	@tests/tpow_si.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
mpc_t
 
z
;

29 
	`ã°_°¨t
 ();

31 
	`mpc_öô2
 (
z
, 5);

32 
	`mpc_£t_ui_ui
 (
z
, 3, 2, 
MPC_RNDNN
);

33 
	`mpc_pow_si
 (
z
, z, 3, 
MPC_RNDNN
);

34 i‡(
	`mpc_cmp_si_si
 (
z
, -9, 46) != 0)

36 
	`¥ötf
 ("Error for mpc_pow_si (1)\n");

37 
	`exô
 (1);

39 
	`mpc_˛ór
 (
z
);

41 
	`ã°_íd
 ();

44 
	}
}

	@tests/tpow_ui.c

22 
	~<limôs.h
>

23 
	~"mpc-ã°s.h
"

26 
	$com∑ª_mpc_pow
 (
mp_¥ec_t
 
pmax
, 
ôî
, 
nbôs
)

28 
mp_¥ec_t
 
p
;

29 
mpc_t
 
x
, 
y
, 
z
, 
t
;

30 
n
;

31 
i
, 
öex_pow
, 
öex_pow_ui
;

32 
gmp_ønd°©e_t
 
°©e
;

33 
mpc_∫d_t
 
∫d
;

35 
	`gmp_øndöô_deÁu…
 (
°©e
);

36 
	`mpc_öô3
 (
y
,  (Ë* 
CHAR_BIT
, 
MPFR_PREC_MIN
);

37 
p
 = 
MPFR_PREC_MIN
;Ö <
pmax
;Ö++)

38 
i
 = 0; i < 
ôî
; i++)

40 
	`mpc_öô2
 (
x
, 
p
);

41 
	`mpc_öô2
 (
z
, 
p
);

42 
	`mpc_öô2
 (
t
, 
p
);

43 
	`mpc_uøndom
 (
x
, 
°©e
);

44 
n
 = 
	`gmp_uøndomb_ui
 (
°©e
, 
nbôs
);

45 
	`mpc_£t_ui
 (
y
, 
n
, 
MPC_RNDNN
);

46 
∫d
 = 0;Ñnd < 16;Ñnd ++)

48 
öex_pow
 = 
	`mpc_pow
 (
z
, 
x
, 
y
, 
∫d
);

49 
öex_pow_ui
 = 
	`mpc_pow_ui
 (
t
, 
x
, 
n
, 
∫d
);

50 i‡(
	`mpc_cmp
 (
z
, 
t
) != 0)

52 
	`¥ötf
 ("mpc_powánd mpc_pow_ui differ for x=");

53 
	`mpc_out_°r
 (
°dout
, 10, 0, 
x
, 
MPC_RNDNN
);

54 
	`¥ötf
 ("Ç=%lu\n", 
n
);

55 
	`¥ötf
 ("mpc_pow gives ");

56 
	`mpc_out_°r
 (
°dout
, 10, 0, 
z
, 
MPC_RNDNN
);

57 
	`¥ötf
 ("\nmpc_pow_ui gives ");

58 
	`mpc_out_°r
 (
°dout
, 10, 0, 
t
, 
MPC_RNDNN
);

59 
	`¥ötf
 ("\n");

60 
	`exô
 (1);

62 i‡(
öex_pow
 !
öex_pow_ui
)

64 
	`¥ötf
 ("mpc_powánd mpc_pow_ui gives different flags for x=");

65 
	`mpc_out_°r
 (
°dout
, 10, 0, 
x
, 
MPC_RNDNN
);

66 
	`¥ötf
 ("Ç=%lu\n", 
n
);

67 
	`¥ötf
 ("mpc_pow give†%d\n", 
öex_pow
);

68 
	`¥ötf
 ("mpc_pow_uògive†%d\n", 
öex_pow_ui
);

69 
	`exô
 (1);

72 
	`mpc_˛ór
 (
x
);

73 
	`mpc_˛ór
 (
z
);

74 
	`mpc_˛ór
 (
t
);

76 
	`mpc_˛ór
 (
y
);

77 
	`gmp_ønd˛ór
 (
°©e
);

78 
	}
}

81 
	$maö
 (
¨gc
, *
¨gv
[])

83 
mpc_t
 
z
;

85 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_pow_ui
);

87 i‡(
¨gc
 != 1)

89 
mp_¥ec_t
 
p
;

90 
n
, 
k
;

91 
mpc_t
 
ªs
;

92 i‡(
¨gc
 != 3 &&árgc != 4)

94 
	`¥ötf
 ("Usage:Åpow_uiÖrecisionÉxponent [k]\n");

95 
	`exô
 (1);

97 
p
 = 
	`©oi
 (
¨gv
[1]);

98 
n
 = 
	`©oi
 (
¨gv
[2]);

99 
k
 = (
¨gc
 > 3Ë? 
	`©oi
 (
¨gv
[3]) : 1;

100 
	`mpc_öô2
 (
z
, 
p
);

101 
	`mpc_öô2
 (
ªs
, 
p
);

102 
	`mp‰_c⁄°_pi
 (
	`mpc_ªÆªf
 (
z
), 
GMP_RNDN
);

103 
	`mp‰_div_2exp
 (
	`mpc_ªÆªf
 (
z
), mpc_ªÆª‡(z), 2, 
GMP_RNDN
);

104 
	`mp‰_c⁄°_log2
 (
	`mpc_imagªf
 (
z
), 
GMP_RNDN
);

105 
k
--)

106 
	`mpc_pow_ui
 (
ªs
, 
z
, 
n
, 
MPC_RNDNN
);

107 
	`mpc_˛ór
 (
z
);

108 
	`mpc_˛ór
 (
ªs
);

112 
	`ã°_°¨t
 ();

113 
	`d©a_check
 (
f
, "pow_ui.dat");

115 
	`mpc_öô2
 (
z
, 5);

116 
	`mpc_£t_ui_ui
 (
z
, 3, 2, 
MPC_RNDNN
);

117 
	`mpc_pow_ui
 (
z
, z, 3, 
MPC_RNDNN
);

118 i‡(
	`mpc_cmp_si_si
 (
z
, -9, 46) != 0)

120 
	`¥ötf
 ("Error for mpc_pow_ui (1)\n");

121 
	`¥ötf
 ("expected (-9,46)\n");

122 
	`¥ötf
 ("got ");

123 
	`mpc_out_°r
 (
°dout
, 10, 0, 
z
, 
MPC_RNDNN
);

124 
	`¥ötf
 ("\n");

125 
	`exô
 (1);

127 
	`mpc_˛ór
 (
z
);

129 
	`com∑ª_mpc_pow
 (100, 5, 19);

131 
	`ã°_íd
 ();

134 
	}
}

	@tests/tpow_z.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
mpc_t
 
z
;

28 
mpz_t
 
t
;

30 
	`ã°_°¨t
 ();

32 
	`mpc_öô2
 (
z
, 5);

33 
	`mpz_öô_£t_ui
 (
t
, 1);

34 
	`mpc_£t_ui_ui
 (
z
, 17, 42, 
MPC_RNDNN
);

35 
	`mpc_pow_z
 (
z
, z, 
t
, 
MPC_RNDNN
);

36 i‡(
	`mpc_cmp_si_si
 (
z
, 17, 42) != 0)

38 
	`¥ötf
 ("Error for mpc_pow_z (1)\n");

39 
	`exô
 (1);

41 
	`mpc_˛ór
 (
z
);

42 
	`mpz_˛ór
 (
t
);

44 
	`ã°_íd
 ();

47 
	}
}

	@tests/tprec.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$maö
 ()

28 
mpc_t
 
z
;

29 
mp_¥ec_t
 
¥ec
, 
¥
, 
pi
;

31 
	`mpc_öô2
 (
z
, 1000);

33 
¥ec
 = 2;Örec <= 1000;Örec++)

36 
	`mp‰_£t_¥ec
 (
	`MPC_RE
 (
z
), 
¥ec
);

37 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
z
), 
¥ec
 + 1);

38 i‡(
	`mpc_gë_¥ec
 (
z
) != 0)

40 
	`¥ötf
 ("Error in mpc_get_prec forÖrec (re) = %lu, "

41 "¥e¯(imË%lu\n", (Ë
¥ec
,

42 (Ë
¥ec
 + 1ul);

44 
	`exô
 (1);

47 
	`mpc_gë_¥ec2
 (&
¥
, &
pi
, 
z
);

48 i‡(
¥
 !
¥ec
 || 
pi
 !=Örec + 1)

50 
	`¥ötf
 ("Error in mpc_get_prec2 forÖrec (re) = %lu, "

51 "¥e¯(imË%lu\n", (Ë
¥ec
,

52 (Ë
¥ec
 + 1ul);

54 
	`exô
 (1);

57 
	`mpc_£t_¥ec
 (
z
, 
¥ec
);

58 i‡(
	`mpc_gë_¥ec
 (
z
Ë!
¥ec
)

60 
	`¥ötf
 ("Error in mpc_get_prec forÖrec = %lu\n",

61 (Ë
¥ec
);

63 
	`exô
 (1);

67 
	`mpc_˛ór
 (
z
);

70 
	}
}

	@tests/tproj.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_¥oj
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 1, 4096);

32 
	`d©a_check
 (
f
, "proj.dat");

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/treal.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
FC
, 
f
, 
mpc_ªÆ
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 1, 4096);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/treimref.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
mpc_t
 
z
;

29 
	`ã°_°¨t
 ();

30 
	`ã°_íd
 ();

32 
	`mpc_öô2
 (
z
, 6);

33 
	`mpc_£t_ui_ui
 (
z
, 17, 42, 
MPC_RNDNN
);

34 
	`mp‰_£t_ui
 (
	`mpc_ªÆªf
 (
z
), 18, 
GMP_RNDN
);

35 i‡(
	`mp‰_gë_ui
 (
	`mpc_ªÆªf
 (
z
), 
GMP_RNDN
) != 18)

37 
	`Ârötf
 (
°dîr
, "Error in mpfr_set_ui/mpc_realref\n");

38 
	`exô
 (1);

40 
	`mp‰_£t_ui
 (
	`mpc_imagªf
 (
z
), 43, 
GMP_RNDN
);

41 i‡(
	`mp‰_gë_ui
 (
	`mpc_imagªf
 (
z
), 
GMP_RNDN
) != 43)

43 
	`Ârötf
 (
°dîr
, "Error in mpfr_set_ui/mpc_imagref\n");

44 
	`exô
 (1);

46 
	`mpc_˛ór
 (
z
);

49 
	}
}

	@tests/tset.c

22 
	~"c⁄fig.h
"

23 
	~<limôs.h
>

25 #i‡
HAVE_INTTYPES_H


26 
	~<öây≥s.h
>

28 #i‡
HAVE_STDINT_H


29 
	~<°döt.h
>

33 #ifde‡
HAVE_LOCALE_H


34 
	~<loˇÀ.h
>

37 
	~"mpc-ã°s.h
"

39 
	#PRINT_ERROR
(
fun˘i⁄_«me
, 
¥ecisi⁄
, 
a
) \

41 
	`¥ötf
 ("Eº‹ i¿"
fun˘i⁄_«me
" forÖrec = %lu\n", \

42 (Ë
¥ecisi⁄
); \

43 
	`OUT
(
a
); \

44 
	`exô
 (1); \

45 } 0)

	)

49 
	$mpc_£t_ui_‰
 (
mpc_±r
 
z
, 
a
, 
mp‰_§˝å
 
b
, 
mpc_∫d_t
 
∫d
)

50 
	$MPC_SET_X_Y
 (
ui
, 
‰
, 
z
, 
a
, 
b
, 
∫d
)

53 
	$mpc_£t_‰_ui
 (
mpc_±r
 
z
, 
mp‰_§˝å
 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

54 
	$MPC_SET_X_Y
 (
‰
, 
ui
, 
z
, 
a
, 
b
, 
∫d
)

57 
	$mpc_£t_f_si
 (
mpc_±r
 
z
, 
mpf_t
 
a
, 
b
, 
mpc_∫d_t
 
∫d
)

58 
	$MPC_SET_X_Y
 (
f
, 
si
, 
z
, 
a
, 
b
, 
∫d
)

62 
	$check_£t
 ()

64 
lo
;

65 
mpz_t
 
mpz
;

66 
mpq_t
 
mpq
;

67 
mpf_t
 
mpf
;

68 
mp‰_t
 
‰
;

69 
mpc_t
 
x
, 
z
;

70 
mp_¥ec_t
 
¥ec
;

72 
	`mpz_öô
 (
mpz
);

73 
	`mpq_öô
 (
mpq
);

74 
	`mpf_öô2
 (
mpf
, 1000);

75 
	`mp‰_öô2
 (
‰
, 1000);

76 
	`mpc_öô2
 (
x
, 1000);

77 
	`mpc_öô2
 (
z
, 1000);

79 
	`mpz_£t_ui
 (
mpz
, 0x4217);

80 
	`mpq_£t_si
 (
mpq
, -1, 0x4321);

81 
	`mpf_£t_q
 (
mpf
, 
mpq
);

83 
¥ec
 = 2;Örec <= 1000;Örec++)

85 
	`mpc_£t_¥ec
 (
z
, 
¥ec
);

86 
	`mp‰_£t_¥ec
 (
‰
, 
¥ec
);

88 
lo
 = -
¥ec
;

90 
	`mp‰_£t_d
 (
‰
, 1.23456789, 
GMP_RNDN
);

92 
	`mpc_£t_d
 (
z
, 1.23456789, 
MPC_RNDNN
);

93 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
Ë!0 || 
	`mp‰_cmp_si
 (
	`MPC_IM
(z), 0) != 0)

94 
	`PRINT_ERROR
 ("mpc_£t", 
¥ec
, 
z
);

96 
	`mpc_£t_ui
 (
z
, 
¥ec
, 
MPC_RNDNN
);

97 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z
), 
¥ec
) != 0

98 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0)

99 
	`PRINT_ERROR
 ("mpc_£t_ui", 
¥ec
, 
z
);

101 
	`mpc_£t_d_d
 (
z
, 1.23456789, 1.23456789, 
MPC_RNDNN
);

102 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
Ë!0 || mp‰_cm∞(
	`MPC_IM
(z), fr) != 0)

103 
	`PRINT_ERROR
 ("mpc_£t_d_d", 
¥ec
, 
z
);

105 
	`mpc_£t_si
 (
z
, 
lo
, 
MPC_RNDNN
);

106 i‡(
	`mp‰_cmp_si
 (
	`MPC_RE
(
z
), 
lo
Ë!0 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(z), 0) != 0)

107 
	`PRINT_ERROR
 ("mpc_£t_si", 
¥ec
, 
z
);

109 
	`mp‰_£t_ld
 (
‰
, 1.23456789L, 
GMP_RNDN
);

111 
	`mpc_£t_ld_ld
 (
z
, 1.23456789L, 1.23456789L, 
MPC_RNDNN
);

112 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
Ë!0 || mp‰_cm∞(
	`MPC_IM
(z), fr) != 0)

113 
	`PRINT_ERROR
 ("mpc_£t_ld_ld", 
¥ec
, 
z
);

115 
	`mpc_£t_ui_ui
 (
z
, 
¥ec
,Öªc, 
MPC_RNDNN
);

116 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z
), 
¥ec
) != 0

117 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 
¥ec
) != 0)

118 
	`PRINT_ERROR
 ("mpc_£t_ui_ui", 
¥ec
, 
z
);

120 
	`mpc_£t_ld
 (
z
, 1.23456789L, 
MPC_RNDNN
);

121 
	`mp‰_˛ór_Êags
 ();

122 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

123 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0

124 || 
	`mp‰_î™geÊag_p
())

125 
	`PRINT_ERROR
 ("mpc_£t_ld", 
¥ec
, 
z
);

127 
	`mpc_£t_¥ec
 (
x
, 
¥ec
);

128 
	`mp‰_£t_ui
(
‰
, 1, 
GMP_RNDN
);

129 
	`mp‰_div_ui
(
‰
, fr, 3, 
GMP_RNDN
);

130 
	`mp‰_£t
(
	`MPC_RE
(
x
), 
‰
, 
GMP_RNDN
);

131 
	`mp‰_£t
(
	`MPC_IM
(
x
), 
‰
, 
GMP_RNDN
);

133 
	`mpc_£t
 (
z
, 
x
, 
MPC_RNDNN
);

134 
	`mp‰_˛ór_Êags
 ();

136 i‡(
	`mpc_cmp
 (
z
, 
x
Ë!0 || 
	`mp‰_î™geÊag_p
())

138 
	`¥ötf
 ("Error in mpc_set forÖrec = %lu\n",

139 (Ë
¥ec
);

140 
	`OUT
(
z
);

141 
	`OUT
(
x
);

142 
	`exô
 (1);

145 
	`mpc_£t_si_si
 (
z
, 
lo
,Üo, 
MPC_RNDNN
);

146 i‡(
	`mp‰_cmp_si
 (
	`MPC_RE
(
z
), 
lo
) != 0

147 || 
	`mp‰_cmp_si
 (
	`MPC_IM
(
z
), 
lo
) != 0)

148 
	`PRINT_ERROR
 ("mpc_£t_si_si", 
¥ec
, 
z
);

150 
	`mpc_£t_‰
 (
z
, 
‰
, 
MPC_RNDNN
);

151 
	`mp‰_˛ór_Êags
 ();

152 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

153 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0

154 || 
	`mp‰_î™geÊag_p
())

155 
	`PRINT_ERROR
 ("mpc_£t_‰", 
¥ec
, 
z
);

157 
	`mp‰_£t_z
 (
‰
, 
mpz
, 
GMP_RNDN
);

158 
	`mpc_£t_z_z
 (
z
, 
mpz
, mpz, 
MPC_RNDNN
);

159 
	`mp‰_˛ór_Êags
 ();

160 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

161 || 
	`mp‰_cmp
 (
	`MPC_IM
(
z
), 
‰
) != 0

162 || 
	`mp‰_î™geÊag_p
())

163 
	`PRINT_ERROR
 ("mpc_£t_z_z", 
¥ec
, 
z
);

165 
	`mpc_£t_‰_‰
 (
z
, 
‰
, fr, 
MPC_RNDNN
);

166 
	`mp‰_˛ór_Êags
 ();

167 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

168 || 
	`mp‰_cmp
 (
	`MPC_IM
(
z
), 
‰
) != 0

169 || 
	`mp‰_î™geÊag_p
())

170 
	`PRINT_ERROR
 ("mpc_£t_‰_‰", 
¥ec
, 
z
);

172 
	`mpc_£t_z
 (
z
, 
mpz
, 
MPC_RNDNN
);

173 
	`mp‰_˛ór_Êags
 ();

174 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

175 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0

176 || 
	`mp‰_î™geÊag_p
())

177 
	`PRINT_ERROR
 ("mpc_£t_z", 
¥ec
, 
z
);

179 
	`mp‰_£t_q
 (
‰
, 
mpq
, 
GMP_RNDN
);

180 
	`mpc_£t_q_q
 (
z
, 
mpq
, mpq, 
MPC_RNDNN
);

181 
	`mp‰_˛ór_Êags
 ();

182 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

183 || 
	`mp‰_cmp
 (
	`MPC_IM
(
z
), 
‰
) != 0

184 || 
	`mp‰_î™geÊag_p
())

185 
	`PRINT_ERROR
 ("mpc_£t_q_q", 
¥ec
, 
z
);

187 
	`mpc_£t_ui_‰
 (
z
, 
¥ec
, 
‰
, 
MPC_RNDNN
);

188 
	`mp‰_˛ór_Êags
 ();

189 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
 (
z
), 
¥ec
) != 0

190 || 
	`mp‰_cmp
 (
	`MPC_IM
 (
z
), 
‰
) != 0

191 || 
	`mp‰_î™geÊag_p
 ())

192 
	`PRINT_ERROR
 ("mpc_£t_ui_‰", 
¥ec
, 
z
);

194 
	`mpc_£t_‰_ui
 (
z
, 
‰
, 
¥ec
, 
MPC_RNDNN
);

195 
	`mp‰_˛ór_Êags
 ();

196 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
z
), 
‰
) != 0

197 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
 (
z
), 
¥ec
) != 0

198 || 
	`mp‰_î™geÊag_p
())

199 
	`PRINT_ERROR
 ("mpc_£t_‰_ui", 
¥ec
, 
z
);

201 
	`mpc_£t_q
 (
z
, 
mpq
, 
MPC_RNDNN
);

202 
	`mp‰_˛ór_Êags
 ();

203 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

204 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0

205 || 
	`mp‰_î™geÊag_p
())

206 
	`PRINT_ERROR
 ("mpc_£t_q", 
¥ec
, 
z
);

208 
	`mp‰_£t_f
 (
‰
, 
mpf
, 
GMP_RNDN
);

209 
	`mpc_£t_f_f
 (
z
, 
mpf
, mpf, 
MPC_RNDNN
);

210 
	`mp‰_˛ór_Êags
 ();

211 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

212 || 
	`mp‰_cmp
 (
	`MPC_IM
(
z
), 
‰
) != 0

213 || 
	`mp‰_î™geÊag_p
())

214 
	`PRINT_ERROR
 ("mpc_£t_f_f", 
¥ec
, 
z
);

216 
	`mpc_£t_f
 (
z
, 
mpf
, 
MPC_RNDNN
);

217 
	`mp‰_˛ór_Êags
 ();

218 i‡(
	`mp‰_cmp
 (
	`MPC_RE
(
z
), 
‰
) != 0

219 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0

220 || 
	`mp‰_î™geÊag_p
())

221 
	`PRINT_ERROR
 ("mpc_£t_f", 
¥ec
, 
z
);

223 
	`mpc_£t_f_si
 (
z
, 
mpf
, 
lo
, 
MPC_RNDNN
);

224 
	`mp‰_˛ór_Êags
 ();

225 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
z
), 
‰
) != 0

226 || 
	`mp‰_cmp_si
 (
	`MPC_IM
 (
z
), 
lo
) != 0

227 || 
	`mp‰_î™geÊag_p
 ())

228 
	`PRINT_ERROR
 ("mpc_£t_f", 
¥ec
, 
z
);

230 
	`mpc_£t_«n
 (
z
);

231 i‡(!
	`mp‰_«n_p
 (
	`MPC_RE
(
z
)Ë|| !mp‰_«n_∞(
	`MPC_IM
(z)))

232 
	`PRINT_ERROR
 ("mpc_£t_«n", 
¥ec
, 
z
);

234 #ifde‡
_MPC_H_HAVE_INTMAX_T


236 
uötmax_t
 
uim
 = 
¥ec
;

237 
ötmax_t
 
im
 = 
¥ec
;

239 
	`mpc_£t_uj
 (
z
, 
uim
, 
MPC_RNDNN
);

240 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z
), 
¥ec
) != 0

241 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0)

242 
	`PRINT_ERROR
 ("mpc_£t_uj", 
¥ec
, 
z
);

244 
	`mpc_£t_sj
 (
z
, 
im
, 
MPC_RNDNN
);

245 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z
), 
¥ec
) != 0

246 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0)

247 
	`PRINT_ERROR
 ("mpc_£t_sj (1)", 
¥ec
, 
z
);

249 
	`mpc_£t_uj_uj
 (
z
, 
uim
, uim, 
MPC_RNDNN
);

250 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z
), 
¥ec
) != 0

251 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 
¥ec
) != 0)

252 
	`PRINT_ERROR
 ("mpc_£t_uj_uj", 
¥ec
, 
z
);

254 
	`mpc_£t_sj_sj
 (
z
, 
im
, im, 
MPC_RNDNN
);

255 i‡(
	`mp‰_cmp_ui
 (
	`MPC_RE
(
z
), 
¥ec
) != 0

256 || 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 
¥ec
) != 0)

257 
	`PRINT_ERROR
 ("mpc_£t_sj_sj (1)", 
¥ec
, 
z
);

259 
im
 = 
LONG_MAX
;

260 i‡( (
ötmax_t
) == 2 *  ())

261 
im
 = 2 * im * im + 4 * im + 1;

263 
	`mpc_£t_sj
 (
z
, 
im
, 
MPC_RNDNN
);

264 i‡(
	`mp‰_gë_sj
 (
	`MPC_RE
(
z
), 
GMP_RNDN
Ë!
im
 ||

265 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
z
), 0) != 0)

266 
	`PRINT_ERROR
 ("mpc_£t_sj (2)", 
im
, 
z
);

268 
	`mpc_£t_sj_sj
 (
z
, 
im
, im, 
MPC_RNDNN
);

269 i‡(
	`mp‰_gë_sj
 (
	`MPC_RE
(
z
), 
GMP_RNDN
Ë!
im
 ||

270 
	`mp‰_gë_sj
 (
	`MPC_IM
(
z
), 
GMP_RNDN
Ë!
im
)

271 
	`PRINT_ERROR
 ("mpc_£t_sj_sj (2)", 
im
, 
z
);

276 
	`mpz_˛ór
 (
mpz
);

277 
	`mpq_˛ór
 (
mpq
);

278 
	`mpf_˛ór
 (
mpf
);

279 
	`mp‰_˛ór
 (
‰
);

280 
	`mpc_˛ór
 (
x
);

281 
	`mpc_˛ór
 (
z
);

282 
	}
}

285 
	$check_£t_°r
 (
mp_exp_t
 
exp_max
)

287 
mpc_t
 
ex≥˘ed
;

288 
mpc_t
 
gŸ
;

289 *
°r
;

291 
mp‰_¥ec_t
 
¥ec
;

292 
mp_exp_t
 
exp_mö
;

293 
ba£
;

295 
	`mpc_öô2
 (
ex≥˘ed
, 1024);

296 
	`mpc_öô2
 (
gŸ
, 1024);

298 
exp_mö
 = 
	`mp‰_gë_emö
 ();

299 i‡(
exp_max
 <= 0)

300 
exp_max
 = 
	`mp‰_gë_emax
 ();

301 i‡(
exp_max
 > 
	`mp‰_gë_emax
 ())

302 
exp_max
 = 
	`mp‰_gë_emax
();

303 i‡(-
exp_max
 > 
exp_mö
)

304 
exp_mö
 = - 
exp_max
;

306 
¥ec
 = 2;Örec < 1024;Örec += 7)

308 
	`mpc_£t_¥ec
 (
gŸ
, 
¥ec
);

309 
	`mpc_£t_¥ec
 (
ex≥˘ed
, 
¥ec
);

311 
ba£
 = 2 + (Ë
	`gmp_uøndomm_ui
 (
ønds
, 35);

314 
	`mp‰_£t_«n
 (
	`MPC_RE
 (
ex≥˘ed
));

315 
	`mp‰_£t_öf
 (
	`MPC_IM
 (
ex≥˘ed
), 
¥ec
 % 2 - 1);

316 
°r
 = 
	`mpc_gë_°r
 (
ba£
, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

317 i‡(
	`mp‰_«n_p
 (
	`MPC_RE
 (
gŸ
)) == 0

318 || 
	`mp‰_cmp
 (
	`MPC_IM
 (
gŸ
), MPC_IM (
ex≥˘ed
)) != 0)

320 
	`¥ötf
 ("Error: mpc_set_str o mpc_get_str != Id\n"

321 "ö ba£ %u wôh så=\"%s\"\n", 
ba£
, 
°r
);

322 
	`OUT
 (
ex≥˘ed
);

323 
	`¥ötf
 (" ");

324 
	`OUT
 (
gŸ
);

325 
	`exô
 (1);

327 
	`mpc_‰ì_°r
 (
°r
);

329 
	`ã°_deÁu…_øndom
 (
ex≥˘ed
, 
exp_mö
, 
exp_max
, 128, 25);

330 
°r
 = 
	`mpc_gë_°r
 (
ba£
, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

331 i‡(
	`mpc_£t_°r
 (
gŸ
, 
°r
, 
ba£
, 
MPC_RNDNN
) == -1

332 || 
	`mpc_cmp
 (
gŸ
, 
ex≥˘ed
) != 0)

334 
	`¥ötf
 ("Error: mpc_set_str o mpc_get_str != Id\n"

335 "ö ba£ %u wôh så=\"%s\"\n", 
ba£
, 
°r
);

336 
	`OUT
 (
ex≥˘ed
);

337 
	`¥ötf
 (" ");

338 
	`OUT
 (
gŸ
);

339 
	`exô
 (1);

341 
	`mpc_‰ì_°r
 (
°r
);

344 #ifde‡
HAVE_SETLOCALE


347 *
ﬁd_loˇÀ
;

349 
ﬁd_loˇÀ
 = 
	`£éoˇÀ
 (
LC_ALL
, "de_DE");

350 i‡(
ﬁd_loˇÀ
 !
NULL
)

352 
°r
 = 
	`mpc_gë_°r
 (10, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

353 i‡(
	`mpc_£t_°r
 (
gŸ
, 
°r
, 10, 
MPC_RNDNN
) == -1

354 || 
	`mpc_cmp
 (
gŸ
, 
ex≥˘ed
) != 0)

356 
	`¥ötf
 ("Error: mpc_set_str o mpc_get_str != Id\n"

357 "wôh så=\"%s\"\n", 
°r
);

358 
	`OUT
 (
ex≥˘ed
);

359 
	`¥ötf
 (" ");

360 
	`OUT
 (
gŸ
);

361 
	`exô
 (1);

363 
	`mpc_‰ì_°r
 (
°r
);

365 
	`£éoˇÀ
 (
LC_ALL
, 
ﬁd_loˇÀ
);

371 
	`mpc_£t_¥ec
 (
ex≥˘ed
, 37);

372 
	`mpc_£t_¥ec
 (
gŸ
, 37);

373 
	`mpc_£t_°r
 (
ex≥˘ed
, "921FC04EDp-35 ", 16, 
GMP_RNDN
);

374 
°r
 = 
	`mpc_gë_°r
 (10, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

375 i‡(
	`mpc_£t_°r
 (
gŸ
, 
°r
, 10, 
MPC_RNDNN
) == -1

376 || 
	`mpc_cmp
 (
gŸ
, 
ex≥˘ed
) != 0)

378 
	`¥ötf
 ("Error: mpc_set_str o mpc_get_str != Id\n"

379 "wôh så=\"%s\"\n", 
°r
);

380 
	`OUT
 (
ex≥˘ed
);

381 
	`¥ötf
 (" ");

382 
	`OUT
 (
gŸ
);

383 
	`exô
 (1);

385 
	`mpc_‰ì_°r
 (
°r
);

387 
°r
 = 
	`mpc_gë_°r
 (1, 0, 
ex≥˘ed
, 
MPC_RNDNN
);

388 i‡(
°r
 !
NULL
)

390 
	`¥ötf
 ("Error: mpc_get_str with base==1 should fail\n");

391 
	`exô
 (1);

394 
	`mpc_˛ór
 (
ex≥˘ed
);

395 
	`mpc_˛ór
 (
gŸ
);

396 
	}
}

399 
	$maö
 ()

401 
	`ã°_°¨t
 ();

403 
	`check_£t
 ();

404 
	`check_£t_°r
 (1024);

406 
	`ã°_íd
 ();

409 
	}
}

	@tests/tsin.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_sö
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "sin.dat");

32 
	`tgíîic
 (
f
, 2, 512, 7, 7);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tsinh.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_söh
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "sinh.dat");

32 
	`tgíîic
 (
f
, 2, 512, 7, 7);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tsqr.c

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~"mpc-ã°s.h
"

26 
cmpsqr
 (
mpc_§˝å
, 
mpc_∫d_t
);

27 
ã°sqr
 (, , 
mp_¥ec_t
, 
mpc_∫d_t
);

28 
•ecül
 ();

30 
	$cmpsqr
 (
mpc_§˝å
 
x
, 
mpc_∫d_t
 
∫d
)

43 
mpc_t
 
z
, 
t
, 
u
;

44 
öexa˘_z
, 
öexa˘_t
;

46 
	`mpc_öô2
 (
z
, 
	`MPC_MAX_PREC
 (
x
));

47 
	`mpc_öô2
 (
t
, 
	`MPC_MAX_PREC
 (
x
));

48 
	`mpc_öô2
 (
u
, 4 * 
	`MPC_MAX_PREC
 (
x
));

50 
öexa˘_z
 = 
	`mpc_sqr
 (
z
, 
x
, 
∫d
);

51 
öexa˘_t
 = 
	`mpc_mul
 (
t
, 
x
, x, 
∫d
);

53 i‡(
	`mpc_cmp
 (
z
, 
t
))

55 
	`Ârötf
 (
°dîr
, "sqránd mul differ forÑnd=(%s,%s) \nx=",

56 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

57 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

58 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

59 
	`Ârötf
 (
°dîr
, "\nmpc_sqr gives ");

60 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

61 
	`Ârötf
 (
°dîr
, "\nmpc_mul gives ");

62 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
t
, 
MPC_RNDNN
);

63 
	`Ârötf
 (
°dîr
, "\n");

64 
	`exô
 (1);

66 i‡(
öexa˘_z
 !
öexa˘_t
)

68 
	`Ârötf
 (
°dîr
, "TheÑeturn values of sqránd mul differ forÑnd=(%s,%s) \nx= ",

69 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

70 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

71 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

72 
	`Ârötf
 (
°dîr
, "\nx^2=");

73 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

74 
	`Ârötf
 (
°dîr
, "\nmpc_sq∏give†%i", 
öexa˘_z
);

75 
	`Ârötf
 (
°dîr
, "\nmpc_mu»give†%i", 
öexa˘_t
);

76 
	`Ârötf
 (
°dîr
, "\n");

77 
	`exô
 (1);

80 
	`mpc_£t
 (
t
, 
x
, 
MPC_RNDNN
);

81 
öexa˘_t
 = 
	`mpc_sqr
 (
t
,Å, 
∫d
);

82 i‡(
	`mpc_cmp
 (
z
, 
t
))

84 
	`Ârötf
 (
°dîr
, "sqránd sqr inÖlace differ forÑnd=(%s,%s) \nx=",

85 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

86 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

87 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

88 
	`Ârötf
 (
°dîr
, "\nmpc_sqr gives ");

89 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

90 
	`Ârötf
 (
°dîr
, "\nmpc_sqr inÖlace gives ");

91 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
t
, 
MPC_RNDNN
);

92 
	`Ârötf
 (
°dîr
, "\n");

93 
	`exô
 (1);

95 i‡(
öexa˘_z
 !
öexa˘_t
)

97 
	`Ârötf
 (
°dîr
, "TheÑeturn values of sqránd sqr inÖlace differ forÑnd=(%s,%s) \nx= ",

98 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

99 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

100 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

101 
	`Ârötf
 (
°dîr
, "\nx^2=");

102 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

103 
	`Ârötf
 (
°dîr
, "\nmpc_sq∏ give†%i", 
öexa˘_z
);

104 
	`Ârötf
 (
°dîr
, "\nmpc_sq∏öÖœ˚ give†%i", 
öexa˘_t
);

105 
	`Ârötf
 (
°dîr
, "\n");

106 
	`exô
 (1);

109 
	`mpc_sqr
 (
u
, 
x
, 
∫d
);

110 
	`mpc_£t
 (
t
, 
u
, 
∫d
);

111 i‡(
	`mpc_cmp
 (
z
, 
t
))

113 
	`Ârötf
 (
°dîr
, "rounding in sqr might be incorrect forÑnd=(%s,%s) \nx=",

114 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_RE
(
∫d
)),

115 
	`mp‰_¥öt_∫d_mode
(
	`MPC_RND_IM
(
∫d
)));

116 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
x
, 
MPC_RNDNN
);

117 
	`Ârötf
 (
°dîr
, "\nmpc_sqr gives ");

118 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
z
, 
MPC_RNDNN
);

119 
	`Ârötf
 (
°dîr
, "\nmpc_sqr quadrupleÖrecision gives ");

120 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
u
, 
MPC_RNDNN
);

121 
	`Ârötf
 (
°dîr
, "\nand isÑoundedÅo ");

122 
	`mpc_out_°r
 (
°dîr
, 2, 0, 
t
, 
MPC_RNDNN
);

123 
	`Ârötf
 (
°dîr
, "\n");

124 
	`exô
 (1);

127 
	`mpc_˛ór
 (
z
);

128 
	`mpc_˛ór
 (
t
);

129 
	`mpc_˛ór
 (
u
);

130 
	}
}

134 
	$ã°sqr
 (
a
, 
b
, 
mp_¥ec_t
 
¥ec
, 
mpc_∫d_t
 
∫d
)

136 
mpc_t
 
x
;

138 
	`mpc_öô2
 (
x
, 
¥ec
);

140 
	`mpc_£t_si_si
 (
x
, 
a
, 
b
, 
∫d
);

142 
	`cmpsqr
 (
x
, 
∫d
);

144 
	`mpc_˛ór
 (
x
);

145 
	}
}

149 
	$•ecül
 ()

151 
mpc_t
 
x
, 
z
;

152 
öexa˘
;

154 
	`mpc_öô2
 (
x
, 8);

155 
	`mpc_öô2
 (
z
, 8);

157 
	`mpc_£t_si_si
 (
x
, 4, 3, 
MPC_RNDNN
);

158 
öexa˘
 = 
	`mpc_sqr
 (
z
, 
x
, 
MPC_RNDNN
);

159 i‡(
	`MPC_INEX_RE
(
öexa˘
Ë|| 
	`MPC_INEX_IM
(inexact))

161 
	`Ârötf
 (
°dîr
, "Error: (4+3*I)^2 should beÉxact withÖrec=8\n");

162 
	`exô
 (1);

165 
	`mpc_£t_¥ec
 (
x
, 27);

166 
	`mp‰_£t_°r
 (
	`MPC_RE
(
x
), "1.11111011011000010101000000e-2", 2, 
GMP_RNDN
);

167 
	`mp‰_£t_°r
 (
	`MPC_IM
(
x
), "1.11010001010110111001110001e-3", 2, 
GMP_RNDN
);

169 
	`cmpsqr
 (
x
, 0);

171 
	`mpc_˛ór
 (
x
);

172 
	`mpc_˛ór
 (
z
);

173 
	}
}

176 
	$bugs
 ()

178 
mpc_t
 
z1
;

181 
	`mpc_öô2
 (
z1
, 2);

183 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
z1
), "0.11", 2, 
GMP_RNDN
);

184 
	`mp‰_mul_2si
 (
	`MPC_RE
 (
z1
), MPC_RE (z1), 
	`mp‰_gë_emax
 (), 
GMP_RNDN
);

185 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z1
), 0, 
GMP_RNDN
);

186 
	`mpc_c⁄j
 (
z1
, z1, 
MPC_RNDNN
);

187 
	`mpc_sqr
 (
z1
, z1, 
MPC_RNDNN
);

188 i‡(!
	`mp‰_öf_p
 (
	`MPC_RE
 (
z1
)Ë|| 
	`mp‰_signbô
 (MPC_RE (z1))

189 ||!
	`mp‰_zîo_p
 (
	`MPC_IM
 (
z1
)Ë|| !
	`mp‰_signbô
 (MPC_IM (z1)))

191 
	`¥ötf
 ("Error: Regression, bug 20081021Ñeproduced\n");

192 
	`OUT
 (
z1
);

193 
	`exô
 (1);

196 
	`mpc_˛ór
 (
z1
);

197 
	}
}

201 
	$bug20090930
 ()

203 
mpc_t
 
r›
, 
›
;

205 
	`mpc_öô2
 (
r›
, 3464);

206 
	`mpc_öô2
 (
›
, 866);

207 
	`mp‰_£t_°r
 (
	`MPC_RE
(
›
), "-2.5763c6519ef1510f8aÁ101a210b8030b1909cc17004db561a25d9b53e2c08c41c01e8bbac5af6299b9d8786030Ø14943d841798c8c369287942e4d4˚c42a60ab0922af931159805e631128e97f973754ad53972d5d320a651a3b4a667f0ef2b92dbd698d159c3642675140@192158913", 16, 
GMP_RNDN
);

208 
	`mp‰_£t_°r
 (
	`MPC_IM
(
›
), "-d.15f2d530934dd930d66e89d70762d2337a8f973dd6915eb6b532fd372fcc955df1d852632d4e46„64154˚da991a1302ˇf1b0ec622497e3e5724dd05b1c89a06e28d7e18e8af58f5ff4c9998cb31714688867524f41e0b31e847c1bf40de5127f858069998efd7c3e599080@192158893", 16, 
GMP_RNDN
);

209 
	`mpc_sqr
 (
r›
, 
›
, 
MPC_RNDNN
);

210 
	`mpc_˛ór
 (
r›
);

211 
	`mpc_˛ór
 (
›
);

212 
	}
}

216 
	$bug20091001
 ()

218 
mpc_t
 
r›
, 
›
;

220 
	`mpc_öô2
 (
r›
, 2256);

221 
	`mpc_öô2
 (
›
, 564);

222 
	`mp‰_£t_°r
 (
	`MPC_RE
(
›
), "c.87999bfd1cb1a64288881e214b7cf1af979863b23c030b79c4a8bebb39177967608388a2e4df527977e7755a25df8af8f72fdd6dd2f42bd00de83088b4e9b59˚85ˇf2e6b0c0@-184298749", 16, 
GMP_RNDN
);

223 
	`mp‰_£t_°r
 (
	`MPC_IM
(
›
), "-2.5109af459d4daf357e09475ec991cdc9b02c8f7dÁcdc060d2a24710d09c997f8´a6dbd46f10828c30b583fdcc90d7dcbb895689d594d3813db40784d2309e450d1fb6e38da8@-184298726", 16, 
GMP_RNDN
);

224 
	`mpc_sqr
 (
r›
, 
›
, 
MPC_RNDNN
);

225 
	`mpc_˛ór
 (
r›
);

226 
	`mpc_˛ór
 (
›
);

227 
	}
}

230 
	$maö
 ()

232 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_sqr
);

233 
	`ã°_°¨t
 ();

235 
	`bug20091001
 ();

236 
	`bug20090930
 ();

238 
	`•ecül
 ();

240 
	`ã°sqr
 (247, -65, 8, 24);

241 
	`ã°sqr
 (5, -896, 3, 2);

242 
	`ã°sqr
 (-3, -512, 2, 16);

243 
	`ã°sqr
 (266013312, 121990769, 27, 0);

244 
	`ã°sqr
 (170, 9, 8, 0);

245 
	`ã°sqr
 (768, 85, 8, 16);

246 
	`ã°sqr
 (145, 1816, 8, 24);

247 
	`ã°sqr
 (0, 1816, 8, 24);

248 
	`ã°sqr
 (145, 0, 8, 24);

250 
	`d©a_check
 (
f
, "sqr.dat");

251 
	`tgíîic
 (
f
, 2, 1024, 1, 0);

253 
	`bugs
 ();

255 
	`ã°_íd
 ();

258 
	}
}

	@tests/tsqrt.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_sqπ
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "sqrt.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 7, 256);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tstrtoc.c

22 
	~<°rög.h
>

23 
	~<°dlib.h
>

25 
	~"mpc-ã°s.h
"

27 
löe_numbî
;

28 
√xtch¨
;

29 *
∑th«me
;

32 c⁄° *
∫d_mode
[];

35 
	$check_fûe
 (c⁄° * 
fûe_«me
)

37 
FILE
 *
Â
;

38 
ã°_löe_numbî
;

40 
size_t
 
°r_Àn
 = 255;

41 *
°r
 = 
NULL
;

42 
size_t
 
r°r_Àn
 = 255;

43 *
r°r
 = 
NULL
;

44 *
íd
 = 
NULL
;

46 
ba£
;

47 
öex_ª
;

48 
öex_im
;

49 
mpc_t
 
ex≥˘ed
, 
gŸ
;

50 
mpc_∫d_t
 
∫d
 = 
MPC_RNDNN
;

51 
öex
 = 0, 
öex_ex≥˘ed
;

52 
known_signs_t
 
ks
 = {1, 1};

55 
Â
 = 
	`›í_d©a_fûe
 (
fûe_«me
);

58 
°r
 = (*Ë
	`mÆloc
 (
°r_Àn
);

59 i‡(
°r
 =
NULL
)

61 
	`¥ötf
 ("Cannotállocate memory\n");

62 
	`exô
 (1);

64 
r°r
 = (*Ë
	`mÆloc
 (
r°r_Àn
);

65 i‡(
r°r
 =
NULL
)

67 
	`¥ötf
 ("Cannotállocate memory\n");

68 
	`exô
 (1);

70 
	`mpc_öô2
 (
ex≥˘ed
, 53);

71 
	`mpc_öô2
 (
gŸ
, 53);

74 
löe_numbî
 = 1;

75 
√xtch¨
 = 
	`gëc
 (
Â
);

76 
√xtch¨
 !
EOF
)

78 
	`skù_whôe•a˚_commíts
 (
Â
);

81 
ã°_löe_numbî
 = 
löe_numbî
;

82 
	`ªad_ã∫¨y
 (
Â
, &
öex_ª
);

83 
	`ªad_ã∫¨y
 (
Â
, &
öex_im
);

84 
	`ªad_mpc
 (
Â
, 
ex≥˘ed
, 
NULL
);

85 i‡(
öex_ª
 =
TERNARY_ERROR
 || 
öex_im
 == TERNARY_ERROR)

86 
öex_ex≥˘ed
 = -1;

88 
öex_ex≥˘ed
 = 
	`MPC_INEX
 (
öex_ª
, 
öex_im
);

90 
°r_Àn
 = 
	`ªad_°rög
 (
Â
, &
°r
, str_len, "number string");

91 
r°r_Àn
 = 
	`ªad_°rög
 (
Â
, &
r°r
,Ñstr_len, "stringÑemainder");

92 
	`ªad_öt
 (
Â
, &
ba£
, "base");

93 
	`ªad_mpc_roundög_mode
 (
Â
, &
∫d
);

96 
	`mp‰_£t_¥ec
 (
	`MPC_RE
 (
gŸ
), 
	`MPC_PREC_RE
 (
ex≥˘ed
));

97 
	`mp‰_£t_¥ec
 (
	`MPC_IM
 (
gŸ
), 
	`MPC_PREC_IM
 (
ex≥˘ed
));

98 
öex
 = 
	`mpc_°πoc
 (
gŸ
, 
°r
, &
íd
, 
ba£
, 
∫d
);

101 i‡(
öex
 !
öex_ex≥˘ed


102 || !
	`ßme_mpc_vÆue
 (
gŸ
, 
ex≥˘ed
, 
ks
)

103 || 
	`°rcmp
 (
íd
, 
r°r
) != 0)

105 
	`¥ötf
 ("mpc_strtoc(str) failed (line %lu)\nwith base=%dánd "

106 "roundög modê%s\n", 
ã°_löe_numbî
, 
ba£
,

107 
∫d_mode
[
∫d
]);

108 i‡(
öex
 !
	`MPC_INEX
 (
öex_ª
, 
öex_im
))

109 
	`¥ötf
 ("ternary value: got %s,Éxpected (%s, %s)\n",

110 
	`MPC_INEX_STR
 (
öex
),

111 (
öex_ª
 == +1 ? "+1" : (inex_re == -1 ? "-1" : "0")),

112 (
öex_im
 == +1 ? "+1" : (inex_im == -1 ? "-1" : "0")));

113 
	`¥ötf
 ("°∏\"%s\"\n", 
°r
);

114 i‡(
	`°rcmp
 (
íd
, 
r°r
) != 0)

115 
	`¥ötf
 ("stringÑemainderÉxpected \"%s\"\n"

117 
r°r
, 
íd
);

120 
	`¥ötf
 (" ");

121 
	`OUT
 (
gŸ
);

122 
	`OUT
 (
ex≥˘ed
);

124 
	`exô
 (1);

127 
íd
 = 
NULL
;

130 
	`mpc_˛ór
 (
ex≥˘ed
);

131 
	`mpc_˛ór
 (
gŸ
);

132 i‡(
°r
 !
NULL
)

133 
	`‰ì
 (
°r
);

134 i‡(
r°r
 !
NULL
)

135 
	`‰ì
 (
r°r
);

136 
	`˛o£_d©a_fûe
 (
Â
);

137 
	}
}

140 
	$check_nuŒ
 ()

142 
öex
;

143 *
íd
;

144 
mpc_t
 
z
;

146 
	`mpc_öô2
 (
z
, 53);

148 
öex
 = 
	`mpc_°πoc
 (
z
, 
NULL
, &
íd
, 10, 
MPC_RNDNN
);

149 i‡(
íd
 !
NULL
 || 
öex
 !-1 || 
	`mp‰_«n_p
 (
	`MPC_RE
 (
z
)) == 0

150 || 
	`mp‰_«n_p
 (
	`MPC_IM
 (
z
)) == 0)

152 
	`¥ötf
 ("Error: mpc_strtoc(z, NULL) withá NULLÖointer should fail"

154 
	`OUT
 (
z
);

155 
	`exô
 (1);

158 
	`mpc_˛ór
 (
z
);

159 
	}
}

162 
	$maö
 ()

164 
	`check_nuŒ
 ();

165 
	`check_fûe
 ("strtoc.dat");

167 
	}
}

	@tests/tsub.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCC
, 
f
, 
mpc_sub
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "sub.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tsub_fr.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCF
, 
f
, 
mpc_sub_‰
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "sub_fr.dat");

32 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tsub_ui.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CCU
, 
f
, 
mpc_sub_ui
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

33 
	`ã°_íd
 ();

36 
	}
}

	@tests/ttan.c

22 
	~<°dlib.h
>

23 
	~"mpc-ã°s.h
"

26 
	$ã°_Áûed
 (
mpc_t
 
›
, mpc_à
gë
, mpc_à
ex≥˘ed
)

28 
	`¥ötf
 ("mpc_tan(op) failed\n with ");

29 
	`OUT
 (
›
);

30 
	`¥ötf
 (" ");

31 
	`OUT
 (
gë
);

32 
	`OUT
 (
ex≥˘ed
);

33 
	`exô
 (1);

34 
	}
}

37 
	$puª_ªÆ_¨gumít
 ()

41 
mp‰_t
 
x
;

42 
mp‰_t
 
èn_x
;

43 
mpc_t
 
z
;

44 
mpc_t
 
èn_z
;

46 
	`mp‰_öô2
 (
x
, 79);

47 
	`mp‰_öô2
 (
èn_x
, 113);

48 
	`mpc_öô2
 (
z
, 79);

49 
	`mpc_öô2
 (
èn_z
, 113);

52 
	`mpc_£t_ui_ui
 (
z
, 1, 0, 
MPC_RNDNN
);

53 
	`mp‰_£t_ui
 (
x
, 1, 
GMP_RNDN
);

54 
	`mp‰_èn
 (
èn_x
, 
x
, 
GMP_RNDN
);

55 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

56 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
èn_z
), 
èn_x
) != 0

57 || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
èn_z
)Ë|| 
	`mp‰_signbô
 (MPC_IM (tan_z)))

59 
	`¥ötf
 ("mpc_tan(1 + i * 0) failed\n");

60 
	`exô
 (1);

64 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

65 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

66 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
èn_z
), 
èn_x
) != 0

67 || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
èn_z
)Ë|| !
	`mp‰_signbô
 (MPC_IM (tan_z)))

69 
	`¥ötf
 ("mpc_tan(1 - i * 0) failed\n");

70 
	`exô
 (1);

74 
	`mp‰_c⁄°_pi
 (
x
, 
GMP_RNDN
);

75 
	`mp‰_div_2ui
 (
x
, x, 1, 
GMP_RNDN
);

76 
	`mp‰_£t
 (
	`MPC_RE
 (
z
), 
x
, 
GMP_RNDN
);

77 
	`mp‰_£t_ui
 (
	`MPC_IM
 (
z
), 0, 
GMP_RNDN
);

78 
	`mp‰_èn
 (
èn_x
, 
x
, 
GMP_RNDN
);

79 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

80 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
èn_z
), 
èn_x
) != 0

81 || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
èn_z
)Ë|| 
	`mp‰_signbô
 (MPC_IM (tan_z)))

83 
	`¥ötf
 ("mpc_tan(Pi/2 + i * 0) failed\n");

84 
	`exô
 (1);

88 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

89 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

90 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
èn_z
), 
èn_x
) != 0

91 || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
èn_z
)Ë|| !
	`mp‰_signbô
 (MPC_IM (tan_z)))

93 
	`¥ötf
 ("mpc_tan(Pi/2 - i * 0) failed\n");

94 
	`exô
 (1);

98 
	`mp‰_√g
 (
x
, x, 
GMP_RNDN
);

99 
	`mpc_√g
 (
z
, z, 
MPC_RNDNN
);

100 
	`mp‰_èn
 (
èn_x
, 
x
, 
GMP_RNDN
);

101 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

102 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
èn_z
), 
èn_x
) != 0

103 || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
èn_z
)Ë|| 
	`mp‰_signbô
 (MPC_IM (tan_z)))

105 
	`¥ötf
 ("mpc_tan(-Pi/2 + i * 0) failed\n");

106 
	`exô
 (1);

110 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

111 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

112 i‡(
	`mp‰_cmp
 (
	`MPC_RE
 (
èn_z
), 
èn_x
) != 0

113 || !
	`mp‰_zîo_p
 (
	`MPC_IM
 (
èn_z
)Ë|| !
	`mp‰_signbô
 (MPC_IM (tan_z)))

115 
	`¥ötf
 ("mpc_tan(-Pi/2 - i * 0) failed\n");

116 
	`exô
 (1);

119 
	`mpc_˛ór
 (
èn_z
);

120 
	`mpc_˛ór
 (
z
);

121 
	`mp‰_˛ór
 (
èn_x
);

122 
	`mp‰_˛ór
 (
x
);

123 
	}
}

126 
	$puª_imagö¨y_¨gumít
 ()

130 
mp‰_t
 
y
;

131 
mp‰_t
 
ènh_y
;

132 
mpc_t
 
z
;

133 
mpc_t
 
èn_z
;

134 
mp_¥ec_t
 
¥ec
 = (mp_prec_t) 111;

136 
	`mp‰_öô2
 (
y
, 2);

137 
	`mp‰_öô2
 (
ènh_y
, 
¥ec
);

138 
	`mpc_öô2
 (
z
, 2);

139 
	`mpc_öô2
 (
èn_z
, 
¥ec
);

142 
	`mpc_£t_ui_ui
 (
z
, 0, 1, 
MPC_RNDNN
);

143 
	`mp‰_£t_ui
 (
y
, 1, 
GMP_RNDN
);

144 
	`mp‰_ènh
 (
ènh_y
, 
y
, 
GMP_RNDN
);

145 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

146 i‡(
	`mp‰_cmp
 (
	`MPC_IM
 (
èn_z
), 
ènh_y
) != 0

147 || !
	`mp‰_zîo_p
 (
	`MPC_RE
 (
èn_z
)Ë|| 
	`mp‰_signbô
 (MPC_RE (tan_z)))

149 
mpc_t
 
c99
;

151 
	`mpc_öô2
 (
c99
, 
¥ec
);

152 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
c99
), 0, 
GMP_RNDN
);

153 
	`mp‰_£t
 (
	`MPC_IM
 (
c99
), 
ènh_y
, 
GMP_RNDN
);

155 
	`ã°_Áûed
 (
z
, 
èn_z
, 
c99
);

159 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

160 
	`mp‰_√g
 (
ènh_y
,Å™h_y, 
GMP_RNDN
);

161 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

162 i‡(
	`mp‰_cmp
 (
	`MPC_IM
 (
èn_z
), 
ènh_y
) != 0

163 || !
	`mp‰_zîo_p
 (
	`MPC_RE
 (
èn_z
)Ë|| 
	`mp‰_signbô
 (MPC_RE (tan_z)))

165 
mpc_t
 
c99
;

167 
	`mpc_öô2
 (
c99
, 
¥ec
);

168 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
c99
), 0, 
GMP_RNDN
);

169 
	`mp‰_£t
 (
	`MPC_IM
 (
c99
), 
ènh_y
, 
GMP_RNDN
);

171 
	`ã°_Áûed
 (
z
, 
èn_z
, 
c99
);

175 
	`mpc_√g
 (
z
, z, 
MPC_RNDNN
);

176 
	`mp‰_√g
 (
ènh_y
,Å™h_y, 
GMP_RNDN
);

177 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

178 i‡(
	`mp‰_cmp
 (
	`MPC_IM
 (
èn_z
), 
ènh_y
) != 0

179 || !
	`mp‰_zîo_p
 (
	`MPC_RE
 (
èn_z
)Ë|| !
	`mp‰_signbô
 (MPC_RE (tan_z)))

181 
mpc_t
 
c99
;

183 
	`mpc_öô2
 (
c99
, 
¥ec
);

184 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
c99
), 0, 
GMP_RNDN
);

185 
	`mp‰_£t
 (
	`MPC_IM
 (
c99
), 
ènh_y
, 
GMP_RNDN
);

187 
	`ã°_Áûed
 (
z
, 
èn_z
, 
c99
);

191 
	`mpc_c⁄j
 (
z
, z, 
MPC_RNDNN
);

192 
	`mp‰_√g
 (
ènh_y
,Å™h_y, 
GMP_RNDN
);

193 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

194 i‡(
	`mp‰_cmp
 (
	`MPC_IM
 (
èn_z
), 
ènh_y
) != 0

195 || !
	`mp‰_zîo_p
 (
	`MPC_RE
 (
èn_z
)Ë|| !
	`mp‰_signbô
 (MPC_RE (tan_z)))

197 
mpc_t
 
c99
;

199 
	`mpc_öô2
 (
c99
, 
¥ec
);

200 
	`mp‰_£t_ui
 (
	`MPC_RE
 (
c99
), 0, 
GMP_RNDN
);

201 
	`mp‰_£t
 (
	`MPC_IM
 (
c99
), 
ènh_y
, 
GMP_RNDN
);

203 
	`ã°_Áûed
 (
z
, 
èn_z
, 
c99
);

206 
	`mpc_˛ór
 (
èn_z
);

207 
	`mpc_˛ór
 (
z
);

208 
	`mp‰_˛ór
 (
ènh_y
);

209 
	`mp‰_˛ór
 (
y
);

210 
	}
}

213 
	$check_53
 ()

215 
mpc_t
 
z
;

216 
mpc_t
 
èn_z
;

217 
mpc_t
 
t
;

219 
	`mpc_öô2
 (
z
, 53);

220 
	`mpc_öô2
 (
èn_z
, 53);

221 
	`mpc_öô2
 (
t
, 53);

226 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
z
), "3243F6A8885A30p-53", 16, 
GMP_RNDN
);

227 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
z
), "11A62633145C07p-106", 16, 
GMP_RNDN
);

228 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
t
), "1D02967C31CDB5", 16, 
GMP_RNDN
);

229 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
t
), "1D02967C31CDB5", 16, 
GMP_RNDN
);

230 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

231 i‡(
	`mpc_cmp
 (
èn_z
, 
t
) != 0)

232 
	`ã°_Áûed
 (
z
, 
èn_z
, 
t
);

234 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
t
), "1D02967C31CDB4", 16, 
GMP_RNDN
);

235 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDDU
);

236 i‡(
	`mpc_cmp
 (
èn_z
, 
t
) != 0)

237 
	`ã°_Áûed
 (
z
, 
èn_z
, 
t
);

239 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
t
), "1D02967C31CDB4", 16, 
GMP_RNDN
);

240 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDZD
);

241 i‡(
	`mpc_cmp
 (
èn_z
, 
t
) != 0)

242 
	`ã°_Áûed
 (
z
, 
èn_z
, 
t
);

246 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
z
), "1921FB54442D19p-52", 16, 
GMP_RNDN
);

247 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
z
), "-172CECE675D1FDp-105", 16, 
GMP_RNDN
);

248 
	`mp‰_£t_°r
 (
	`MPC_RE
 (
t
), "-B0BD0AA4A3B3D", 16, 
GMP_RNDN
);

249 
	`mp‰_£t_°r
 (
	`MPC_IM
 (
t
), "-B0BD0AA4A3B3D", 16, 
GMP_RNDN
);

250 
	`mpc_èn
 (
èn_z
, 
z
, 
MPC_RNDNN
);

251 i‡(
	`mpc_cmp
 (
èn_z
, 
t
) != 0)

252 
	`ã°_Áûed
 (
z
, 
èn_z
, 
t
);

254 
	`mpc_˛ór
 (
t
);

255 
	`mpc_˛ór
 (
èn_z
);

256 
	`mpc_˛ór
 (
z
);

257 
	}
}

260 
	$maö
 ()

262 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_èn
);

264 
	`ã°_°¨t
 ();

266 
	`d©a_check
 (
f
, "tan.dat");

267 
	`tgíîic
 (
f
, 2, 512, 7, 4);

269 
	`puª_ªÆ_¨gumít
 ();

270 
	`puª_imagö¨y_¨gumít
 ();

271 
	`check_53
 ();

273 
	`ã°_íd
 ();

276 
	}
}

	@tests/ttanh.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CC
, 
f
, 
mpc_ènh
);

29 
	`ã°_°¨t
 ();

31 
	`d©a_check
 (
f
, "tanh.dat");

32 
	`tgíîic
 (
f
, 2, 512, 7, 4);

34 
	`ã°_íd
 ();

37 
	}
}

	@tests/tui_div.c

22 
	~"mpc-ã°s.h
"

25 
	$•ecül
 ()

27 
mpc_t
 
a
, 
b
;

29 
	`mpc_öô2
 (
a
, 10);

30 
	`mpc_öô2
 (
b
, 10);

32 
	`mpc_£t_ui_ui
 (
a
, 2, 4, 
MPC_RNDNN
);

33 
	`mpc_ui_div
 (
b
, 10, 
a
, 
MPC_RNDNN
);

34 i‡(
	`mpc_cmp_si_si
 (
b
, 1, -2) != 0)

36 
	`¥ötf
 ("10/(2,4) failed\n");

37 
	`¥ötf
 ("expected (1,-2)\n");

38 
	`¥ötf
 ("got ");

39 
	`mpc_out_°r
 (
°dout
, 10, 0, 
b
, 
MPC_RNDNN
);

40 
	`¥ötf
 ("\n");

41 
	`exô
 (1);

45 
	`mp‰_£t_°r
 (
	`MPC_RE
(
a
), "-1", 10, 
GMP_RNDN
);

46 
	`mp‰_£t_°r
 (
	`MPC_IM
(
a
), "-0", 10, 
GMP_RNDN
);

47 
	`mpc_ui_div
 (
b
, 0, 
a
, 
MPC_RNDNN
);

48 i‡((
	`mpc_cmp_si_si
 (
b
, 0, 0Ë!0Ë|| (
	`MPFR_SIGN
 (
	`MPC_RE
(b)) > 0)

49 || (
	`MPFR_SIGN
 (
	`MPC_IM
(
b
)) < 0))

51 
	`¥ötf
 ("0/(-1,-0) failed\n");

52 
	`¥ötf
 ("expected (-0,+0)\n");

53 
	`¥ötf
 ("got ");

54 
	`mpc_out_°r
 (
°dout
, 10, 0, 
b
, 
MPC_RNDNN
);

55 
	`¥ötf
 ("\n");

56 
	`exô
 (1);

59 
	`mpc_£t_ui_ui
 (
a
, 1, 0, 
MPC_RNDNN
);

60 
	`mpc_ui_div
 (
b
, 1, 
a
, 
MPC_RNDNN
);

61 i‡(
	`mpc_cmp_si_si
 (
b
, 1, 0) != 0)

63 
	`¥ötf
 ("1/(1,0) failed\n");

64 
	`¥ötf
 ("expected (1,0)\n");

65 
	`¥ötf
 ("got ");

66 
	`mpc_out_°r
 (
°dout
, 10, 0, 
b
, 
MPC_RNDNN
);

67 
	`¥ötf
 ("\n");

68 
	`exô
 (1);

72 
	`mpc_£t_ui_ui
 (
a
, 4, 0, 
MPC_RNDNN
);

73 
	`mpc_ui_div
 (
b
, 1, 
a
, 
MPC_RNDNN
);

74 i‡(
	`mp‰_cmp_ui_2exp
 (
	`MPC_RE
(
b
), 1, -2) != 0 ||

75 
	`mp‰_cmp_ui
 (
	`MPC_IM
(
b
), 0Ë!0 || 
	`mp‰_signbô
 (MPC_IM(b)) != 0)

77 
	`¥ötf
 ("1/(4,0) failed\n");

78 
	`¥ötf
 ("expected (1/4,0)\n");

79 
	`¥ötf
 ("got ");

80 
	`mpc_out_°r
 (
°dout
, 10, 0, 
b
, 
MPC_RNDNN
);

81 
	`¥ötf
 ("\n");

82 
	`exô
 (1);

85 
	`mpc_˛ór
 (
a
);

86 
	`mpc_˛ór
 (
b
);

87 
	}
}

90 
	$maö
 ()

92 
	`DECL_FUNC
 (
CUC
, 
f
, 
mpc_ui_div
);

94 
	`ã°_°¨t
 ();

96 
	`•ecül
 ();

98 
	`tgíîic
 (
f
, 2, 1024, 7, 4096);

100 
	`ã°_íd
 ();

103 
	}
}

	@tests/tui_ui_sub.c

22 
	~"mpc-ã°s.h
"

25 
	$maö
 ()

27 
	`DECL_FUNC
 (
CUUC
, 
f
, 
mpc_ui_ui_sub
);

29 
	`ã°_°¨t
 ();

31 
	`tgíîic
 (
f
, 2, 1024, 7, -1);

33 
	`ã°_íd
 ();

36 
	}
}

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/gmp.h

33 #ifde‡
gmp_wøµî_h


36 
	#gmp_wøµî_h


	)

38 #i‡
deföed
(
__Æpha__
)

39 
	~"gmp-Æpha.h
"

40 #ñi‡
deföed
(
__¨m__
)

41 
	~"gmp-¨m.h
"

42 #ñi‡
deföed
(
__avr32__
)

43 
	~"gmp-avr32.h
"

44 #ñi‡
deföed
(
__hµa__
)

45 
	~"gmp-hµa.h
"

46 #ñi‡
deföed
(
__i386__
)

47 
	~"gmp-i386.h
"

48 #ñi‡
deföed
(
__ü64__
)

49 
	~"gmp-ü64.h
"

50 #ñi‡
deföed
(
__m68k__
)

51 
	~"gmp-m68k.h
"

52 #ñi‡
deföed
(
__mùs__
)

53 
	~"gmp-mùs.h
"

54 #ñi‡
deföed
(
__powîpc64__
)

55 
	~"gmp-µc64.h
"

56 #ñi‡
deföed
(
__powîpc__
)

57 
	~"gmp-µc.h
"

58 #ñi‡
deföed
(
__s390x__
)

59 
	~"gmp-s390x.h
"

60 #ñi‡
deföed
(
__s390__
)

61 
	~"gmp-s390.h
"

62 #ñi‡
deföed
(
__sh__
)

63 
	~"gmp-sh.h
"

64 #ñi‡
deföed
(
__•¨c__
)

65 
	~"gmp-•¨c.h
"

66 #ñi‡
deföed
(
__x86_64__
)

67 
	~"gmp-x86_64.h
"

72 #unde‡
gmp_wøµî_h


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/mpc.h

22 #i‚de‡
__MPC_H


23 
	#__MPC_H


	)

25 
	~"gmp.h
"

26 
	~"mp‰.h
"

29 #i‚de‡
mp‰_exp_t


30 
	#mp‰_exp_t
 
mp_exp_t


	)

34 
	#MPC_VERSION_MAJOR
 0

	)

35 
	#MPC_VERSION_MINOR
 9

	)

36 
	#MPC_VERSION_PATCHLEVEL
 0

	)

37 
	#MPC_VERSION_STRING
 "0.9"

	)

40 
	#MPC_VERSION_NUM
(
a
,
b
,
c
Ë((◊Ë<< 16LË| ((bË<< 8Ë| (c))

	)

41 
	#MPC_VERSION
 \

42 
	`MPC_VERSION_NUM
(
MPC_VERSION_MAJOR
,
MPC_VERSION_MINOR
,
MPC_VERSION_PATCHLEVEL
)

	)

45 #i‡
deföed
 (
_GMP_H_HAVE_FILE
)

46 
	#_MPC_H_HAVE_FILE
 1

	)

50 #i‡
deföed
 (
INTMAX_C
Ë&& deföed (
UINTMAX_C
)

51 
	#_MPC_H_HAVE_INTMAX_T
 1

	)

55 #i‡
deföed
 (
_COMPLEX_H
)

56 
	#_MPC_H_HAVE_COMPLEX
 1

	)

62 
	#MPC_INEX_POS
(
öex
Ë(((öexË< 0Ë? 2 : ((öexË=0Ë? 0 : 1)

	)

64 
	#MPC_INEX_NEG
(
öex
Ë(((öexË=2Ë? -1 : ((öexË=0Ë? 0 : 1)

	)

71 
	#MPC_INEX
(
öex_ª
, 
öex_im
) \

72 (
	`MPC_INEX_POS
(
öex_ª
Ë| (MPC_INEX_POS(
öex_im
Ë<< 2))

	)

73 
	#MPC_INEX_RE
(
öex
Ë
	`MPC_INEX_NEG
((öexË& 3)

	)

74 
	#MPC_INEX_IM
(
öex
Ë
	`MPC_INEX_NEG
((öexË>> 2)

	)

78 
	#MPC_INEX12
(
öex1
, 
öex2
Ë(öex1 | (öex2 << 4))

	)

79 
	#MPC_INEX1
(
öex
Ë(öex & 15)

	)

80 
	#MPC_INEX2
(
öex
Ë(öex >> 4)

	)

86 
	tmpc_∫d_t
;

88 
	#RNDC
(
r1
,
r2
Ë((()‘1)Ë+ (()‘2Ë<< 4))

	)

89 
	#MPC_RND_RE
(
x
Ë((
mp‰_∫d_t
)((xË& 0x0F))

	)

90 
	#MPC_RND_IM
(
x
Ë((
mp‰_∫d_t
)((xË>> 4))

	)

92 
	#MPC_RNDNN
 
	`RNDC
(
GMP_RNDN
,GMP_RNDN)

	)

93 
	#MPC_RNDNZ
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDZ
)

	)

94 
	#MPC_RNDNU
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDU
)

	)

95 
	#MPC_RNDND
 
	`RNDC
(
GMP_RNDN
,
GMP_RNDD
)

	)

97 
	#MPC_RNDZN
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDN
)

	)

98 
	#MPC_RNDZZ
 
	`RNDC
(
GMP_RNDZ
,GMP_RNDZ)

	)

99 
	#MPC_RNDZU
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDU
)

	)

100 
	#MPC_RNDZD
 
	`RNDC
(
GMP_RNDZ
,
GMP_RNDD
)

	)

102 
	#MPC_RNDUN
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDN
)

	)

103 
	#MPC_RNDUZ
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDZ
)

	)

104 
	#MPC_RNDUU
 
	`RNDC
(
GMP_RNDU
,GMP_RNDU)

	)

105 
	#MPC_RNDUD
 
	`RNDC
(
GMP_RNDU
,
GMP_RNDD
)

	)

107 
	#MPC_RNDDN
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDN
)

	)

108 
	#MPC_RNDDZ
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDZ
)

	)

109 
	#MPC_RNDDU
 
	`RNDC
(
GMP_RNDD
,
GMP_RNDU
)

	)

110 
	#MPC_RNDDD
 
	`RNDC
(
GMP_RNDD
,GMP_RNDD)

	)

116 
mp‰_t
 
	mª
;

117 
mp‰_t
 
	mim
;

119 
	t__mpc_°ru˘
;

121 
__mpc_°ru˘
 
	tmpc_t
[1];

122 
__mpc_°ru˘
 *
	tmpc_±r
;

123 
__gmp_c⁄°
 
	t__mpc_°ru˘
 *
	tmpc_§˝å
;

126 #i‡
deföed
 (
__GMP_PROTO
)

127 
	#__MPC_PROTO
 
__GMP_PROTO


	)

128 #ñi‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

129 
	#__MPC_PROTO
(
x
Ë
	)
x

131 
	#__MPC_PROTO
(
x
Ë()

	)

137 #i‡
deföed
(
__MPC_WITHIN_MPC
Ë&& 
__GMP_LIBGMP_DLL


138 
	#__MPC_DECLSPEC
 
__GMP_DECLSPEC_EXPORT


	)

140 
	#__MPC_DECLSPEC
 
__GMP_DECLSPEC


	)

143 #i‡
deföed
 (
__˝lu•lus
)

147 
__MPC_DECLSPEC
 
mpc_add
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

148 
__MPC_DECLSPEC
 
mpc_add_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

149 
__MPC_DECLSPEC
 
mpc_add_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

150 
__MPC_DECLSPEC
 
mpc_add_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

151 
__MPC_DECLSPEC
 
mpc_sub
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

152 
__MPC_DECLSPEC
 
mpc_sub_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

153 
__MPC_DECLSPEC
 
mpc_‰_sub
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_§˝å
, 
mpc_∫d_t
));

154 
__MPC_DECLSPEC
 
mpc_sub_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

155 
__MPC_DECLSPEC
 
mpc_ui_ui_sub
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_§˝å
, 
mpc_∫d_t
));

156 
__MPC_DECLSPEC
 
mpc_mul
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

157 
__MPC_DECLSPEC
 
mpc_mul_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

158 
__MPC_DECLSPEC
 
mpc_mul_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

159 
__MPC_DECLSPEC
 
mpc_mul_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

160 
__MPC_DECLSPEC
 
mpc_mul_i
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

161 
__MPC_DECLSPEC
 
mpc_sqr
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

162 
__MPC_DECLSPEC
 
mpc_div
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

163 
__MPC_DECLSPEC
 
mpc_pow
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, 
mpc_∫d_t
));

164 
__MPC_DECLSPEC
 
mpc_pow_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

165 
__MPC_DECLSPEC
 
mpc_pow_ld
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

166 
__MPC_DECLSPEC
 
mpc_pow_d
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

167 
__MPC_DECLSPEC
 
mpc_pow_si
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

168 
__MPC_DECLSPEC
 
mpc_pow_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

169 
__MPC_DECLSPEC
 
mpc_pow_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpz_§˝å
, 
mpc_∫d_t
));

170 
__MPC_DECLSPEC
 
mpc_div_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mp‰_§˝å
, 
mpc_∫d_t
));

171 
__MPC_DECLSPEC
 
mpc_‰_div
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_§˝å
, 
mpc_∫d_t
));

172 
__MPC_DECLSPEC
 
mpc_div_ui
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

173 
__MPC_DECLSPEC
 
mpc_ui_div
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_§˝å
, 
mpc_∫d_t
));

174 
__MPC_DECLSPEC
 
mpc_div_2exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

175 
__MPC_DECLSPEC
 
mpc_mul_2exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, , 
mpc_∫d_t
));

176 
__MPC_DECLSPEC
 
mpc_c⁄j
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

177 
__MPC_DECLSPEC
 
mpc_√g
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

178 
__MPC_DECLSPEC
 
mpc_n‹m
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

179 
__MPC_DECLSPEC
 
mpc_abs
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

180 
__MPC_DECLSPEC
 
mpc_sqπ
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

181 
__MPC_DECLSPEC
 
mpc_£t
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

182 
__MPC_DECLSPEC
 
mpc_£t_d
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

183 
__MPC_DECLSPEC
 
mpc_£t_d_d
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

184 
__MPC_DECLSPEC
 
mpc_£t_ld
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

185 
__MPC_DECLSPEC
 
mpc_£t_ld_ld
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

186 
__MPC_DECLSPEC
 
mpc_£t_f
 
__MPC_PROTO
 ((
mpc_±r
, 
mpf_§˝å
, 
mpc_∫d_t
));

187 
__MPC_DECLSPEC
 
mpc_£t_f_f
 
__MPC_PROTO
 ((
mpc_±r
, 
mpf_§˝å
, mpf_§˝å, 
mpc_∫d_t
));

188 
__MPC_DECLSPEC
 
mpc_£t_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, 
mpc_∫d_t
));

189 
__MPC_DECLSPEC
 
mpc_£t_‰_‰
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_§˝å
, mp‰_§˝å, 
mpc_∫d_t
));

190 
__MPC_DECLSPEC
 
mpc_£t_q
 
__MPC_PROTO
 ((
mpc_±r
, 
mpq_§˝å
, 
mpc_∫d_t
));

191 
__MPC_DECLSPEC
 
mpc_£t_q_q
 
__MPC_PROTO
 ((
mpc_±r
, 
mpq_§˝å
, mpq_§˝å, 
mpc_∫d_t
));

192 
__MPC_DECLSPEC
 
mpc_£t_si
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

193 
__MPC_DECLSPEC
 
mpc_£t_si_si
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

194 
__MPC_DECLSPEC
 
mpc_£t_ui
 
__MPC_PROTO
 ((
mpc_±r
, , 
mpc_∫d_t
));

195 
__MPC_DECLSPEC
 
mpc_£t_ui_ui
 
__MPC_PROTO
 ((
mpc_±r
, , , 
mpc_∫d_t
));

196 
__MPC_DECLSPEC
 
mpc_£t_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpz_§˝å
, 
mpc_∫d_t
));

197 
__MPC_DECLSPEC
 
mpc_£t_z_z
 
__MPC_PROTO
 ((
mpc_±r
, 
mpz_§˝å
, mpz_§˝å, 
mpc_∫d_t
));

198 
__MPC_DECLSPEC
 
mpc_sw≠
 
__MPC_PROTO
 ((
mpc_±r
, mpc_ptr));

199 
__MPC_DECLSPEC
 
mpc_fma
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, mpc_§˝å, mpc_§˝å, 
mpc_∫d_t
));

201 #ifde‡
_MPC_H_HAVE_INTMAX_T


202 
__MPC_DECLSPEC
 
mpc_£t_sj
 
__MPC_PROTO
 ((
mpc_±r
, 
ötmax_t
, 
mpc_∫d_t
));

203 
__MPC_DECLSPEC
 
mpc_£t_uj
 
__MPC_PROTO
 ((
mpc_±r
, 
uötmax_t
, 
mpc_∫d_t
));

204 
__MPC_DECLSPEC
 
mpc_£t_sj_sj
 
__MPC_PROTO
 ((
mpc_±r
, 
ötmax_t
, i¡max_t, 
mpc_∫d_t
));

205 
__MPC_DECLSPEC
 
mpc_£t_uj_uj
 
__MPC_PROTO
 ((
mpc_±r
, 
uötmax_t
, uötmax_t, 
mpc_∫d_t
));

208 #ifde‡
_MPC_H_HAVE_COMPLEX


209 
__MPC_DECLSPEC
 
mpc_£t_dc
 
__MPC_PROTO
 ((
mpc_±r
, 
_Com∂ex
, 
mpc_∫d_t
));

210 
__MPC_DECLSPEC
 
mpc_£t_ldc
 
__MPC_PROTO
 ((
mpc_±r
, 
_Com∂ex
, 
mpc_∫d_t
));

211 
__MPC_DECLSPEC
 
_Com∂ex
 
mpc_gë_dc
 
__MPC_PROTO
 ((
mpc_§˝å
, 
mpc_∫d_t
));

212 
__MPC_DECLSPEC
 
_Com∂ex
 
mpc_gë_ldc
 
__MPC_PROTO
 ((
mpc_§˝å
, 
mpc_∫d_t
));

215 
__MPC_DECLSPEC
 
mpc_£t_«n
 
__MPC_PROTO
 ((
mpc_±r
));

217 
__MPC_DECLSPEC
 
mpc_ªÆ
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

218 
__MPC_DECLSPEC
 
mpc_imag
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

219 
__MPC_DECLSPEC
 
mpc_¨g
 
__MPC_PROTO
 ((
mp‰_±r
, 
mpc_§˝å
, 
mp‰_∫d_t
));

220 
__MPC_DECLSPEC
 
mpc_¥oj
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

221 
__MPC_DECLSPEC
 
mpc_cmp
 
__MPC_PROTO
 ((
mpc_§˝å
, mpc_srcptr));

222 
__MPC_DECLSPEC
 
mpc_cmp_si_si
 
__MPC_PROTO
 ((
mpc_§˝å
, , ));

223 
__MPC_DECLSPEC
 
mpc_exp
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

224 
__MPC_DECLSPEC
 
mpc_log
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

225 
__MPC_DECLSPEC
 
mpc_sö
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

226 
__MPC_DECLSPEC
 
mpc_cos
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

227 
__MPC_DECLSPEC
 
mpc_sö_cos
 
__MPC_PROTO
 ((
mpc_±r
, mpc_±r, 
mpc_§˝å
, 
mpc_∫d_t
, mpc_rnd_t));

228 
__MPC_DECLSPEC
 
mpc_èn
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

229 
__MPC_DECLSPEC
 
mpc_söh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

230 
__MPC_DECLSPEC
 
mpc_cosh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

231 
__MPC_DECLSPEC
 
mpc_ènh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

232 
__MPC_DECLSPEC
 
mpc_asö
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

233 
__MPC_DECLSPEC
 
mpc_acos
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

234 
__MPC_DECLSPEC
 
mpc_©™
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

235 
__MPC_DECLSPEC
 
mpc_asöh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

236 
__MPC_DECLSPEC
 
mpc_acosh
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

237 
__MPC_DECLSPEC
 
mpc_©™h
 
__MPC_PROTO
 ((
mpc_±r
, 
mpc_§˝å
, 
mpc_∫d_t
));

238 
__MPC_DECLSPEC
 
mpc_˛ór
 
__MPC_PROTO
 ((
mpc_±r
));

239 
__MPC_DECLSPEC
 
mpc_uøndom
 
__MPC_PROTO
 ((
mpc_±r
, 
gmp_ønd°©e_t
));

240 
__MPC_DECLSPEC
 
mpc_öô2
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_¥ec_t
));

241 
__MPC_DECLSPEC
 
mpc_öô3
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_¥ec_t
, mpfr_prec_t));

242 
__MPC_DECLSPEC
 
mp‰_¥ec_t
 
mpc_gë_¥ec
 
__MPC_PROTO
((
mpc_§˝å
 
x
));

243 
__MPC_DECLSPEC
 
mpc_gë_¥ec2
 
__MPC_PROTO
((
mp‰_¥ec_t
 *
¥
, mp‰_¥ec_à*
pi
, 
mpc_§˝å
 
x
));

244 
__MPC_DECLSPEC
 
mpc_£t_¥ec
 
__MPC_PROTO
 ((
mpc_±r
, 
mp‰_¥ec_t
));

245 
__MPC_DECLSPEC
 
__gmp_c⁄°
 * 
mpc_gë_vîsi⁄
 
__MPC_PROTO
 (());

247 
__MPC_DECLSPEC
 
mpc_°πoc
 
_MPFR_PROTO
 ((
mpc_±r
, c⁄° *, **, , 
mpc_∫d_t
));

248 
__MPC_DECLSPEC
 
mpc_£t_°r
 
_MPFR_PROTO
 ((
mpc_±r
, c⁄° *, , 
mpc_∫d_t
));

249 
__MPC_DECLSPEC
 * 
mpc_gë_°r
 
_MPFR_PROTO
 ((, 
size_t
, 
mpc_§˝å
, 
mpc_∫d_t
));

250 
__MPC_DECLSPEC
 
mpc_‰ì_°r
 
_MPFR_PROTO
 ((*));

251 #ifde‡
_MPC_H_HAVE_FILE


252 
__MPC_DECLSPEC
 
mpc_öp_°r
 
__MPC_PROTO
 ((
mpc_±r
, 
FILE
 *, 
size_t
 *, , 
mpc_∫d_t
));

253 
__MPC_DECLSPEC
 
size_t
 
mpc_out_°r
 
__MPC_PROTO
 ((
FILE
 *, , size_t, 
mpc_§˝å
, 
mpc_∫d_t
));

256 #i‡
deföed
 (
__˝lu•lus
)

260 
	#mpc_ªÆªf
(
x
Ë((x)->
ª
)

	)

261 
	#mpc_imagªf
(
x
Ë((x)->
im
)

	)

263 
	#mpc_cmp_si
(
x
, 
y
) \

264 –
	`mpc_cmp_si_si
 ((
x
), (
y
), 0lË)

	)

265 
	#mpc_ui_sub
(
x
, 
y
, 
z
, 
r
Ë
	`mpc_ui_ui_sub
 (x, y, 0ul, z,Ñ)

	)

273 #i‚de‡
mp‰_£t_‰


274 
	#mp‰_£t_‰
 
mp‰_£t


	)

276 
	#MPC_SET_X_Y
(
ªÆ_t
, 
imag_t
, 
z
, 
ªÆ_vÆue
, 
imag_vÆue
, 
∫d
) \

278 
_öex_ª
, 
_öex_im
; \

279 
_öex_ª
 = (
mp‰_£t_
 ## 
ªÆ_t
Ë(
	`mpc_ªÆªf
 (
z
), (
ªÆ_vÆue
), 
	`MPC_RND_RE
 (
∫d
)); \

280 
_öex_im
 = (
mp‰_£t_
 ## 
imag_t
Ë(
	`mpc_imagªf
 (
z
), (
imag_vÆue
), 
	`MPC_RND_IM
 (
∫d
)); \

281  
	`MPC_INEX
 (
_öex_ª
, 
_öex_im
); \

282 }

	)

	@/usr/include/mpfr.h

23 #i‚de‡
__MPFR_H


24 
	#__MPFR_H


	)

27 
	#MPFR_VERSION_MAJOR
 3

	)

28 
	#MPFR_VERSION_MINOR
 1

	)

29 
	#MPFR_VERSION_PATCHLEVEL
 0

	)

30 
	#MPFR_VERSION_STRING
 "3.1.0-p3"

	)

33 
	#MPFR_VERSION_NUM
(
a
,
b
,
c
Ë((◊Ë<< 16LË| ((bË<< 8Ë| (c))

	)

34 
	#MPFR_VERSION
 \

35 
	`MPFR_VERSION_NUM
(
MPFR_VERSION_MAJOR
,
MPFR_VERSION_MINOR
,
MPFR_VERSION_PATCHLEVEL
)

	)

38 #i‚de‡
__GMP_H__


39 
	~<gmp.h
>

45 
	tmp‰_void
;

46 
	tmp‰_öt
;

47 
	tmp‰_uöt
;

48 
	tmp‰_l⁄g
;

49 
	tmp‰_ul⁄g
;

50 
size_t
 
	tmp‰_size_t
;

68 
	mMPFR_RNDN
=0,

69 
	mMPFR_RNDZ
,

70 
	mMPFR_RNDU
,

71 
	mMPFR_RNDD
,

72 
	mMPFR_RNDA
,

73 
	mMPFR_RNDF
,

74 
	mMPFR_RNDNA
=-1

75 } 
	tmp‰_∫d_t
;

78 
	#GMP_RNDN
 
MPFR_RNDN


	)

79 
	#GMP_RNDZ
 
MPFR_RNDZ


	)

80 
	#GMP_RNDU
 
MPFR_RNDU


	)

81 
	#GMP_RNDD
 
MPFR_RNDD


	)

88 #i‚de‡
_MPFR_PREC_FORMAT


89 #i‡
__GMP_MP_SIZE_T_INT
 == 1

90 
	#_MPFR_PREC_FORMAT
 2

	)

92 
	#_MPFR_PREC_FORMAT
 3

	)

98 #i‚de‡
_MPFR_EXP_FORMAT


99 
	#_MPFR_EXP_FORMAT
 
_MPFR_PREC_FORMAT


	)

102 #i‡
_MPFR_PREC_FORMAT
 > 
_MPFR_EXP_FORMAT


109 #i‡ 
_MPFR_PREC_FORMAT
 == 1

110 
	tmp‰_¥ec_t
;

111 
	tmp‰_u¥ec_t
;

112 #ñi‡
_MPFR_PREC_FORMAT
 == 2

113 
	tmp‰_¥ec_t
;

114 
	tmp‰_u¥ec_t
;

115 #ñi‡
_MPFR_PREC_FORMAT
 == 3

116 
	tmp‰_¥ec_t
;

117 
	tmp‰_u¥ec_t
;

125 
	#MPFR_PREC_MIN
 2

	)

126 
	#MPFR_PREC_MAX
 ((
mp‰_¥ec_t
)((
mp‰_u¥ec_t
)(~(mp‰_u¥ec_t)0)>>1))

	)

129 
	tmp‰_sign_t
;

133 #i‡ 
_MPFR_EXP_FORMAT
 == 1

134 
	tmp‰_exp_t
;

135 
	tmp‰_uexp_t
;

136 #ñi‡
_MPFR_EXP_FORMAT
 == 2

137 
	tmp‰_exp_t
;

138 
	tmp‰_uexp_t
;

139 #ñi‡
_MPFR_EXP_FORMAT
 == 3

140 
	tmp‰_exp_t
;

141 
	tmp‰_uexp_t
;

142 #ñi‡
_MPFR_EXP_FORMAT
 == 4

146 
ötmax_t
 
	tmp‰_exp_t
;

147 
uötmax_t
 
	tmp‰_uexp_t
;

153 
	#MPFR_EMAX_DEFAULT
 ((
mp‰_exp_t
Ë(((
mp‰_ul⁄g
Ë1 << 30Ë- 1))

	)

154 
	#MPFR_EMIN_DEFAULT
 (-(
MPFR_EMAX_DEFAULT
))

	)

159 
	#__MPFR_EXP_MAX
 ((
mp‰_exp_t
Ë(((
mp‰_uexp_t
Ë-1Ë>> 1))

	)

160 
	#__MPFR_EXP_NAN
 (1 - 
__MPFR_EXP_MAX
)

	)

161 
	#__MPFR_EXP_ZERO
 (0 - 
__MPFR_EXP_MAX
)

	)

162 
	#__MPFR_EXP_INF
 (2 - 
__MPFR_EXP_MAX
)

	)

166 
mp‰_¥ec_t
 
	m_mp‰_¥ec
;

167 
mp‰_sign_t
 
	m_mp‰_sign
;

168 
mp‰_exp_t
 
	m_mp‰_exp
;

169 
mp_limb_t
 *
	m_mp‰_d
;

170 } 
	t__mp‰_°ru˘
;

173 #i‚de‡
mp_∫d_t


174 
	#mp_∫d_t
 
mp‰_∫d_t


	)

176 #i‚de‡
mp_¥ec_t


177 
	#mp_¥ec_t
 
mp‰_¥ec_t


	)

191 
__mp‰_°ru˘
 
	tmp‰_t
[1];

192 
__mp‰_°ru˘
 *
	tmp‰_±r
;

193 
__gmp_c⁄°
 
	t__mp‰_°ru˘
 *
	tmp‰_§˝å
;

201 
	#MPFR_SIGN
(
x
Ë((x)->
_mp‰_sign
)

	)

205 
	mMPFR_NAN_KIND
 = 0,

206 
	mMPFR_INF_KIND
 = 1, 
	mMPFR_ZERO_KIND
 = 2, 
	mMPFR_REGULAR_KIND
 = 3

207 } 
	tmp‰_köd_t
;

219 
	#__MPFR_SENTINEL_ATTR


	)

220 #i‡
deföed
 (
__GNUC__
)

221 #i‡
__GNUC__
 >= 4

222 #unde‡
__MPFR_SENTINEL_ATTR


223 
	#__MPFR_SENTINEL_ATTR
 
	`__©åibuã__
 ((
£¡öñ
))

	)

228 #i‡
deföed
 (
__GMP_PROTO
)

229 
	#_MPFR_PROTO
 
__GMP_PROTO


	)

230 #ñi‡
deföed
 (
__STDC__
Ë|| deföed (
__˝lu•lus
)

231 
	#_MPFR_PROTO
(
x
Ë
	)
x

233 
	#_MPFR_PROTO
(
x
Ë()

	)

238 #i‡
deföed
(
__MPFR_WITHIN_MPFR
Ë&& 
__GMP_LIBGMP_DLL


239 
	#__MPFR_DECLSPEC
 
__GMP_DECLSPEC_EXPORT


	)

241 
	#__MPFR_DECLSPEC
 
__GMP_DECLSPEC


	)

246 #i‡
deföed
(
__GNUC__
) && \

247 (
	g__GNUC__
 >4 || (
__GNUC__
 =3 && 
__GNUC_MINOR__
 >= 1))

248 
	#MPFR_DEPRECATED
 
	`__©åibuã__
 ((
dïªˇãd
))

	)

249 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1300

250 
	#MPFR_DEPRECATED
 
	`__de˛•ec
(
dïªˇãd
)

	)

252 
	#MPFR_DEPRECATED


	)

263 #i‡
deföed
 (
__˝lu•lus
)

267 
__MPFR_DECLSPEC
 
__gmp_c⁄°
 * 
mp‰_gë_vîsi⁄
 
_MPFR_PROTO
 (());

268 
__MPFR_DECLSPEC
 
__gmp_c⁄°
 * 
mp‰_gë_∑tches
 
_MPFR_PROTO
 (());

269 
__MPFR_DECLSPEC
 
mp‰_buûd›t_és_p
 
_MPFR_PROTO
 (());

270 
__MPFR_DECLSPEC
 
mp‰_buûd›t_decimÆ_p
 
_MPFR_PROTO
 (());

271 
__MPFR_DECLSPEC
 
mp‰_buûd›t_gmpöã∫Æs_p
 
_MPFR_PROTO
 (());

272 
__MPFR_DECLSPEC
 
__gmp_c⁄°
 * 
mp‰_buûd›t_tu√_ˇ£
 
_MPFR_PROTO
 (());

274 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_emö
 
_MPFR_PROTO
 (());

275 
__MPFR_DECLSPEC
 
mp‰_£t_emö
 
_MPFR_PROTO
 ((
mp‰_exp_t
));

276 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_emö_mö
 
_MPFR_PROTO
 (());

277 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_emö_max
 
_MPFR_PROTO
 (());

278 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_emax
 
_MPFR_PROTO
 (());

279 
__MPFR_DECLSPEC
 
mp‰_£t_emax
 
_MPFR_PROTO
 ((
mp‰_exp_t
));

280 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_emax_mö
 
_MPFR_PROTO
 (());

281 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_emax_max
 
_MPFR_PROTO
 (());

283 
__MPFR_DECLSPEC
 
mp‰_£t_deÁu…_roundög_mode
 
_MPFR_PROTO
((
mp‰_∫d_t
));

284 
__MPFR_DECLSPEC
 
mp‰_∫d_t
 
mp‰_gë_deÁu…_roundög_mode
 
_MPFR_PROTO
(());

285 
__MPFR_DECLSPEC
 
__gmp_c⁄°
 *

286 
mp‰_¥öt_∫d_mode
 
_MPFR_PROTO
((
mp‰_∫d_t
));

288 
__MPFR_DECLSPEC
 
mp‰_˛ór_Êags
 
_MPFR_PROTO
 (());

289 
__MPFR_DECLSPEC
 
mp‰_˛ór_undîÊow
 
_MPFR_PROTO
 (());

290 
__MPFR_DECLSPEC
 
mp‰_˛ór_ovîÊow
 
_MPFR_PROTO
 (());

291 
__MPFR_DECLSPEC
 
mp‰_˛ór_divby0
 
_MPFR_PROTO
 (());

292 
__MPFR_DECLSPEC
 
mp‰_˛ór_«nÊag
 
_MPFR_PROTO
 (());

293 
__MPFR_DECLSPEC
 
mp‰_˛ór_öexÊag
 
_MPFR_PROTO
 (());

294 
__MPFR_DECLSPEC
 
mp‰_˛ór_î™geÊag
 
_MPFR_PROTO
 (());

296 
__MPFR_DECLSPEC
 
mp‰_£t_undîÊow
 
_MPFR_PROTO
 (());

297 
__MPFR_DECLSPEC
 
mp‰_£t_ovîÊow
 
_MPFR_PROTO
 (());

298 
__MPFR_DECLSPEC
 
mp‰_£t_divby0
 
_MPFR_PROTO
 (());

299 
__MPFR_DECLSPEC
 
mp‰_£t_«nÊag
 
_MPFR_PROTO
 (());

300 
__MPFR_DECLSPEC
 
mp‰_£t_öexÊag
 
_MPFR_PROTO
 (());

301 
__MPFR_DECLSPEC
 
mp‰_£t_î™geÊag
 
_MPFR_PROTO
 (());

303 
__MPFR_DECLSPEC
 
mp‰_undîÊow_p
 
_MPFR_PROTO
 (());

304 
__MPFR_DECLSPEC
 
mp‰_ovîÊow_p
 
_MPFR_PROTO
 (());

305 
__MPFR_DECLSPEC
 
mp‰_divby0_p
 
_MPFR_PROTO
 (());

306 
__MPFR_DECLSPEC
 
mp‰_«nÊag_p
 
_MPFR_PROTO
 (());

307 
__MPFR_DECLSPEC
 
mp‰_öexÊag_p
 
_MPFR_PROTO
 (());

308 
__MPFR_DECLSPEC
 
mp‰_î™geÊag_p
 
_MPFR_PROTO
 (());

310 
__MPFR_DECLSPEC
 

311 
mp‰_check_ønge
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_∫d_t
));

313 
__MPFR_DECLSPEC
 
mp‰_öô2
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_¥ec_t
));

314 
__MPFR_DECLSPEC
 
mp‰_öô
 
_MPFR_PROTO
 ((
mp‰_±r
));

315 
__MPFR_DECLSPEC
 
mp‰_˛ór
 
_MPFR_PROTO
 ((
mp‰_±r
));

317 
__MPFR_DECLSPEC
 

318 
mp‰_öôs2
 
_MPFR_PROTO
 ((
mp‰_¥ec_t
, 
mp‰_±r
, ...)Ë
__MPFR_SENTINEL_ATTR
;

319 
__MPFR_DECLSPEC
 

320 
mp‰_öôs
 
_MPFR_PROTO
 ((
mp‰_±r
, ...)Ë
__MPFR_SENTINEL_ATTR
;

321 
__MPFR_DECLSPEC
 

322 
mp‰_˛órs
 
_MPFR_PROTO
 ((
mp‰_±r
, ...)Ë
__MPFR_SENTINEL_ATTR
;

324 
__MPFR_DECLSPEC
 

325 
mp‰_¥ec_round
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_¥ec_t
, 
mp‰_∫d_t
));

326 
__MPFR_DECLSPEC
 

327 
mp‰_ˇn_round
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mp‰_exp_t
, 
mp‰_∫d_t
, mpfr_rnd_t,

328 
mp‰_¥ec_t
));

329 
__MPFR_DECLSPEC
 
mp‰_¥ec_t
 
mp‰_mö_¥ec
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

331 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_exp
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

332 
__MPFR_DECLSPEC
 
mp‰_£t_exp
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_exp_t
));

333 
__MPFR_DECLSPEC
 
mp‰_¥ec_t
 
mp‰_gë_¥ec
 
_MPFR_PROTO
((
mp‰_§˝å
));

334 
__MPFR_DECLSPEC
 
mp‰_£t_¥ec
 
_MPFR_PROTO
((
mp‰_±r
, 
mp‰_¥ec_t
));

335 
__MPFR_DECLSPEC
 
mp‰_£t_¥ec_øw
 
_MPFR_PROTO
((
mp‰_±r
, 
mp‰_¥ec_t
));

336 
__MPFR_DECLSPEC
 
mp‰_£t_deÁu…_¥ec
 
_MPFR_PROTO
((
mp‰_¥ec_t
));

337 
__MPFR_DECLSPEC
 
mp‰_¥ec_t
 
mp‰_gë_deÁu…_¥ec
 
_MPFR_PROTO
(());

339 
__MPFR_DECLSPEC
 
mp‰_£t_d
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_∫d_t
));

340 
__MPFR_DECLSPEC
 
mp‰_£t_Êt
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_∫d_t
));

341 #ifde‡
MPFR_WANT_DECIMAL_FLOATS


342 
__MPFR_DECLSPEC
 
mp‰_£t_decimÆ64
 
_MPFR_PROTO
 ((
mp‰_±r
, 
_DecimÆ64
,

343 
mp‰_∫d_t
));

345 
__MPFR_DECLSPEC
 

346 
mp‰_£t_ld
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_∫d_t
));

347 
__MPFR_DECLSPEC
 

348 
mp‰_£t_z
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mpz_§˝å
, 
mp‰_∫d_t
));

349 
__MPFR_DECLSPEC
 

350 
mp‰_£t_z_2exp
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mpz_§˝å
, 
mp‰_exp_t
, 
mp‰_∫d_t
));

351 
__MPFR_DECLSPEC
 
mp‰_£t_«n
 
_MPFR_PROTO
 ((
mp‰_±r
));

352 
__MPFR_DECLSPEC
 
mp‰_£t_öf
 
_MPFR_PROTO
 ((
mp‰_±r
, ));

353 
__MPFR_DECLSPEC
 
mp‰_£t_zîo
 
_MPFR_PROTO
 ((
mp‰_±r
, ));

354 
__MPFR_DECLSPEC
 

355 
mp‰_£t_f
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mpf_§˝å
, 
mp‰_∫d_t
));

356 
__MPFR_DECLSPEC
 

357 
mp‰_gë_f
 
_MPFR_PROTO
 ((
mpf_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

358 
__MPFR_DECLSPEC
 
mp‰_£t_si
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_∫d_t
));

359 
__MPFR_DECLSPEC
 

360 
mp‰_£t_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_∫d_t
));

361 
__MPFR_DECLSPEC
 

362 
mp‰_£t_si_2exp
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_exp_t
, 
mp‰_∫d_t
));

363 
__MPFR_DECLSPEC
 

364 
mp‰_£t_ui_2exp
 
_MPFR_PROTO
 ((
mp‰_±r
,,
mp‰_exp_t
,
mp‰_∫d_t
));

365 
__MPFR_DECLSPEC
 

366 
mp‰_£t_q
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mpq_§˝å
, 
mp‰_∫d_t
));

367 
__MPFR_DECLSPEC
 

368 
mp‰_£t_°r
 
_MPFR_PROTO
 ((
mp‰_±r
, 
__gmp_c⁄°
 *, , 
mp‰_∫d_t
));

369 
__MPFR_DECLSPEC
 

370 
mp‰_öô_£t_°r
 
_MPFR_PROTO
 ((
mp‰_±r
, 
__gmp_c⁄°
 *, ,

371 
mp‰_∫d_t
));

372 
__MPFR_DECLSPEC
 

373 
mp‰_£t4
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
, ));

374 
__MPFR_DECLSPEC
 

375 
mp‰_abs
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

376 
__MPFR_DECLSPEC
 

377 
mp‰_£t
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

378 
__MPFR_DECLSPEC
 
mp‰_√g
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

379 
__MPFR_DECLSPEC
 
mp‰_signbô
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

380 
__MPFR_DECLSPEC
 

381 
mp‰_£tsign
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, , 
mp‰_∫d_t
));

382 
__MPFR_DECLSPEC
 

383 
mp‰_c›ysign
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mp‰_§˝å, 
mp‰_∫d_t
));

385 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_gë_z_2exp
 
_MPFR_PROTO
 ((
mpz_±r
, 
mp‰_§˝å
));

386 
__MPFR_DECLSPEC
 
mp‰_gë_Êt
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mp‰_∫d_t
));

387 
__MPFR_DECLSPEC
 
mp‰_gë_d
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mp‰_∫d_t
));

388 #ifde‡
MPFR_WANT_DECIMAL_FLOATS


389 
__MPFR_DECLSPEC
 
_DecimÆ64
 
mp‰_gë_decimÆ64
 
_MPFR_PROTO
 ((
mp‰_§˝å
,

390 
mp‰_∫d_t
));

392 
__MPFR_DECLSPEC
 
mp‰_gë_ld
 
_MPFR_PROTO
 ((
mp‰_§˝å
,

393 
mp‰_∫d_t
));

394 
__MPFR_DECLSPEC
 
mp‰_gë_d1
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

395 
__MPFR_DECLSPEC
 
mp‰_gë_d_2exp
 
_MPFR_PROTO
 ((*, 
mp‰_§˝å
,

396 
mp‰_∫d_t
));

397 
__MPFR_DECLSPEC
 
mp‰_gë_ld_2exp
 
_MPFR_PROTO
 ((*, 
mp‰_§˝å
,

398 
mp‰_∫d_t
));

399 
__MPFR_DECLSPEC
 
mp‰_‰exp
 
_MPFR_PROTO
 ((
mp‰_exp_t
*, 
mp‰_±r
,

400 
mp‰_§˝å
, 
mp‰_∫d_t
));

401 
__MPFR_DECLSPEC
 
mp‰_gë_si
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mp‰_∫d_t
));

402 
__MPFR_DECLSPEC
 
mp‰_gë_ui
 
_MPFR_PROTO
 ((
mp‰_§˝å
,

403 
mp‰_∫d_t
));

404 
__MPFR_DECLSPEC
 *
mp‰_gë_°r
 
_MPFR_PROTO
 ((*, 
mp‰_exp_t
*, , 
size_t
,

405 
mp‰_§˝å
, 
mp‰_∫d_t
));

406 
__MPFR_DECLSPEC
 
mp‰_gë_z
 
_MPFR_PROTO
 ((
mpz_±r
 
z
, 
mp‰_§˝å
 
f
,

407 
mp‰_∫d_t
));

409 
__MPFR_DECLSPEC
 
mp‰_‰ì_°r
 
_MPFR_PROTO
 ((*));

411 
__MPFR_DECLSPEC
 
mp‰_uøndom
 
_MPFR_PROTO
 ((
mp‰_±r
, 
gmp_ønd°©e_t
,

412 
mp‰_∫d_t
));

413 
__MPFR_DECLSPEC
 
mp‰_gøndom
 
_MPFR_PROTO
 ((
mp‰_±r
, mp‰_±r, 
gmp_ønd°©e_t
,

414 
mp‰_∫d_t
));

415 
__MPFR_DECLSPEC
 
mp‰_uøndomb
 
_MPFR_PROTO
 ((
mp‰_±r
, 
gmp_ønd°©e_t
));

417 
__MPFR_DECLSPEC
 
mp‰_√xèbove
 
_MPFR_PROTO
 ((
mp‰_±r
));

418 
__MPFR_DECLSPEC
 
mp‰_√xtbñow
 
_MPFR_PROTO
 ((
mp‰_±r
));

419 
__MPFR_DECLSPEC
 
mp‰_√xâow¨d
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
));

421 
__MPFR_DECLSPEC
 
mp‰_¥ötf
 
_MPFR_PROTO
 ((
__gmp_c⁄°
 *, ...));

422 
__MPFR_DECLSPEC
 
mp‰_a•rötf
 
_MPFR_PROTO
 ((**, 
__gmp_c⁄°
 *,

424 
__MPFR_DECLSPEC
 
mp‰_•rötf
 
_MPFR_PROTO
 ((*, 
__gmp_c⁄°
 *,

426 
__MPFR_DECLSPEC
 
mp‰_¢¥ötf
 
_MPFR_PROTO
 ((*, 
size_t
,

427 
__gmp_c⁄°
 *, ...));

429 
__MPFR_DECLSPEC
 
mp‰_pow
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

430 
mp‰_§˝å
, 
mp‰_∫d_t
));

431 
__MPFR_DECLSPEC
 
mp‰_pow_si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

432 , 
mp‰_∫d_t
));

433 
__MPFR_DECLSPEC
 
mp‰_pow_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

434 , 
mp‰_∫d_t
));

435 
__MPFR_DECLSPEC
 
mp‰_ui_pow_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

436 , 
mp‰_∫d_t
));

437 
__MPFR_DECLSPEC
 
mp‰_ui_pow
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

438 
mp‰_§˝å
, 
mp‰_∫d_t
));

439 
__MPFR_DECLSPEC
 
mp‰_pow_z
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

440 
mpz_§˝å
, 
mp‰_∫d_t
));

442 
__MPFR_DECLSPEC
 
mp‰_sqπ
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

443 
mp‰_∫d_t
));

444 
__MPFR_DECLSPEC
 
mp‰_sqπ_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

445 
mp‰_∫d_t
));

446 
__MPFR_DECLSPEC
 
mp‰_ªc_sqπ
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

447 
mp‰_∫d_t
));

449 
__MPFR_DECLSPEC
 
mp‰_add
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

450 
mp‰_§˝å
, 
mp‰_∫d_t
));

451 
__MPFR_DECLSPEC
 
mp‰_sub
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

452 
mp‰_§˝å
, 
mp‰_∫d_t
));

453 
__MPFR_DECLSPEC
 
mp‰_mul
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

454 
mp‰_§˝å
, 
mp‰_∫d_t
));

455 
__MPFR_DECLSPEC
 
mp‰_div
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

456 
mp‰_§˝å
, 
mp‰_∫d_t
));

458 
__MPFR_DECLSPEC
 
mp‰_add_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

459 , 
mp‰_∫d_t
));

460 
__MPFR_DECLSPEC
 
mp‰_sub_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

461 , 
mp‰_∫d_t
));

462 
__MPFR_DECLSPEC
 
mp‰_ui_sub
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

463 
mp‰_§˝å
, 
mp‰_∫d_t
));

464 
__MPFR_DECLSPEC
 
mp‰_mul_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

465 , 
mp‰_∫d_t
));

466 
__MPFR_DECLSPEC
 
mp‰_div_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

467 , 
mp‰_∫d_t
));

468 
__MPFR_DECLSPEC
 
mp‰_ui_div
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

469 
mp‰_§˝å
, 
mp‰_∫d_t
));

471 
__MPFR_DECLSPEC
 
mp‰_add_si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

472 , 
mp‰_∫d_t
));

473 
__MPFR_DECLSPEC
 
mp‰_sub_si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

474 , 
mp‰_∫d_t
));

475 
__MPFR_DECLSPEC
 
mp‰_si_sub
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

476 
mp‰_§˝å
, 
mp‰_∫d_t
));

477 
__MPFR_DECLSPEC
 
mp‰_mul_si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

478 , 
mp‰_∫d_t
));

479 
__MPFR_DECLSPEC
 
mp‰_div_si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

480 , 
mp‰_∫d_t
));

481 
__MPFR_DECLSPEC
 
mp‰_si_div
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

482 
mp‰_§˝å
, 
mp‰_∫d_t
));

484 
__MPFR_DECLSPEC
 
mp‰_add_d
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

485 , 
mp‰_∫d_t
));

486 
__MPFR_DECLSPEC
 
mp‰_sub_d
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

487 , 
mp‰_∫d_t
));

488 
__MPFR_DECLSPEC
 
mp‰_d_sub
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

489 
mp‰_§˝å
, 
mp‰_∫d_t
));

490 
__MPFR_DECLSPEC
 
mp‰_mul_d
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

491 , 
mp‰_∫d_t
));

492 
__MPFR_DECLSPEC
 
mp‰_div_d
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

493 , 
mp‰_∫d_t
));

494 
__MPFR_DECLSPEC
 
mp‰_d_div
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

495 
mp‰_§˝å
, 
mp‰_∫d_t
));

497 
__MPFR_DECLSPEC
 
mp‰_sqr
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

499 
__MPFR_DECLSPEC
 
mp‰_c⁄°_pi
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_∫d_t
));

500 
__MPFR_DECLSPEC
 
mp‰_c⁄°_log2
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_∫d_t
));

501 
__MPFR_DECLSPEC
 
mp‰_c⁄°_euÀr
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_∫d_t
));

502 
__MPFR_DECLSPEC
 
mp‰_c⁄°_ˇèœn
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_∫d_t
));

504 
__MPFR_DECLSPEC
 
mp‰_agm
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mpfr_srcptr,

505 
mp‰_∫d_t
));

507 
__MPFR_DECLSPEC
 
mp‰_log
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

508 
__MPFR_DECLSPEC
 
mp‰_log2
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

509 
__MPFR_DECLSPEC
 
mp‰_log10
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

510 
mp‰_∫d_t
));

511 
__MPFR_DECLSPEC
 
mp‰_log1p
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

512 
mp‰_∫d_t
));

514 
__MPFR_DECLSPEC
 
mp‰_exp
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

515 
__MPFR_DECLSPEC
 
mp‰_exp2
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

516 
__MPFR_DECLSPEC
 
mp‰_exp10
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

517 
mp‰_∫d_t
));

518 
__MPFR_DECLSPEC
 
mp‰_expm1
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

519 
mp‰_∫d_t
));

520 
__MPFR_DECLSPEC
 
mp‰_eöt
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

521 
__MPFR_DECLSPEC
 
mp‰_li2
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

523 
__MPFR_DECLSPEC
 
mp‰_cmp
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

524 
__MPFR_DECLSPEC
 
mp‰_cmp3
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr, ));

525 
__MPFR_DECLSPEC
 
mp‰_cmp_d
 
_MPFR_PROTO
 ((
mp‰_§˝å
, ));

526 
__MPFR_DECLSPEC
 
mp‰_cmp_ld
 
_MPFR_PROTO
 ((
mp‰_§˝å
, ));

527 
__MPFR_DECLSPEC
 
mp‰_cm∑bs
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

528 
__MPFR_DECLSPEC
 
mp‰_cmp_ui
 
_MPFR_PROTO
 ((
mp‰_§˝å
, ));

529 
__MPFR_DECLSPEC
 
mp‰_cmp_si
 
_MPFR_PROTO
 ((
mp‰_§˝å
, ));

530 
__MPFR_DECLSPEC
 
mp‰_cmp_ui_2exp
 
_MPFR_PROTO
 ((
mp‰_§˝å
, ,

531 
mp‰_exp_t
));

532 
__MPFR_DECLSPEC
 
mp‰_cmp_si_2exp
 
_MPFR_PROTO
 ((
mp‰_§˝å
, ,

533 
mp‰_exp_t
));

534 
__MPFR_DECLSPEC
 
mp‰_ªldiff
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

535 
mp‰_§˝å
, 
mp‰_∫d_t
));

536 
__MPFR_DECLSPEC
 
mp‰_eq
 
_MPFR_PROTO
((
mp‰_§˝å
, mpfr_srcptr,

538 
__MPFR_DECLSPEC
 
mp‰_sgn
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

540 
__MPFR_DECLSPEC
 
mp‰_mul_2exp
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

541 , 
mp‰_∫d_t
));

542 
__MPFR_DECLSPEC
 
mp‰_div_2exp
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

543 , 
mp‰_∫d_t
));

544 
__MPFR_DECLSPEC
 
mp‰_mul_2ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

545 , 
mp‰_∫d_t
));

546 
__MPFR_DECLSPEC
 
mp‰_div_2ui
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

547 , 
mp‰_∫d_t
));

548 
__MPFR_DECLSPEC
 
mp‰_mul_2si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

549 , 
mp‰_∫d_t
));

550 
__MPFR_DECLSPEC
 
mp‰_div_2si
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

551 , 
mp‰_∫d_t
));

553 
__MPFR_DECLSPEC
 
mp‰_röt
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
, 
mp‰_∫d_t
));

554 
__MPFR_DECLSPEC
 
mp‰_round
 
_MPFR_PROTO
((
mp‰_±r
, 
mp‰_§˝å
));

555 
__MPFR_DECLSPEC
 
mp‰_åunc
 
_MPFR_PROTO
((
mp‰_±r
, 
mp‰_§˝å
));

556 
__MPFR_DECLSPEC
 
mp‰_˚û
 
_MPFR_PROTO
((
mp‰_±r
, 
mp‰_§˝å
));

557 
__MPFR_DECLSPEC
 
mp‰_Êo‹
 
_MPFR_PROTO
((
mp‰_±r
, 
mp‰_§˝å
));

558 
__MPFR_DECLSPEC
 
mp‰_röt_round
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

559 
mp‰_∫d_t
));

560 
__MPFR_DECLSPEC
 
mp‰_röt_åunc
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

561 
mp‰_∫d_t
));

562 
__MPFR_DECLSPEC
 
mp‰_röt_˚û
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

563 
mp‰_∫d_t
));

564 
__MPFR_DECLSPEC
 
mp‰_röt_Êo‹
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

565 
mp‰_∫d_t
));

566 
__MPFR_DECLSPEC
 
mp‰_‰ac
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

567 
__MPFR_DECLSPEC
 
mp‰_modf
 
_MPFR_PROTO
 ((
mp‰_±r
, mp‰_±r, 
mp‰_§˝å
,

568 
mp‰_∫d_t
));

569 
__MPFR_DECLSPEC
 
mp‰_ªmquo
 
_MPFR_PROTO
 ((
mp‰_±r
, *, 
mp‰_§˝å
,

570 
mp‰_§˝å
, 
mp‰_∫d_t
));

571 
__MPFR_DECLSPEC
 
mp‰_ªmaödî
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

572 
mp‰_§˝å
, 
mp‰_∫d_t
));

573 
__MPFR_DECLSPEC
 
mp‰_fmod
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

574 
mp‰_§˝å
, 
mp‰_∫d_t
));

576 
__MPFR_DECLSPEC
 
mp‰_fôs_ul⁄g_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

577 
__MPFR_DECLSPEC
 
mp‰_fôs_¶⁄g_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

578 
__MPFR_DECLSPEC
 
mp‰_fôs_uöt_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

579 
__MPFR_DECLSPEC
 
mp‰_fôs_söt_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

580 
__MPFR_DECLSPEC
 
mp‰_fôs_ush‹t_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

581 
__MPFR_DECLSPEC
 
mp‰_fôs_ssh‹t_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

582 
__MPFR_DECLSPEC
 
mp‰_fôs_uötmax_p
 
_MPFR_PROTO
((
mp‰_§˝å
,
mp‰_∫d_t
));

583 
__MPFR_DECLSPEC
 
mp‰_fôs_ötmax_p
 
_MPFR_PROTO
((
mp‰_§˝å
, 
mp‰_∫d_t
));

585 
__MPFR_DECLSPEC
 
mp‰_exåa˘
 
_MPFR_PROTO
 ((
mpz_±r
, 
mp‰_§˝å
,

587 
__MPFR_DECLSPEC
 
mp‰_sw≠
 
_MPFR_PROTO
 ((
mp‰_±r
, mpfr_ptr));

588 
__MPFR_DECLSPEC
 
mp‰_dump
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

590 
__MPFR_DECLSPEC
 
mp‰_«n_p
 
_MPFR_PROTO
((
mp‰_§˝å
));

591 
__MPFR_DECLSPEC
 
mp‰_öf_p
 
_MPFR_PROTO
((
mp‰_§˝å
));

592 
__MPFR_DECLSPEC
 
mp‰_numbî_p
 
_MPFR_PROTO
((
mp‰_§˝å
));

593 
__MPFR_DECLSPEC
 
mp‰_öãgî_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

594 
__MPFR_DECLSPEC
 
mp‰_zîo_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

595 
__MPFR_DECLSPEC
 
mp‰_ªguœr_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

597 
__MPFR_DECLSPEC
 
mp‰_gª©î_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

598 
__MPFR_DECLSPEC
 
mp‰_gª©îequÆ_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
,

599 
mp‰_§˝å
));

600 
__MPFR_DECLSPEC
 
mp‰_Àss_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

601 
__MPFR_DECLSPEC
 
mp‰_Às£quÆ_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

602 
__MPFR_DECLSPEC
 
mp‰_Àssgª©î_p
 
_MPFR_PROTO
((
mp‰_§˝å
,mpfr_srcptr));

603 
__MPFR_DECLSPEC
 
mp‰_equÆ_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

604 
__MPFR_DECLSPEC
 
mp‰_un‹dîed_p
 
_MPFR_PROTO
 ((
mp‰_§˝å
, mpfr_srcptr));

606 
__MPFR_DECLSPEC
 
mp‰_©™h
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

607 
__MPFR_DECLSPEC
 
mp‰_acosh
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

608 
__MPFR_DECLSPEC
 
mp‰_asöh
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

609 
__MPFR_DECLSPEC
 
mp‰_cosh
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
, 
mp‰_∫d_t
));

610 
__MPFR_DECLSPEC
 
mp‰_söh
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
, 
mp‰_∫d_t
));

611 
__MPFR_DECLSPEC
 
mp‰_ènh
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
, 
mp‰_∫d_t
));

612 
__MPFR_DECLSPEC
 
mp‰_söh_cosh
 
_MPFR_PROTO
 ((
mp‰_±r
, mpfr_ptr,

613 
mp‰_§˝å
, 
mp‰_∫d_t
));

615 
__MPFR_DECLSPEC
 
mp‰_£ch
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

616 
__MPFR_DECLSPEC
 
mp‰_csch
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

617 
__MPFR_DECLSPEC
 
mp‰_cŸh
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

619 
__MPFR_DECLSPEC
 
mp‰_acos
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

620 
__MPFR_DECLSPEC
 
mp‰_asö
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

621 
__MPFR_DECLSPEC
 
mp‰_©™
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

622 
__MPFR_DECLSPEC
 
mp‰_sö
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

623 
__MPFR_DECLSPEC
 
mp‰_sö_cos
 
_MPFR_PROTO
 ((
mp‰_±r
, mpfr_ptr,

624 
mp‰_§˝å
, 
mp‰_∫d_t
));

625 
__MPFR_DECLSPEC
 
mp‰_cos
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

626 
__MPFR_DECLSPEC
 
mp‰_èn
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

627 
__MPFR_DECLSPEC
 
mp‰_©™2
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,mpfr_srcptr,

628 
mp‰_∫d_t
));

629 
__MPFR_DECLSPEC
 
mp‰_£c
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

630 
__MPFR_DECLSPEC
 
mp‰_csc
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

631 
__MPFR_DECLSPEC
 
mp‰_cŸ
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

633 
__MPFR_DECLSPEC
 
mp‰_hypŸ
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

634 
mp‰_§˝å
, 
mp‰_∫d_t
));

635 
__MPFR_DECLSPEC
 
mp‰_îf
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

636 
__MPFR_DECLSPEC
 
mp‰_îfc
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,
mp‰_∫d_t
));

637 
__MPFR_DECLSPEC
 
mp‰_cbπ
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

638 
__MPFR_DECLSPEC
 
mp‰_roŸ
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,,
mp‰_∫d_t
));

639 
__MPFR_DECLSPEC
 
mp‰_gamma
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

640 
__MPFR_DECLSPEC
 
mp‰_ gamma
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

641 
__MPFR_DECLSPEC
 
mp‰_lgamma
 
_MPFR_PROTO
((
mp‰_±r
,*,
mp‰_§˝å
,
mp‰_∫d_t
));

642 
__MPFR_DECLSPEC
 
mp‰_digamma
 
_MPFR_PROTO
((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

643 
__MPFR_DECLSPEC
 
mp‰_zëa
 
_MPFR_PROTO
 ((
mp‰_±r
,
mp‰_§˝å
,
mp‰_∫d_t
));

644 
__MPFR_DECLSPEC
 
mp‰_zëa_ui
 
_MPFR_PROTO
 ((
mp‰_±r
,,
mp‰_∫d_t
));

645 
__MPFR_DECLSPEC
 
mp‰_Ác_ui
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

646 
mp‰_∫d_t
));

647 
__MPFR_DECLSPEC
 
mp‰_j0
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

648 
__MPFR_DECLSPEC
 
mp‰_j1
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

649 
__MPFR_DECLSPEC
 
mp‰_jn
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_§˝å
,

650 
mp‰_∫d_t
));

651 
__MPFR_DECLSPEC
 
mp‰_y0
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

652 
__MPFR_DECLSPEC
 
mp‰_y1
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

653 
__MPFR_DECLSPEC
 
mp‰_yn
 
_MPFR_PROTO
 ((
mp‰_±r
, , 
mp‰_§˝å
,

654 
mp‰_∫d_t
));

656 
__MPFR_DECLSPEC
 
mp‰_ai
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, 
mp‰_∫d_t
));

658 
__MPFR_DECLSPEC
 
mp‰_mö
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mpfr_srcptr,

659 
mp‰_∫d_t
));

660 
__MPFR_DECLSPEC
 
mp‰_max
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mpfr_srcptr,

661 
mp‰_∫d_t
));

662 
__MPFR_DECLSPEC
 
mp‰_dim
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mpfr_srcptr,

663 
mp‰_∫d_t
));

665 
__MPFR_DECLSPEC
 
mp‰_mul_z
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

666 
mpz_§˝å
, 
mp‰_∫d_t
));

667 
__MPFR_DECLSPEC
 
mp‰_div_z
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

668 
mpz_§˝å
, 
mp‰_∫d_t
));

669 
__MPFR_DECLSPEC
 
mp‰_add_z
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

670 
mpz_§˝å
, 
mp‰_∫d_t
));

671 
__MPFR_DECLSPEC
 
mp‰_sub_z
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

672 
mpz_§˝å
, 
mp‰_∫d_t
));

673 
__MPFR_DECLSPEC
 
mp‰_z_sub
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mpz_§˝å
,

674 
mp‰_§˝å
, 
mp‰_∫d_t
));

675 
__MPFR_DECLSPEC
 
mp‰_cmp_z
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mpz_§˝å
));

677 
__MPFR_DECLSPEC
 
mp‰_mul_q
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

678 
mpq_§˝å
, 
mp‰_∫d_t
));

679 
__MPFR_DECLSPEC
 
mp‰_div_q
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

680 
mpq_§˝å
, 
mp‰_∫d_t
));

681 
__MPFR_DECLSPEC
 
mp‰_add_q
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

682 
mpq_§˝å
, 
mp‰_∫d_t
));

683 
__MPFR_DECLSPEC
 
mp‰_sub_q
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
,

684 
mpq_§˝å
, 
mp‰_∫d_t
));

685 
__MPFR_DECLSPEC
 
mp‰_cmp_q
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mpq_§˝å
));

687 
__MPFR_DECLSPEC
 
mp‰_cmp_f
 
_MPFR_PROTO
 ((
mp‰_§˝å
, 
mpf_§˝å
));

689 
__MPFR_DECLSPEC
 
mp‰_fma
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mpfr_srcptr,

690 
mp‰_§˝å
, 
mp‰_∫d_t
));

691 
__MPFR_DECLSPEC
 
mp‰_fms
 
_MPFR_PROTO
 ((
mp‰_±r
, 
mp‰_§˝å
, mpfr_srcptr,

692 
mp‰_§˝å
, 
mp‰_∫d_t
));

693 
__MPFR_DECLSPEC
 
mp‰_sum
 
_MPFR_PROTO
 ((
mp‰_±r
, mp‰_±∏*
__gmp_c⁄°
,

694 , 
mp‰_∫d_t
));

696 
__MPFR_DECLSPEC
 
mp‰_‰ì_ˇche
 
_MPFR_PROTO
 (());

698 
__MPFR_DECLSPEC
 
mp‰_subn‹mÆize
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

699 
mp‰_∫d_t
));

701 
__MPFR_DECLSPEC
 
mp‰_°πo‰
 
_MPFR_PROTO
 ((
mp‰_±r
, 
__gmp_c⁄°
 *,

702 **, , 
mp‰_∫d_t
));

704 
__MPFR_DECLSPEC
 
size_t
 
mp‰_cu°om_gë_size
 
_MPFR_PROTO
 ((
mp‰_¥ec_t
));

705 
__MPFR_DECLSPEC
 
mp‰_cu°om_öô
 
_MPFR_PROTO
 ((*, 
mp‰_¥ec_t
));

706 
__MPFR_DECLSPEC
 * 
mp‰_cu°om_gë_signifiˇnd
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

707 
__MPFR_DECLSPEC
 
mp‰_exp_t
 
mp‰_cu°om_gë_exp
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

708 
__MPFR_DECLSPEC
 
mp‰_cu°om_move
 
_MPFR_PROTO
 ((
mp‰_±r
, *));

709 
__MPFR_DECLSPEC
 
mp‰_cu°om_öô_£t
 
_MPFR_PROTO
 ((
mp‰_±r
, ,

710 
mp‰_exp_t
, 
mp‰_¥ec_t
, *));

711 
__MPFR_DECLSPEC
 
mp‰_cu°om_gë_köd
 
_MPFR_PROTO
 ((
mp‰_§˝å
));

713 #i‡
deföed
 (
__˝lu•lus
)

718 #i‚de‡
MPFR_EXTENSION


719 #i‡
deföed
(
MPFR_USE_EXTENSION
)

720 
	#MPFR_EXTENSION
 
__exãnsi⁄__


	)

722 
	#MPFR_EXTENSION


	)

729 
	#MPFR_DECL_INIT
(
_x
, 
_p
) \

730 
MPFR_EXTENSION
 
mp_limb_t
 
__gmp‰_loˇl_èb_
##
_x
[((
_p
)-1)/
GMP_NUMB_BITS
+1]; \

731 
MPFR_EXTENSION
 
mp‰_t
 
_x
 = {{(
_p
),1,
__MPFR_EXP_NAN
,
__gmp‰_loˇl_èb_
##_x}}

	)

736 #i‚de‡
MPFR_USE_NO_MACRO


739 
	#mp‰_«n_p
(
_x
Ë((_x)->
_mp‰_exp
 =
__MPFR_EXP_NAN
)

	)

740 
	#mp‰_öf_p
(
_x
Ë((_x)->
_mp‰_exp
 =
__MPFR_EXP_INF
)

	)

741 
	#mp‰_zîo_p
(
_x
Ë((_x)->
_mp‰_exp
 =
__MPFR_EXP_ZERO
)

	)

742 
	#mp‰_ªguœr_p
(
_x
Ë((_x)->
_mp‰_exp
 > 
__MPFR_EXP_INF
)

	)

743 
	#mp‰_sgn
(
_x
) \

744 ((
_x
)->
_mp‰_exp
 < 
__MPFR_EXP_INF
 ? \

745 (
	`mp‰_«n_p
 (
_x
Ë? 
	`mp‰_£t_î™geÊag
 (Ë: (
mp‰_void
) 0), 0 : \

746 
	`MPFR_SIGN
 (
_x
))

	)

749 
	#MPFR_VALUE_OF
(
x
Ë(0 ? (xË: (x))

	)

750 
	#mp‰_gë_¥ec
(
_x
Ë
	`MPFR_VALUE_OF
((_x)->
_mp‰_¥ec
)

	)

751 
	#mp‰_gë_exp
(
_x
Ë
	`MPFR_VALUE_OF
((_x)->
_mp‰_exp
)

	)

755 
	#mp‰_round
(
a
,
b
Ë
	`mp‰_röt
(◊), (b), 
MPFR_RNDNA
)

	)

756 
	#mp‰_åunc
(
a
,
b
Ë
	`mp‰_röt
(◊), (b), 
MPFR_RNDZ
)

	)

757 
	#mp‰_˚û
(
a
,
b
Ë
	`mp‰_röt
(◊), (b), 
MPFR_RNDU
)

	)

758 
	#mp‰_Êo‹
(
a
,
b
Ë
	`mp‰_röt
(◊), (b), 
MPFR_RNDD
)

	)

760 
	#mp‰_cmp_ui
(
b
,
i
Ë
	`mp‰_cmp_ui_2exp
((b),(i),0)

	)

761 
	#mp‰_cmp_si
(
b
,
i
Ë
	`mp‰_cmp_si_2exp
((b),(i),0)

	)

762 
	#mp‰_£t
(
a
,
b
,
r
Ë
	`mp‰_£t4
◊,b,r,
	`MPFR_SIGN
(b))

	)

763 
	#mp‰_abs
(
a
,
b
,
r
Ë
	`mp‰_£t4
◊,b,r,1)

	)

764 
	#mp‰_c›ysign
(
a
,
b
,
c
,
r
Ë
	`mp‰_£t4
◊,b,r,
	`MPFR_SIGN
(c))

	)

765 
	#mp‰_£tsign
(
a
,
b
,
s
,
r
Ë
	`mp‰_£t4
◊,b,r,(sË? -1 : 1)

	)

766 
	#mp‰_signbô
(
x
Ë(
	`MPFR_SIGN
(xË< 0)

	)

767 
	#mp‰_cmp
(
b
, 
c
Ë
	`mp‰_cmp3
(b, c, 1)

	)

768 
	#mp‰_mul_2exp
(
y
,
x
,
n
,
r
Ë
	`mp‰_mul_2ui
((y),(x),“),‘))

	)

769 
	#mp‰_div_2exp
(
y
,
x
,
n
,
r
Ë
	`mp‰_div_2ui
((y),(x),“),‘))

	)

801 #i‡
deföed
 (
__GNUC__
Ë&& !deföed(
__ICC
Ë&& !deföed(
__˝lu•lus
)

802 #i‡(
__GNUC__
 >= 2)

803 #unde‡
mp‰_cmp_ui


807 
	#mp‰_cmp_ui
(
_f
,
_u
) \

808 (
	`__buûtö_c⁄°™t_p
 (
_u
Ë&& (
mp‰_ul⁄g
) (_u) == 0 ? \

809 (
mp‰_sgn
Ë(
_f
) : \

810 
	`mp‰_cmp_ui_2exp
 ((
_f
), (
_u
), 0))

	)

811 #unde‡
mp‰_cmp_si


812 
	#mp‰_cmp_si
(
_f
,
_s
) \

813 (
	`__buûtö_c⁄°™t_p
 (
_s
Ë&& (
mp‰_l⁄g
) (_s) >= 0 ? \

814 
	`mp‰_cmp_ui
 ((
_f
), (
mp‰_ul⁄g
Ë(
mp‰_l⁄g
Ë(
_s
)) : \

815 
	`mp‰_cmp_si_2exp
 ((
_f
), (
_s
), 0))

	)

816 #i‡
__GNUC__
 > 2 || 
__GNUC_MINOR__
 >= 95

817 #unde‡
mp‰_£t_ui


818 
	#mp‰_£t_ui
(
_f
,
_u
,
_r
) \

819 (
	`__buûtö_c⁄°™t_p
 (
_u
Ë&& (
mp‰_ul⁄g
) (_u) == 0 ? \

820 
	`__exãnsi⁄__
 ({ \

821 
mp‰_±r
 
_p
 = (
_f
); \

822 
_p
->
_mp‰_sign
 = 1; \

823 
_p
->
_mp‰_exp
 = 
__MPFR_EXP_ZERO
; \

824 (
mp‰_void
Ë(
_r
); 0; }) : \

825 
	`mp‰_£t_ui_2exp
 ((
_f
), (
_u
), 0, (
_r
)))

	)

827 #unde‡
mp‰_£t_si


828 
	#mp‰_£t_si
(
_f
,
_s
,
_r
) \

829 (
	`__buûtö_c⁄°™t_p
 (
_s
Ë&& (
mp‰_l⁄g
) (_s) >= 0 ? \

830 
	`mp‰_£t_ui
 ((
_f
), (
mp‰_ul⁄g
Ë(
mp‰_l⁄g
Ë(
_s
), (
_r
)) : \

831 
	`mp‰_£t_si_2exp
 ((
_f
), (
_s
), 0, (
_r
)))

	)

836 
	#mp‰_cu°om_gë_size
(
p
Ë((
mp‰_size_t
) \

837 (((
p
)+
GMP_NUMB_BITS
-1)/GMP_NUMB_BITS* (
mp_limb_t
)))

	)

838 
	#mp‰_cu°om_öô
(
m
,
p
Ëdÿ{} 0)

	)

839 
	#mp‰_cu°om_gë_signifiˇnd
(
x
Ë((
mp‰_void
*)((x)->
_mp‰_d
))

	)

840 
	#mp‰_cu°om_gë_exp
(
x
Ë((x)->
_mp‰_exp
)

	)

841 
	#mp‰_cu°om_move
(
x
,
m
Ëdÿ{ ((x)->
_mp‰_d
 = (
mp_limb_t
*)(m)); } 0)

	)

842 
	#mp‰_cu°om_öô_£t
(
x
,
k
,
e
,
p
,
m
) do { \

843 
mp‰_±r
 
_x
 = (
x
); \

844 
mp‰_exp_t
 
_e
; \

845 
mp‰_köd_t
 
_t
; \

846 
mp‰_öt
 
_s
, 
_k
; \

847 
_k
 = (
k
); \

848 i‡(
_k
 >= 0) { \

849 
_t
 = (
mp‰_köd_t
Ë
_k
; \

850 
_s
 = 1; \

852 
_t
 = (
mp‰_köd_t
Ë-
k
; \

853 
_s
 = -1; \

855 
_e
 = 
_t
 =
MPFR_REGULAR_KIND
 ? (
e
) : \

856 
_t
 =
MPFR_NAN_KIND
 ? 
__MPFR_EXP_NAN
 : \

857 
_t
 =
MPFR_INF_KIND
 ? 
__MPFR_EXP_INF
 : 
__MPFR_EXP_ZERO
; \

858 
_x
->
_mp‰_¥ec
 = (
p
); \

859 
_x
->
_mp‰_sign
 = 
_s
; \

860 
_x
->
_mp‰_exp
 = 
_e
; \

861 
_x
->
_mp‰_d
 = (
mp_limb_t
*Ë(
m
); \

862 } 0)

	)

863 
	#mp‰_cu°om_gë_köd
(
x
) \

864 –(
x
)->
_mp‰_exp
 > 
__MPFR_EXP_INF
 ? \

865 (
mp‰_öt
Ë
MPFR_REGULAR_KIND
 * 
	`MPFR_SIGN
 (
x
) \

866 : (
x
)->
_mp‰_exp
 =
__MPFR_EXP_INF
 ? \

867 (
mp‰_öt
Ë
MPFR_INF_KIND
 * 
	`MPFR_SIGN
 (
x
) \

868 : (
x
)->
_mp‰_exp
 =
__MPFR_EXP_NAN
 ? (
mp‰_öt
Ë
MPFR_NAN_KIND
 \

869 : (
mp‰_öt
Ë
MPFR_ZERO_KIND
 * 
	`MPFR_SIGN
 (
x
Ë)

	)

875 
	#mp‰_öô_£t_si
(
x
, 
i
, 
∫d
) \

876 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_si
((x), (
i
), (
∫d
)Ë)

	)

877 
	#mp‰_öô_£t_ui
(
x
, 
i
, 
∫d
) \

878 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_ui
((x), (
i
), (
∫d
)Ë)

	)

879 
	#mp‰_öô_£t_d
(
x
, 
d
, 
∫d
) \

880 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_d
((x), (
d
), (
∫d
)Ë)

	)

881 
	#mp‰_öô_£t_ld
(
x
, 
d
, 
∫d
) \

882 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_ld
((x), (
d
), (
∫d
)Ë)

	)

883 
	#mp‰_öô_£t_z
(
x
, 
i
, 
∫d
) \

884 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_z
((x), (
i
), (
∫d
)Ë)

	)

885 
	#mp‰_öô_£t_q
(
x
, 
i
, 
∫d
) \

886 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_q
((x), (
i
), (
∫d
)Ë)

	)

887 
	#mp‰_öô_£t
(
x
, 
y
, 
∫d
) \

888 –
	`mp‰_öô
(
x
), 
	`mp‰_£t
((x), (
y
), (
∫d
)Ë)

	)

889 
	#mp‰_öô_£t_f
(
x
, 
y
, 
∫d
) \

890 –
	`mp‰_öô
(
x
), 
	`mp‰_£t_f
((x), (
y
), (
∫d
)Ë)

	)

900 
	#mp‰_cmp_abs
 
mp‰_cm∑bs


	)

901 
	#mp‰_round_¥ec
(
x
,
r
,
p
Ë
	`mp‰_¥ec_round
(x,p,r)

	)

902 
	#__gmp_deÁu…_roundög_mode
 (
	`mp‰_gë_deÁu…_roundög_mode
())

	)

903 
	#__mp‰_emö
 (
	`mp‰_gë_emö
())

	)

904 
	#__mp‰_emax
 (
	`mp‰_gë_emax
())

	)

905 
	#__mp‰_deÁu…_Â_bô_¥ecisi⁄
 (
	`mp‰_gë_deÁu…_Â_bô_¥ecisi⁄
())

	)

906 
	#MPFR_EMIN_MIN
 
	`mp‰_gë_emö_mö
()

	)

907 
	#MPFR_EMIN_MAX
 
	`mp‰_gë_emö_max
()

	)

908 
	#MPFR_EMAX_MIN
 
	`mp‰_gë_emax_mö
()

	)

909 
	#MPFR_EMAX_MAX
 
	`mp‰_gë_emax_max
()

	)

910 
	#mp‰_vîsi⁄
 (
	`mp‰_gë_vîsi⁄
())

	)

911 #i‚de‡
mpz_£t_‰


912 
	#mpz_£t_‰
 
mp‰_gë_z


	)

914 
	#mp‰_add_⁄e_uÕ
(
x
,
r
) \

915 (
	`mp‰_sgn
 (
x
Ë> 0 ? 
	`mp‰_√xèbove
 (xË: 
	`mp‰_√xtbñow
 (x))

	)

916 
	#mp‰_sub_⁄e_uÕ
(
x
,
r
) \

917 (
	`mp‰_sgn
 (
x
Ë> 0 ? 
	`mp‰_√xtbñow
 (xË: 
	`mp‰_√xèbove
 (x))

	)

918 
	#mp‰_gë_z_exp
 
mp‰_gë_z_2exp


	)

919 
	#mp‰_cu°om_gë_m™tisß
 
mp‰_cu°om_gë_signifiˇnd


	)

939 #i‡(
deföed
 (
INTMAX_C
Ë&& deföed (
UINTMAX_C
Ë&& !deföed(
__˝lu•lus
)) || \

940 
deföed
 (
MPFR_USE_INTMAX_T
) || \

941 
deföed
 (
_STDINT_H
Ë|| deföed (
_STDINT_H_
Ë|| 
	$deföed
 (
_STDINT
)

942 #i‚de‡
_MPFR_H_HAVE_INTMAX_T


943 
	#_MPFR_H_HAVE_INTMAX_T
 1

	)

945 #i‡
	`deföed
 (
__˝lu•lus
)

949 
	#mp‰_£t_sj
 
__gmp‰_£t_sj


	)

950 
	#mp‰_£t_sj_2exp
 
__gmp‰_£t_sj_2exp


	)

951 
	#mp‰_£t_uj
 
__gmp‰_£t_uj


	)

952 
	#mp‰_£t_uj_2exp
 
__gmp‰_£t_uj_2exp


	)

953 
	#mp‰_gë_sj
 
__gmp‰_mp‰_gë_sj


	)

954 
	#mp‰_gë_uj
 
__gmp‰_mp‰_gë_uj


	)

955 
__MPFR_DECLSPEC
 
mp‰_£t_sj
 
	`_MPFR_PROTO
 ((
mp‰_t
, 
ötmax_t
, 
mp‰_∫d_t
));

956 
__MPFR_DECLSPEC
 

957 
mp‰_£t_sj_2exp
 
	`_MPFR_PROTO
 ((
mp‰_t
, 
ötmax_t
, i¡max_t, 
mp‰_∫d_t
));

958 
__MPFR_DECLSPEC
 
mp‰_£t_uj
 
	`_MPFR_PROTO
 ((
mp‰_t
, 
uötmax_t
, 
mp‰_∫d_t
));

959 
__MPFR_DECLSPEC
 

960 
mp‰_£t_uj_2exp
 
	`_MPFR_PROTO
 ((
mp‰_t
, 
uötmax_t
, 
ötmax_t
, 
mp‰_∫d_t
));

961 
__MPFR_DECLSPEC
 
ötmax_t
 
mp‰_gë_sj
 
	`_MPFR_PROTO
 ((
mp‰_§˝å
, 
mp‰_∫d_t
));

962 
__MPFR_DECLSPEC
 
uötmax_t
 
mp‰_gë_uj
 
	`_MPFR_PROTO
 ((
mp‰_§˝å
, 
mp‰_∫d_t
));

964 #i‡
	`deföed
 (
__˝lu•lus
)

965 
	}
}

973 #i‡
deföed
 (
_GMP_H_HAVE_FILE
Ë|| deföed (
MPFR_USE_FILE
)

974 #i‚de‡
_MPFR_H_HAVE_FILE


975 
	#_MPFR_H_HAVE_FILE
 1

	)

977 #i‡
deföed
 (
__˝lu•lus
)

981 
	#mp‰_öp_°r
 
__gmp‰_öp_°r


	)

982 
	#mp‰_out_°r
 
__gmp‰_out_°r


	)

983 
__MPFR_DECLSPEC
 
size_t
 
mp‰_öp_°r
 
_MPFR_PROTO
 ((
mp‰_±r
, 
FILE
*, ,

984 
mp‰_∫d_t
));

985 
__MPFR_DECLSPEC
 
size_t
 
mp‰_out_°r
 
_MPFR_PROTO
 ((
FILE
*, , size_t,

986 
mp‰_§˝å
, 
mp‰_∫d_t
));

987 
	#mp‰_Ârötf
 
__gmp‰_Ârötf


	)

988 
__MPFR_DECLSPEC
 
mp‰_Ârötf
 
_MPFR_PROTO
 ((
FILE
*, 
__gmp_c⁄°
 *,

991 #i‡
deföed
 (
__˝lu•lus
)

1000 #i‡
deföed
 (
_GMP_H_HAVE_VA_LIST
Ë|| deföed (
MPFR_USE_VA_LIST
)

1001 #i‚de‡
_MPFR_H_HAVE_VA_LIST


1002 
	#_MPFR_H_HAVE_VA_LIST
 1

	)

1004 #i‡
deföed
 (
__˝lu•lus
)

1008 
	#mp‰_v¥ötf
 
__gmp‰_v¥ötf


	)

1009 
	#mp‰_va•rötf
 
__gmp‰_va•rötf


	)

1010 
	#mp‰_v•rötf
 
__gmp‰_v•rötf


	)

1011 
	#mp‰_v¢¥ötf
 
__gmp‰_v¢¥ötf


	)

1012 
__MPFR_DECLSPEC
 
mp‰_v¥ötf
 
_MPFR_PROTO
 ((
__gmp_c⁄°
 *, 
va_li°
));

1013 
__MPFR_DECLSPEC
 
mp‰_va•rötf
 
_MPFR_PROTO
 ((**, 
__gmp_c⁄°
 *,

1014 
va_li°
));

1015 
__MPFR_DECLSPEC
 
mp‰_v•rötf
 
_MPFR_PROTO
 ((*, 
__gmp_c⁄°
 *,

1016 
va_li°
));

1017 
__MPFR_DECLSPEC
 
mp‰_v¢¥ötf
 
_MPFR_PROTO
 ((*, 
size_t
,

1018 
__gmp_c⁄°
 *, 
va_li°
));

1020 #i‡
deföed
 (
__˝lu•lus
)

1030 #i‡
deföed
 (
_MPFR_H_HAVE_VA_LIST
Ë&& deföed (
_MPFR_H_HAVE_FILE
)

1031 #i‚de‡
_MPFR_H_HAVE_VA_LIST_FILE


1032 
	#_MPFR_H_HAVE_VA_LIST_FILE
 1

	)

1034 #i‡
deföed
 (
__˝lu•lus
)

1038 
	#mp‰_vÂrötf
 
__gmp‰_vÂrötf


	)

1039 
__MPFR_DECLSPEC
 
mp‰_vÂrötf
 
_MPFR_PROTO
 ((
FILE
*, 
__gmp_c⁄°
 *,

1040 
va_li°
));

1042 #i‡
deföed
 (
__˝lu•lus
)

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


43 
	#_POSIX_V7_ILP32_OFF32
 1

	)

44 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

45 
	#_POSIX_V6_ILP32_OFF32
 1

	)

46 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

47 
	#_XBS5_ILP32_OFF32
 1

	)

48 
	#_XBS5_ILP32_OFFBIG
 1

	)

63 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

64 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

65 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

66 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

67 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

68 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #i‚de‡
__exã∫_ölöe


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

150 
__STRING_INLINE
 *
	$__memmove_g
 (*, 
__c⁄°
 *, 
size_t
)

151 
	`__asm__
 ("memmove");

153 
__STRING_INLINE
 *

154 
	$__memmove_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

156 
__d0
, 
__d1
, 
__d2
;

157 *
__tmp
 = 
__de°
;

158 i‡(
__de°
 < 
__§c
)

159 
__asm__
 
__vﬁ©ûe__


162 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

163 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

164 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

165 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

167 
__asm__
 
__vﬁ©ûe__


171 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

172 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

173 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

174 "2" (
__n
 - 1 + (*Ë
__tmp
),

175 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

176  
__de°
;

177 
	}
}

181 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

182 #i‚de‡
_FORCE_INLINES


183 #i‚de‡
__PIC__


185 
__STRING_INLINE
 

186 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

188 
__d0
, 
__d1
, 
__d2
;

189 
__ªs
;

190 
__asm__
 
__vﬁ©ûe__


198 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

199 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

200 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

201 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

203  
__ªs
;

204 
	}
}

209 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

210 
	#_USE_STRING_ARCH_mem£t
 1

	)

211 
	#mem£t
(
s
, 
c
, 
n
) \

212 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

213 ? ((
n
) == 1 \

214 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

215 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

216 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

217 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

218 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

219 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

220 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

221 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

222 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

224 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

225 *((*Ë
__s
Ë(Ë(
c
); \

226 
__s
; })

	)

228 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

229 ({ *
__s
 = (
s
); \

231 
__ui
; \

232 
__usi
; \

233 
__uc
; \

234 } *
__u
 = 
__s
; \

235 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

241 i‡((
n
) == 3 || (n) >= 5) \

242 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

245 
n
) \

248 
__u
->
__ui
 = 
__c
; \

249 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

251 
__u
->
__ui
 = 
__c
; \

252 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__usi
 = (Ë
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

259 
__u
->
__uc
 = (Ë
__c
; \

263 
__u
->
__ui
 = 
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

266 
__u
->
__ui
 = 
__c
; \

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__usi
 = (Ë
__c
; \

276 
__u
->
__ui
 = 
__c
; \

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__uc
 = (Ë
__c
; \

289 
__u
->
__ui
 = 
__c
; \

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

303 
__s
; })

	)

305 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

306 (((
n
) % 4 == 0) \

307 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

308 
n
) \

309 : (((
n
) % 2 == 0) \

310 ? 
	`__mem£t_c˙_by2
 (
s
, \

311 ((Ë((Ë(
c
))) * 0x01010101,\

312 
n
) \

313 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

315 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

316 
size_t
 
__n
);

318 
__STRING_INLINE
 *

319 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

321 *
__tmp
 = 
__s
;

322 
__d0
;

323 #ifde‡
__i686__


324 
__asm__
 
__vﬁ©ûe__


327 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

328 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

329 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

332 
__asm__
 
__vﬁ©ûe__


338 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

339 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

340 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

343  
__s
;

344 
	}
}

346 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

347 
size_t
 
__n
);

349 
__STRING_INLINE
 *

350 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

352 
__d0
, 
__d1
;

353 *
__tmp
 = 
__s
;

354 #ifde‡
__i686__


355 
__asm__
 
__vﬁ©ûe__


359 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

360 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

361 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

364 
__asm__
 
__vﬁ©ûe__


370 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

371 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

372 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

375  
__s
;

376 
	}
}

378 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

379 (((
n
) % 4 == 0) \

380 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

381 : (((
n
) % 2 == 0) \

382 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

383 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

385 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

387 
__STRING_INLINE
 *

388 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

390 *
__tmp
 = 
__s
;

391 
__d0
;

392 
__asm__
 
__vﬁ©ûe__


402 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

403 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

404 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

406  
__s
;

407 
	}
}

409 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

411 
__STRING_INLINE
 *

412 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

414 
__d0
, 
__d1
;

415 *
__tmp
 = 
__s
;

416 
__asm__
 
__vﬁ©ûe__


427 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

428 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

429 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

431  
__s
;

432 
	}
}

436 
	#_HAVE_STRING_ARCH_memchr
 1

	)

437 #i‚de‡
_FORCE_INLINES


438 
__STRING_INLINE
 *

439 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

441 
__d0
;

442 #ifde‡
__i686__


443 
__d1
;

445 *
__ªs
;

446 i‡(
__n
 == 0)

447  
NULL
;

448 #ifde‡
__i686__


449 
__asm__
 
__vﬁ©ûe__


453 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

454 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

455 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

458 
__asm__
 
__vﬁ©ûe__


464 : "=D" (
__ªs
), "=&c" (
__d0
)

465 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

466 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

469  
__ªs
 - 1;

470 
	}
}

473 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

474 #i‚de‡
_FORCE_INLINES


475 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

477 
__STRING_INLINE
 *

478 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

480 
__d0
;

481 #ifde‡
__i686__


482 
__d1
;

484 *
__ªs
;

485 i‡(
__n
 == 0)

486  
NULL
;

487 #ifde‡
__i686__


488 
__asm__
 
__vﬁ©ûe__


494 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

495 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

496 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

499 
__asm__
 
__vﬁ©ûe__


506 : "=D" (
__ªs
), "=&c" (
__d0
)

507 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

508 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

511  
__ªs
;

512 
	}
}

513 #ifde‡
__USE_GNU


514 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

519 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

520 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

522 #i‚de‡
_FORCE_INLINES


523 
__STRING_INLINE
 *

524 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

526 
__d0
;

527 *
__ªs
;

528 
__asm__
 
__vﬁ©ûe__


531 : "=D" (
__ªs
), "=&c" (
__d0
)

532 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

533 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

535  
__ªs
 - 1;

536 
	}
}

537 #ifde‡
__USE_GNU


538 
__STRING_INLINE
 *

539 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

541  
	`__øwmemchr
 (
__s
, 
__c
);

542 
	}
}

548 
	#_HAVE_STRING_ARCH_°æí
 1

	)

549 
	#°æí
(
°r
) \

550 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

551 ? 
	`__buûtö_°æí
 (
°r
) \

552 : 
	`__°æí_g
 (
°r
)))

	)

553 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

555 
__STRING_INLINE
 
size_t


556 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

558 
__dummy
;

559 
__c⁄°
 *
__tmp
 = 
__°r
;

560 
__asm__
 
__vﬁ©ûe__


566 : "Ù" (
__tmp
), "=&q" (
__dummy
)

567 : "0" (
__°r
),

568 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

570  
__tmp
 - 
__°r
 - 1;

571 
	}
}

575 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

576 
	#°r˝y
(
de°
, 
§c
) \

577 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

578 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

579 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

580 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

581 (
__c⁄°
 *Ë(
§c
), \

582 
	`°æí
 (
§c
) + 1)) \

583 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

585 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

586 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

588 
__ui
; \

589 
__usi
; \

590 
__uc
; \

591 
__c
; \

592 } *
__u
 = (*Ë
__de°
; \

593 
§˛í
) \

596 
__u
->
__uc
 = '\0'; \

599 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

602 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

603 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

604 
__u
->
__uc
 = '\0'; \

607 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

620 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

621 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

622 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

624 
__u
->
__uc
 = '\0'; \

627 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

628 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

629 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

632 (*Ë
__de°
; }))

	)

634 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

636 
__STRING_INLINE
 *

637 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

639 *
__tmp
 = 
__de°
;

640 
__dummy
;

641 
__asm__
 
__vﬁ©ûe__


650 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

651 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

652 : "0" (
__§c
), "1" (
__tmp
),

653 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

655  
__de°
;

656 
	}
}

659 #ifde‡
__USE_GNU


660 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

662 
	#__°p˝y
(
de°
, 
§c
) \

663 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

664 ? (
	`°æí
 (
§c
) + 1 <= 8 \

665 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

666 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

667 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

668 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

669 ((
§˛í
) % 4 == 0 \

670 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

671 : ((
§˛í
) % 2 == 0 \

672 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

673 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

676 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

678 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

679 (
	`__exãnsi⁄__
 ({ union { \

680 
__ui
; \

681 
__usi
; \

682 
__uc
; \

683 
__c
; \

684 } *
__u
 = (*Ë(
de°
); \

685 
§˛í
) \

688 
__u
->
__uc
 = '\0'; \

691 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

692 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

695 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

697 
__u
->
__uc
 = '\0'; \

700 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

701 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__uc
 = '\0'; \

709 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

710 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

719 
__u
->
__uc
 = '\0'; \

722 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

723 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

724 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

725 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

728 (*Ë
__u
; }))

	)

730 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

731 
size_t
 
__§˛í
);

733 
__STRING_INLINE
 *

734 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

736 *
__tmp
 = 
__de°
;

737 
__d0
, 
__d1
;

738 
__asm__
 
__vﬁ©ûe__


746 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

747 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

749  
__tmp
;

750 
	}
}

752 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

753 
size_t
 
__§˛í
);

755 
__STRING_INLINE
 *

756 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

758 *
__tmp
 = 
__de°
;

759 
__d0
, 
__d1
;

760 
__asm__
 
__vﬁ©ûe__


773 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

774 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

775 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

776 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

778  
__tmp
 + 2;

779 
	}
}

781 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

782 
size_t
 
__§˛í
);

784 
__STRING_INLINE
 *

785 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

787 
__d0
, 
__d1
;

788 *
__tmp
 = 
__de°
;

789 
__asm__
 
__vﬁ©ûe__


800 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

801 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

802 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

803 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

805  
__tmp
;

806 
	}
}

808 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

810 
__STRING_INLINE
 *

811 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

813 *
__tmp
 = 
__de°
;

814 
__dummy
;

815 
__asm__
 
__vﬁ©ûe__


824 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

825 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

826 : "0" (
__§c
), "1" (
__tmp
),

827 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

829  
__tmp
 - 1;

830 
	}
}

835 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

836 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

837 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

838 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

839 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

840 (
__c⁄°
 *Ë(
§c
), 
n
) \

841 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

842 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

843 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

844 (((
§˛í
) % 4 == 0) \

845 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

846 : (((
§˛í
) % 2 == 0) \

847 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

848 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

850 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

851 
size_t
 
__§˛í
, size_à
__n
);

853 
__STRING_INLINE
 *

854 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

856 *
__tmp
 = 
__de°
;

857 
__dummy1
, 
__dummy2
;

858 
__asm__
 
__vﬁ©ûe__


866 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

867 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

868 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

869 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

871 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

872  
__de°
;

873 
	}
}

875 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

876 
size_t
 
__§˛í
, size_à
__n
);

878 
__STRING_INLINE
 *

879 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

881 *
__tmp
 = 
__de°
;

882 
__dummy1
, 
__dummy2
;

883 
__asm__
 
__vﬁ©ûe__


896 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

897 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

898 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

899 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

901 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

902  
__de°
;

903 
	}
}

905 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

906 
size_t
 
__§˛í
, size_à
__n
);

908 
__STRING_INLINE
 *

909 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

911 
__d0
, 
__d1
;

912 *
__tmp
 = 
__de°
;

913 
__asm__
 
__vﬁ©ûe__


924 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

925 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

926 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

927 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

929 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

930  
__de°
;

931 
	}
}

933 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

934 
size_t
 
__n
);

936 
__STRING_INLINE
 *

937 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

939 *
__tmp
 = 
__de°
;

940 
__dummy
;

941 i‡(
__n
 > 0)

942 
__asm__
 
__vﬁ©ûe__


958 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

959 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

962  
__de°
;

963 
	}
}

967 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

968 
	#°rˇt
(
de°
, 
§c
) \

969 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

970 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

971 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

973 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

974 
size_t
 
__§˛í
);

976 
__STRING_INLINE
 *

977 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

979 #ifde‡
__i686__


980 
__d0
;

981 *
__tmp
;

982 
__asm__
 
__vﬁ©ûe__


984 : "=D" (
__tmp
), "=&c" (
__d0
),

985 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

986 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

987 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

989 --
__tmp
;

991 *
__tmp
 = 
__de°
 - 1;

992 
__asm__
 
__vﬁ©ûe__


997 : "Ù" (
__tmp
),

998 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

999 : "0" (
__tmp
),

1000 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1003 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1004  
__de°
;

1005 
	}
}

1007 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1009 
__STRING_INLINE
 *

1010 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1012 *
__tmp
 = 
__de°
 - 1;

1013 
__dummy
;

1014 
__asm__
 
__vﬁ©ûe__


1026 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1027 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1028 : "1" (
__tmp
), "2" (
__§c
),

1029 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1031  
__de°
;

1032 
	}
}

1036 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1037 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1038 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1039 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1040 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1041 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1042 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1043 (
__c⁄°
 *Ë(
§c
), \

1044 (
n
)Ë0, 
__de°
)) \

1045 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1047 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1048 
size_t
 
__n
);

1050 
__STRING_INLINE
 *

1051 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1053 *
__tmp
 = 
__de°
;

1054 
__dummy
;

1055 #ifde‡
__i686__


1056 
__asm__
 
__vﬁ©ûe__


1070 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1071 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1074 --
__tmp
;

1075 
__asm__
 
__vﬁ©ûe__


1092 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1093 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1096  
__de°
;

1097 
	}
}

1101 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1102 
	#°rcmp
(
s1
, 
s2
) \

1103 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1104 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1105 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1106 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1107 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1108 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1109 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1110 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1111 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1112 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1113 (
__c⁄°
 *Ë(
s2
), \

1114 
	`°æí
 (
s1
)) \

1115 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1116 (
__c⁄°
 *Ë(
s2
), \

1117 
	`°æí
 (
s1
))) \

1118 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1119 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1120 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1121 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1122 (
__c⁄°
 *Ë(
s2
), \

1123 
	`°æí
 (
s2
)) \

1124 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1125 (
__c⁄°
 *Ë(
s2
), \

1126 
	`°æí
 (
s2
))) \

1127 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1129 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1130 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1131 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1134 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1136 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1137 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1138 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1141 
__ªsu…
; }))

	)

1143 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1144 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1145 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1146 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1149 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1152 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1156 
__ªsu…
; }))

	)

1158 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1159 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1160 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1161 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1164 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1167 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1171 
__ªsu…
; }))

	)

1173 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1175 
__STRING_INLINE
 

1176 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1178 
__ªs
;

1179 
__asm__
 
__vﬁ©ûe__


1195 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1196 : "1" (
__s1
), "2" (
__s2
),

1197 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1198 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1200  
__ªs
;

1201 
	}
}

1205 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1206 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1208 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1209 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1210 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1211 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1213 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1214 
size_t
 
__n
);

1216 
__STRING_INLINE
 

1217 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1219 
__ªs
;

1220 
__asm__
 
__vﬁ©ûe__


1239 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1240 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1241 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1242 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1244  
__ªs
;

1245 
	}
}

1249 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1250 
	#_USE_STRING_ARCH_°rchr
 1

	)

1251 
	#°rchr
(
s
, 
c
) \

1252 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1253 ? ((
c
) == '\0' \

1254 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1255 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1256 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1258 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1260 
__STRING_INLINE
 *

1261 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1263 
__d0
;

1264 *
__ªs
;

1265 
__asm__
 
__vﬁ©ûe__


1275 : "Ù" (
__ªs
), "=&a" (
__d0
)

1276 : "0" (
__s
), "1" (
__c
),

1277 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1279  
__ªs
;

1280 
	}
}

1282 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1284 
__STRING_INLINE
 *

1285 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1287 
__d0
;

1288 *
__ªs
;

1289 
__asm__
 
__vﬁ©ûe__


1300 : "Ù" (
__ªs
), "=&a" (
__d0
)

1301 : "0" (
__s
), "1" (
__c
),

1302 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1304  
__ªs
;

1305 
	}
}

1309 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1310 
	#__°rch∫ul
(
s
, 
c
) \

1311 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1312 ? ((
c
) == '\0' \

1313 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1314 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1315 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1317 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1319 
__STRING_INLINE
 *

1320 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1322 
__d0
;

1323 *
__ªs
;

1324 
__asm__
 
__vﬁ©ûe__


1334 : "Ù" (
__ªs
), "=&a" (
__d0
)

1335 : "0" (
__s
), "1" (
__c
),

1336 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1338  
__ªs
;

1339 
	}
}

1341 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1343 
__STRING_INLINE
 *

1344 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1346 
__d0
;

1347 *
__ªs
;

1348 
__asm__
 
__vﬁ©ûe__


1359 : "Ù" (
__ªs
), "=&a" (
__d0
)

1360 : "0" (
__s
), "1" (
__c
),

1361 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1363  
__ªs
;

1364 
	}
}

1365 #ifde‡
__USE_GNU


1366 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1370 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1372 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1373 
	#ödex
(
s
, 
c
) \

1374 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1375 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1376 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1381 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1382 
	#°ºchr
(
s
, 
c
) \

1383 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1384 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1385 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1387 #ifde‡
__i686__


1388 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1390 
__STRING_INLINE
 *

1391 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1393 
__d0
, 
__d1
;

1394 *
__ªs
;

1395 
__asm__
 
__vﬁ©ûe__


1403 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1404 : "0" (1), "1" (
__s
), "2" (
__c
),

1405 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1407  
__ªs
 - 1;

1408 
	}
}

1410 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1412 
__STRING_INLINE
 *

1413 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1415 
__d0
, 
__d1
;

1416 *
__ªs
;

1417 
__asm__
 
__vﬁ©ûe__


1426 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1427 : "0" (1), "1" (
__s
), "2" (
__c
),

1428 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1430  
__ªs
 - 1;

1431 
	}
}

1433 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1435 
__STRING_INLINE
 *

1436 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1438 
__d0
, 
__d1
;

1439 *
__ªs
;

1440 
__asm__
 
__vﬁ©ûe__


1450 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1451 : "0" (0), "1" (
__s
), "2" (
__c
),

1452 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1454  
__ªs
;

1455 
	}
}

1457 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1459 
__STRING_INLINE
 *

1460 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1462 
__d0
, 
__d1
;

1463 *
__ªs
;

1464 
__asm__
 
__vﬁ©ûe__


1475 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1476 : "0" (0), "1" (
__s
), "2" (
__c
),

1477 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1479  
__ªs
;

1480 
	}
}

1484 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1486 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1487 
	#rödex
(
s
, 
c
) \

1488 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1489 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1490 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1496 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1497 
	#°rc•n
(
s
, 
ªje˘
) \

1498 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1499 ? ((
ªje˘
)[0] == '\0' \

1500 ? 
	`°æí
 (
s
) \

1501 : ((
ªje˘
)[1] == '\0' \

1502 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1503 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1504 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1506 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1508 #i‚de‡
_FORCE_INLINES


1509 
__STRING_INLINE
 
size_t


1510 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1512 
__d0
;

1513 *
__ªs
;

1514 
__asm__
 
__vﬁ©ûe__


1523 : "Ù" (
__ªs
), "=&a" (
__d0
)

1524 : "0" (
__s
), "1" (
__ªje˘
),

1525 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1527  (
__ªs
 - 1Ë- 
__s
;

1528 
	}
}

1531 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1532 
size_t
 
__ªje˘_Àn
);

1534 
__STRING_INLINE
 
size_t


1535 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1537 
__d0
, 
__d1
, 
__d2
;

1538 
__c⁄°
 *
__ªs
;

1539 
__asm__
 
__vﬁ©ûe__


1550 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1551 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1553  (
__ªs
 - 1Ë- 
__s
;

1554 
	}
}

1556 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1557 #ifde‡
__PIC__


1559 
__STRING_INLINE
 
size_t


1560 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1562 
__d0
, 
__d1
, 
__d2
;

1563 
__c⁄°
 *
__ªs
;

1564 
__asm__
 
__vﬁ©ûe__


1581 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1582 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1584  (
__ªs
 - 1Ë- 
__s
;

1585 
	}
}

1587 
__STRING_INLINE
 
size_t


1588 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1590 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1591 
__c⁄°
 *
__ªs
;

1592 
__asm__
 
__vﬁ©ûe__


1606 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1607 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1610  (
__ªs
 - 1Ë- 
__s
;

1611 
	}
}

1617 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1618 
	#°r•n
(
s
, 
ac˚±
) \

1619 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1620 ? ((
ac˚±
)[0] == '\0' \

1621 ? ((Ë(
s
), 0) \

1622 : ((
ac˚±
)[1] == '\0' \

1623 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1624 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1625 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1627 #i‚de‡
_FORCE_INLINES


1628 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1630 
__STRING_INLINE
 
size_t


1631 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1633 
__d0
;

1634 *
__ªs
;

1636 
__asm__
 
__vﬁ©ûe__


1642 : "Ù" (
__ªs
), "=&q" (
__d0
)

1643 : "0" (
__s
), "1" (
__ac˚±
),

1644 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1646  (
__ªs
 - 1Ë- 
__s
;

1647 
	}
}

1650 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1651 
size_t
 
__ac˚±_Àn
);

1653 
__STRING_INLINE
 
size_t


1654 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1656 
__d0
, 
__d1
, 
__d2
;

1657 
__c⁄°
 *
__ªs
;

1658 
__asm__
 
__vﬁ©ûe__


1669 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1670 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1673 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1674 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1676  (
__ªs
 - 1Ë- 
__s
;

1677 
	}
}

1679 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1680 #ifde‡
__PIC__


1682 
__STRING_INLINE
 
size_t


1683 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1685 
__d0
, 
__d1
, 
__d2
;

1686 
__c⁄°
 *
__ªs
;

1687 
__asm__
 
__vﬁ©ûe__


1703 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1704 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1706  (
__ªs
 - 1Ë- 
__s
;

1707 
	}
}

1709 
__STRING_INLINE
 
size_t


1710 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1712 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1713 
__c⁄°
 *
__ªs
;

1714 
__asm__
 
__vﬁ©ûe__


1728 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1729 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1731  (
__ªs
 - 1Ë- 
__s
;

1732 
	}
}

1737 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1738 
	#°Ωbrk
(
s
, 
ac˚±
) \

1739 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1740 ? ((
ac˚±
)[0] == '\0' \

1741 ? ((Ë(
s
), (*) 0) \

1742 : ((
ac˚±
)[1] == '\0' \

1743 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1744 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1745 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1747 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1748 
size_t
 
__ac˚±_Àn
);

1750 
__STRING_INLINE
 *

1751 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1753 
__d0
, 
__d1
, 
__d2
;

1754 *
__ªs
;

1755 
__asm__
 
__vﬁ©ûe__


1770 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1771 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1773  
__ªs
;

1774 
	}
}

1776 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1777 #ifde‡
__PIC__


1779 
__STRING_INLINE
 *

1780 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1782 
__d0
, 
__d1
, 
__d2
;

1783 *
__ªs
;

1784 
__asm__
 
__vﬁ©ûe__


1805 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1806 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1808  
__ªs
;

1809 
	}
}

1811 
__STRING_INLINE
 *

1812 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1814 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1815 *
__ªs
;

1816 
__asm__
 
__vﬁ©ûe__


1835 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1836 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1838  
__ªs
;

1839 
	}
}

1844 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1845 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1846 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1847 ? ((
√edÀ
)[0] == '\0' \

1848 ? (
hay°ack
) \

1849 : ((
√edÀ
)[1] == '\0' \

1850 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1851 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1852 
	`°æí
 (
√edÀ
)))) \

1853 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1857 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1858 
size_t
 
__√edÀ_Àn
);

1860 
__STRING_INLINE
 *

1861 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1862 
size_t
 
__√edÀ_Àn
)

1864 
__d0
, 
__d1
, 
__d2
;

1865 *
__ªs
;

1866 
__asm__
 
__vﬁ©ûe__


1879 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1880 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1882  
__ªs
;

1883 
	}
}

1885 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1886 #ifde‡
__PIC__


1888 
__STRING_INLINE
 *

1889 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1891 
__d0
, 
__d1
, 
__d2
;

1892 *
__ªs
;

1893 
__asm__
 
__vﬁ©ûe__


1912 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1913 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1914 "d" (
__√edÀ
)

1916  
__ªs
;

1917 
	}
}

1919 
__STRING_INLINE
 *

1920 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1922 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1923 *
__ªs
;

1924 
__asm__
 
__vﬁ©ûe__


1941 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1942 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1943 "b" (
__√edÀ
)

1945  
__ªs
;

1946 
	}
}

1952 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1953 #ifde‡
__i686__


1954 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1955 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1956 ? 
	`__buûtö_ffs
 (
w‹d
) \

1957 : ({ 
__˙t
, 
__tmp
; \

1958 
__asm__
 
__vﬁ©ûe__
 \

1961 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1962 : "rm" (
w‹d
), "1" (-1)); \

1963 
__˙t
 + 1; }))

	)

1965 #i‚de‡
ff¶


1966 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1971 #i‚de‡
_FORCE_INLINES


1972 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/gmp-i386.h

21 #i‚de‡
__GMP_H__


23 #i‡
deföed
 (
__˝lu•lus
)

24 
	~<iosfwd
>

25 
	~<c°dio
>

30 #i‡! 
deföed
 (
__GMP_WITHIN_CONFIGURE
)

31 
	#__GMP_HAVE_HOST_CPU_FAMILY_powî
 0

	)

32 
	#__GMP_HAVE_HOST_CPU_FAMILY_powîpc
 0

	)

33 
	#GMP_LIMB_BITS
 32

	)

34 
	#GMP_NAIL_BITS
 0

	)

36 
	#GMP_NUMB_BITS
 (
GMP_LIMB_BITS
 - 
GMP_NAIL_BITS
)

	)

37 
	#GMP_NUMB_MASK
 ((~ 
	`__GMP_CAST
 (
mp_limb_t
, 0)Ë>> 
GMP_NAIL_BITS
)

	)

38 
	#GMP_NUMB_MAX
 
GMP_NUMB_MASK


	)

39 
	#GMP_NAIL_MASK
 (~ 
GMP_NUMB_MASK
)

	)

45 #i‚de‡
__GNU_MP__


46 
	#__GNU_MP__
 5

	)

48 
	#__√ed_size_t


	)

49 #i‡
deföed
 (
__˝lu•lus
)

50 
	~<c°ddef
>

52 
	~<°ddef.h
>

54 #unde‡
__√ed_size_t


57 #i‡! 
deföed
 (
__GMP_WITHIN_CONFIGURE
)

59 
	#__GMP_LIBGMP_DLL
 0

	)

88 #i‡ 
deföed
 (
__STDC__
) \

89 || 
deföed
 (
__˝lu•lus
) \

90 || 
deföed
 (
_AIX
) \

91 || 
deföed
 (
__DECC
) \

92 || (
deföed
 (
__mùs
Ë&& deföed (
_SYSTYPE_SVR4
)) \

93 || 
deföed
 (
_MSC_VER
) \

94 || 
	$deföed
 (
_WIN32
)

95 
	#__GMP_HAVE_CONST
 1

	)

96 
	#__GMP_HAVE_PROTOTYPES
 1

	)

97 
	#__GMP_HAVE_TOKEN_PASTE
 1

	)

99 
	#__GMP_HAVE_CONST
 0

	)

100 
	#__GMP_HAVE_PROTOTYPES
 0

	)

101 
	#__GMP_HAVE_TOKEN_PASTE
 0

	)

105 #i‡
__GMP_HAVE_CONST


106 
	#__gmp_c⁄°
 c⁄°

	)

107 
	#__gmp_sig√d
 sig√d

	)

109 
	#__gmp_c⁄°


	)

110 
	#__gmp_sig√d


	)

154 #i‡
	`deföed
 (
__GNUC__
)

155 
	#__GMP_DECLSPEC_EXPORT
 
	`__de˛•ec
(
__dŒexp‹t__
)

	)

156 
	#__GMP_DECLSPEC_IMPORT
 
	`__de˛•ec
(
__dŒimp‹t__
)

	)

158 #i‡
	`deföed
 (
_MSC_VER
Ë|| deföed (
__BORLANDC__
)

159 
	#__GMP_DECLSPEC_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

160 
	#__GMP_DECLSPEC_IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

162 #ifde‡
__WATCOMC__


163 
	#__GMP_DECLSPEC_EXPORT
 
__exp‹t


	)

164 
	#__GMP_DECLSPEC_IMPORT
 
__imp‹t


	)

166 #ifde‡
__IBMC__


167 
	#__GMP_DECLSPEC_EXPORT
 
_Exp‹t


	)

168 
	#__GMP_DECLSPEC_IMPORT
 
_Imp‹t


	)

171 #i‡
__GMP_LIBGMP_DLL


172 #i‡
__GMP_WITHIN_GMP


174 
	#__GMP_DECLSPEC
 
__GMP_DECLSPEC_EXPORT


	)

177 
	#__GMP_DECLSPEC
 
__GMP_DECLSPEC_IMPORT


	)

181 
	#__GMP_DECLSPEC


	)

185 #ifde‡
__GMP_SHORT_LIMB


186 
	tmp_limb_t
;

187 
	tmp_limb_sig√d_t
;

189 #ifde‡
_LONG_LONG_LIMB


190 
	tmp_limb_t
;

191 
	tmp_limb_sig√d_t
;

193 
	tmp_limb_t
;

194 
	tmp_limb_sig√d_t
;

197 
	tmp_bô˙t_t
;

204 
_mp_Æloc
;

206 
_mp_size
;

209 
mp_limb_t
 *
_mp_d
;

210 } 
	t__mpz_°ru˘
;

215 
__mpz_°ru˘
 
	tMP_INT
;

216 
__mpz_°ru˘
 
	tmpz_t
[1];

218 
mp_limb_t
 * 
	tmp_±r
;

219 
__gmp_c⁄°
 
	tmp_limb_t
 * 
	tmp_§˝å
;

220 #i‡
	`deföed
 (
_CRAY
Ë&& ! deföed (
_CRAYMPP
)

222 
	#__GMP_MP_SIZE_T_INT
 1

	)

223 
	tmp_size_t
;

224 
	tmp_exp_t
;

226 
	#__GMP_MP_SIZE_T_INT
 0

	)

227 
	tmp_size_t
;

228 
	tmp_exp_t
;

233 
__mpz_°ru˘
 
_mp_num
;

234 
__mpz_°ru˘
 
_mp_dí
;

235 } 
	t__mpq_°ru˘
;

237 
__mpq_°ru˘
 
	tMP_RAT
;

238 
__mpq_°ru˘
 
	tmpq_t
[1];

242 
_mp_¥ec
;

246 
_mp_size
;

249 
mp_exp_t
 
_mp_exp
;

250 
mp_limb_t
 *
_mp_d
;

251 } 
	t__mpf_°ru˘
;

254 
__mpf_°ru˘
 
	tmpf_t
[1];

259 
GMP_RAND_ALG_DEFAULT
 = 0,

260 
GMP_RAND_ALG_LC
 = 
GMP_RAND_ALG_DEFAULT


261 } 
	tgmp_øndÆg_t
;

266 
mpz_t
 
_mp_£ed
;

267 
gmp_øndÆg_t
 
_mp_Æg
;

269 *
_mp_lc
;

270 } 
_mp_Ægd©a
;

271 } 
	t__gmp_ønd°©e_°ru˘
;

272 
__gmp_ønd°©e_°ru˘
 
	tgmp_ønd°©e_t
[1];

276 
__gmp_c⁄°
 
	t__mpz_°ru˘
 *
	tmpz_§˝å
;

277 
__mpz_°ru˘
 *
	tmpz_±r
;

278 
__gmp_c⁄°
 
	t__mpf_°ru˘
 *
	tmpf_§˝å
;

279 
__mpf_°ru˘
 *
	tmpf_±r
;

280 
__gmp_c⁄°
 
	t__mpq_°ru˘
 *
	tmpq_§˝å
;

281 
__mpq_°ru˘
 *
	tmpq_±r
;

286 #i‡
__GMP_LIBGMP_DLL


287 #i‡
__GMP_WITHIN_GMPXX


289 
	#__GMP_DECLSPEC_XX
 
__GMP_DECLSPEC_EXPORT


	)

292 
	#__GMP_DECLSPEC_XX
 
__GMP_DECLSPEC_IMPORT


	)

296 
	#__GMP_DECLSPEC_XX


	)

300 #i‡
__GMP_HAVE_PROTOTYPES


301 
	#__GMP_PROTO
(
x
Ë
	)
x

303 
	#__GMP_PROTO
(
x
Ë()

	)

306 #i‚de‡
__MPN


307 #i‡
__GMP_HAVE_TOKEN_PASTE


308 
	#__MPN
(
x
Ë
__gm≤_
##
	)
x

310 
	#__MPN
(
x
Ë
__gm≤_
 
	)
x

316 #i‡
	`deföed
 (
FILE
) \

317 || 
	`deföed
 (
H_STDIO
) \

318 || 
	`deföed
 (
_H_STDIO
) \

319 || 
	`deföed
 (
_STDIO_H
) \

320 || 
	`deföed
 (
_STDIO_H_
) \

321 || 
	`deföed
 (
__STDIO_H
) \

322 || 
	`deföed
 (
__STDIO_H__
) \

323 || 
	`deföed
 (
_STDIO_INCLUDED
) \

324 || 
	`deföed
 (
__dj_ö˛ude_°dio_h_
) \

325 || 
	`deföed
 (
_FILE_DEFINED
) \

326 || 
	`deföed
 (
__STDIO__
) \

327 || 
	`deföed
 (
_MSL_STDIO_H
) \

328 || 
	`deföed
 (
_STDIO_H_INCLUDED
) \

329 || 
	$deföed
 (
_ISO_STDIO_ISO_H
)

330 
	#_GMP_H_HAVE_FILE
 1

	)

337 #i‡
	`deföed
 (
_OBSTACK_H
)

338 
	#_GMP_H_HAVE_OBSTACK
 1

	)

352 #ifde‡
va_°¨t


353 
	#_GMP_H_HAVE_VA_LIST
 1

	)

357 #i‡
	`deföed
 (
__GNUC__
Ë&& deföed (
__GNUC_MINOR__
)

358 
	#__GMP_GNUC_PREREQ
(
maj
, 
mö
) \

359 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

361 
	#__GMP_GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

369 #i‡
	`__GMP_GNUC_PREREQ
 (2,96Ë&& ! 
	`deföed
 (
__GMP_NO_ATTRIBUTE_CONST_PURE
)

370 
	#__GMP_ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

372 
	#__GMP_ATTRIBUTE_PURE


	)

383 #ifde‡
__˝lu•lus


384 
	#__GMP_CAST
(
ty≥
, 
ex¥
Ë(
°©ic_ˇ°
<ty≥> (ex¥))

	)

386 
	#__GMP_CAST
(
ty≥
, 
ex¥
Ë(—y≥Ë”x¥))

	)

407 #i‡
	`deföed
 (
__˝lu•lus
)

408 
	#__GMP_NOTHROW
 
	`throw
 ()

	)

410 
	#__GMP_NOTHROW


	)

423 #ifde‡
__GNUC__


424 #i‡(
deföed
 
__GNUC_STDC_INLINE__
Ë|| (
__GNUC__
 =4 && 
__GNUC_MINOR__
 == 2)

425 
	#__GMP_EXTERN_INLINE
 
__ölöe__
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

427 
	#__GMP_EXTERN_INLINE
 
__ölöe__


	)

429 
	#__GMP_INLINE_PROTOTYPES
 1

	)

440 #ifde‡
__DECC


441 
	#__GMP_EXTERN_INLINE
 
__ölöe


	)

451 #ifde‡
__SCO_VERSION__


452 #i‡
__SCO_VERSION__
 > 400000000 && 
__STDC__
 != 1 \

453 && ! 
	$deföed
 (
__GMP_EXTERN_INLINE
)

454 
	#__GMP_EXTERN_INLINE
 
ölöe


	)

459 #ifde‡
_MSC_VER


460 
	#__GMP_EXTERN_INLINE
 
__ölöe


	)

464 #i‡
	`deföed
 (
__SUNPRO_C
) && __SUNPRO_C >= 0x560 \

465 && ! 
	$deföed
 (
__GMP_EXTERN_INLINE
)

466 
	#__GMP_EXTERN_INLINE
 
ölöe


	)

470 #i‡
	`deföed
 (
__SUNPRO_C
) && __SUNPRO_C >= 0x540 \

471 && ! 
	$deföed
 (
__GMP_EXTERN_INLINE
)

472 
	#__GMP_EXTERN_INLINE
 
ölöe


	)

479 #i‡
	`deföed
 (
__˝lu•lus
Ë&& ! deföed (
__GMP_EXTERN_INLINE
)

480 
	#__GMP_EXTERN_INLINE
 
ölöe


	)

489 #i‡
	`deföed
 (
__GMP_WITHIN_CONFIGURE
Ë&& ! 
__GMP_WITHIN_CONFIGURE_INLINE


490 #unde‡
__GMP_EXTERN_INLINE


496 #ifde‡
__GMP_EXTERN_INLINE


497 #i‚de‡
__GMP_INLINE_PROTOTYPES


498 
	#__GMP_INLINE_PROTOTYPES
 0

	)

501 
	#__GMP_INLINE_PROTOTYPES
 1

	)

505 
	#__GMP_ABS
(
x
Ë((xË>0 ? (xË: -(x))

	)

506 
	#__GMP_MAX
(
h
,
i
Ë((hË> (iË? (hË: (i))

	)

510 
	#__GMP_UINT_MAX
 (~ (Ë0)

	)

511 
	#__GMP_ULONG_MAX
 (~ (Ë0)

	)

512 
	#__GMP_USHRT_MAX
 ((Ë~0)

	)

516 #i‡
	`__GMP_GNUC_PREREQ
 (3,0)

517 
	#__GMP_LIKELY
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄dË!0, 1)

	)

518 
	#__GMP_UNLIKELY
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄dË!0, 0)

	)

520 
	#__GMP_LIKELY
(
c⁄d
Ë(c⁄d)

	)

521 
	#__GMP_UNLIKELY
(
c⁄d
Ë(c⁄d)

	)

524 #ifde‡
_CRAY


525 
	#__GMP_CRAY_Pøgma
(
°r
Ë
	`_Pøgma
 (°r)

	)

527 
	#__GMP_CRAY_Pøgma
(
°r
)

	)

532 
	#mpq_numªf
(
Q
Ë(&((Q)->
_mp_num
))

	)

533 
	#mpq_díªf
(
Q
Ë(&((Q)->
_mp_dí
))

	)

536 #i‡
	`deföed
 (
__˝lu•lus
)

538 
usög
 
°d
::
FILE
;

541 
	#mp_£t_mem‹y_fun˘i⁄s
 
__gmp_£t_mem‹y_fun˘i⁄s


	)

542 
__GMP_DECLSPEC
 
mp_£t_mem‹y_fun˘i⁄s
 
	`__GMP_PROTO
 ((*(*Ë(
size_t
),

543 *(*Ë(*, 
size_t
, size_t),

544 (*Ë(*, 
size_t
))Ë
__GMP_NOTHROW
;

546 
	#mp_gë_mem‹y_fun˘i⁄s
 
__gmp_gë_mem‹y_fun˘i⁄s


	)

547 
__GMP_DECLSPEC
 
mp_gë_mem‹y_fun˘i⁄s
 
	`__GMP_PROTO
 ((*(**Ë(
size_t
),

548 *(**Ë(*, 
size_t
, size_t),

549 (**Ë(*, 
size_t
))Ë
__GMP_NOTHROW
;

551 
	#mp_bôs_≥r_limb
 
__gmp_bôs_≥r_limb


	)

552 
__GMP_DECLSPEC
 
__gmp_c⁄°
 
mp_bôs_≥r_limb
;

554 
	#gmp_î∫o
 
__gmp_î∫o


	)

555 
__GMP_DECLSPEC
 
gmp_î∫o
;

557 
	#gmp_vîsi⁄
 
__gmp_vîsi⁄


	)

558 
__GMP_DECLSPEC
 
__gmp_c⁄°
 * __gmp_c⁄° 
gmp_vîsi⁄
;

564 
	#gmp_øndöô
 
__gmp_øndöô


	)

565 
__GMP_DECLSPEC
 
gmp_øndöô
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, 
gmp_øndÆg_t
, ...));

567 
	#gmp_øndöô_deÁu…
 
__gmp_øndöô_deÁu…


	)

568 
__GMP_DECLSPEC
 
gmp_øndöô_deÁu…
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
));

570 
	#gmp_øndöô_lc_2exp
 
__gmp_øndöô_lc_2exp


	)

571 
__GMP_DECLSPEC
 
gmp_øndöô_lc_2exp
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
,

572 
mpz_§˝å
, ,

573 
mp_bô˙t_t
));

575 
	#gmp_øndöô_lc_2exp_size
 
__gmp_øndöô_lc_2exp_size


	)

576 
__GMP_DECLSPEC
 
gmp_øndöô_lc_2exp_size
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, 
mp_bô˙t_t
));

578 
	#gmp_øndöô_mt
 
__gmp_øndöô_mt


	)

579 
__GMP_DECLSPEC
 
gmp_øndöô_mt
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
));

581 
	#gmp_øndöô_£t
 
__gmp_øndöô_£t


	)

582 
__GMP_DECLSPEC
 
gmp_øndöô_£t
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, 
__gmp_c⁄°
 
__gmp_ønd°©e_°ru˘
 *));

584 
	#gmp_ønd£ed
 
__gmp_ønd£ed


	)

585 
__GMP_DECLSPEC
 
gmp_ønd£ed
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, 
mpz_§˝å
));

587 
	#gmp_ønd£ed_ui
 
__gmp_ønd£ed_ui


	)

588 
__GMP_DECLSPEC
 
gmp_ønd£ed_ui
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, ));

590 
	#gmp_ønd˛ór
 
__gmp_ønd˛ór


	)

591 
__GMP_DECLSPEC
 
gmp_ønd˛ór
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
));

593 
	#gmp_uøndomb_ui
 
__gmp_uøndomb_ui


	)

594 
__GMP_DECLSPEC
 
gmp_uøndomb_ui
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, ));

596 
	#gmp_uøndomm_ui
 
__gmp_uøndomm_ui


	)

597 
__GMP_DECLSPEC
 
gmp_uøndomm_ui
 
	`__GMP_PROTO
 ((
gmp_ønd°©e_t
, ));

602 
	#gmp_a•rötf
 
__gmp_a•rötf


	)

603 
__GMP_DECLSPEC
 
gmp_a•rötf
 
	`__GMP_PROTO
 ((**, 
__gmp_c⁄°
 *, ...));

605 
	#gmp_Ârötf
 
__gmp_Ârötf


	)

606 #ifde‡
_GMP_H_HAVE_FILE


607 
__GMP_DECLSPEC
 
gmp_Ârötf
 
	`__GMP_PROTO
 ((
FILE
 *, 
__gmp_c⁄°
 *, ...));

610 
	#gmp_ob°ack_¥ötf
 
__gmp_ob°ack_¥ötf


	)

611 #i‡
	`deföed
 (
_GMP_H_HAVE_OBSTACK
)

612 
__GMP_DECLSPEC
 
gmp_ob°ack_¥ötf
 
	`__GMP_PROTO
 ((
ob°ack
 *, 
__gmp_c⁄°
 *, ...));

615 
	#gmp_ob°ack_v¥ötf
 
__gmp_ob°ack_v¥ötf


	)

616 #i‡
	`deföed
 (
_GMP_H_HAVE_OBSTACK
Ë&& deföed (
_GMP_H_HAVE_VA_LIST
)

617 
__GMP_DECLSPEC
 
gmp_ob°ack_v¥ötf
 
	`__GMP_PROTO
 ((
ob°ack
 *, 
__gmp_c⁄°
 *, 
va_li°
));

620 
	#gmp_¥ötf
 
__gmp_¥ötf


	)

621 
__GMP_DECLSPEC
 
gmp_¥ötf
 
	`__GMP_PROTO
 ((
__gmp_c⁄°
 *, ...));

623 
	#gmp_¢¥ötf
 
__gmp_¢¥ötf


	)

624 
__GMP_DECLSPEC
 
gmp_¢¥ötf
 
	`__GMP_PROTO
 ((*, 
size_t
, 
__gmp_c⁄°
 *, ...));

626 
	#gmp_•rötf
 
__gmp_•rötf


	)

627 
__GMP_DECLSPEC
 
gmp_•rötf
 
	`__GMP_PROTO
 ((*, 
__gmp_c⁄°
 *, ...));

629 
	#gmp_va•rötf
 
__gmp_va•rötf


	)

630 #i‡
	`deföed
 (
_GMP_H_HAVE_VA_LIST
)

631 
__GMP_DECLSPEC
 
gmp_va•rötf
 
	`__GMP_PROTO
 ((**, 
__gmp_c⁄°
 *, 
va_li°
));

634 
	#gmp_vÂrötf
 
__gmp_vÂrötf


	)

635 #i‡
	`deföed
 (
_GMP_H_HAVE_FILE
Ë&& deföed (
_GMP_H_HAVE_VA_LIST
)

636 
__GMP_DECLSPEC
 
gmp_vÂrötf
 
	`__GMP_PROTO
 ((
FILE
 *, 
__gmp_c⁄°
 *, 
va_li°
));

639 
	#gmp_v¥ötf
 
__gmp_v¥ötf


	)

640 #i‡
	`deföed
 (
_GMP_H_HAVE_VA_LIST
)

641 
__GMP_DECLSPEC
 
gmp_v¥ötf
 
	`__GMP_PROTO
 ((
__gmp_c⁄°
 *, 
va_li°
));

644 
	#gmp_v¢¥ötf
 
__gmp_v¢¥ötf


	)

645 #i‡
	`deföed
 (
_GMP_H_HAVE_VA_LIST
)

646 
__GMP_DECLSPEC
 
gmp_v¢¥ötf
 
	`__GMP_PROTO
 ((*, 
size_t
, 
__gmp_c⁄°
 *, 
va_li°
));

649 
	#gmp_v•rötf
 
__gmp_v•rötf


	)

650 #i‡
	`deföed
 (
_GMP_H_HAVE_VA_LIST
)

651 
__GMP_DECLSPEC
 
gmp_v•rötf
 
	`__GMP_PROTO
 ((*, 
__gmp_c⁄°
 *, 
va_li°
));

657 
	#gmp_fsˇnf
 
__gmp_fsˇnf


	)

658 #ifde‡
_GMP_H_HAVE_FILE


659 
__GMP_DECLSPEC
 
gmp_fsˇnf
 
	`__GMP_PROTO
 ((
FILE
 *, 
__gmp_c⁄°
 *, ...));

662 
	#gmp_sˇnf
 
__gmp_sˇnf


	)

663 
__GMP_DECLSPEC
 
gmp_sˇnf
 
	`__GMP_PROTO
 ((
__gmp_c⁄°
 *, ...));

665 
	#gmp_ssˇnf
 
__gmp_ssˇnf


	)

666 
__GMP_DECLSPEC
 
gmp_ssˇnf
 
	`__GMP_PROTO
 ((
__gmp_c⁄°
 *, __gmp_const *, ...));

668 
	#gmp_vfsˇnf
 
__gmp_vfsˇnf


	)

669 #i‡
	`deföed
 (
_GMP_H_HAVE_FILE
Ë&& deföed (
_GMP_H_HAVE_VA_LIST
)

670 
__GMP_DECLSPEC
 
gmp_vfsˇnf
 
	`__GMP_PROTO
 ((
FILE
 *, 
__gmp_c⁄°
 *, 
va_li°
));

673 
	#gmp_vsˇnf
 
__gmp_vsˇnf


	)

674 #i‡
	`deföed
 (
_GMP_H_HAVE_VA_LIST
)

675 
__GMP_DECLSPEC
 
gmp_vsˇnf
 
	`__GMP_PROTO
 ((
__gmp_c⁄°
 *, 
va_li°
));

678 
	#gmp_vssˇnf
 
__gmp_vssˇnf


	)

679 #i‡
	`deföed
 (
_GMP_H_HAVE_VA_LIST
)

680 
__GMP_DECLSPEC
 
gmp_vssˇnf
 
	`__GMP_PROTO
 ((
__gmp_c⁄°
 *, __gmp_c⁄° *, 
va_li°
));

686 
	#_mpz_ªÆloc
 
__gmpz_ªÆloc


	)

687 
	#mpz_ªÆloc
 
__gmpz_ªÆloc


	)

688 
__GMP_DECLSPEC
 *
_mpz_ªÆloc
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_size_t
));

690 
	#mpz_abs
 
__gmpz_abs


	)

691 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_abs
)

692 
__GMP_DECLSPEC
 
mpz_abs
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

695 
	#mpz_add
 
__gmpz_add


	)

696 
__GMP_DECLSPEC
 
mpz_add
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

698 
	#mpz_add_ui
 
__gmpz_add_ui


	)

699 
__GMP_DECLSPEC
 
mpz_add_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

701 
	#mpz_addmul
 
__gmpz_addmul


	)

702 
__GMP_DECLSPEC
 
mpz_addmul
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

704 
	#mpz_addmul_ui
 
__gmpz_addmul_ui


	)

705 
__GMP_DECLSPEC
 
mpz_addmul_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

707 
	#mpz_™d
 
__gmpz_™d


	)

708 
__GMP_DECLSPEC
 
mpz_™d
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

710 
	#mpz_¨øy_öô
 
__gmpz_¨øy_öô


	)

711 
__GMP_DECLSPEC
 
mpz_¨øy_öô
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_size_t
, mp_size_t));

713 
	#mpz_bö_ui
 
__gmpz_bö_ui


	)

714 
__GMP_DECLSPEC
 
mpz_bö_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

716 
	#mpz_bö_uiui
 
__gmpz_bö_uiui


	)

717 
__GMP_DECLSPEC
 
mpz_bö_uiui
 
	`__GMP_PROTO
 ((
mpz_±r
, , ));

719 
	#mpz_cdiv_q
 
__gmpz_cdiv_q


	)

720 
__GMP_DECLSPEC
 
mpz_cdiv_q
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

722 
	#mpz_cdiv_q_2exp
 
__gmpz_cdiv_q_2exp


	)

723 
__GMP_DECLSPEC
 
mpz_cdiv_q_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

725 
	#mpz_cdiv_q_ui
 
__gmpz_cdiv_q_ui


	)

726 
__GMP_DECLSPEC
 
mpz_cdiv_q_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

728 
	#mpz_cdiv_qr
 
__gmpz_cdiv_qr


	)

729 
__GMP_DECLSPEC
 
mpz_cdiv_qr
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
, mpz_srcptr));

731 
	#mpz_cdiv_qr_ui
 
__gmpz_cdiv_qr_ui


	)

732 
__GMP_DECLSPEC
 
mpz_cdiv_qr_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
, ));

734 
	#mpz_cdiv_r
 
__gmpz_cdiv_r


	)

735 
__GMP_DECLSPEC
 
mpz_cdiv_r
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

737 
	#mpz_cdiv_r_2exp
 
__gmpz_cdiv_r_2exp


	)

738 
__GMP_DECLSPEC
 
mpz_cdiv_r_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

740 
	#mpz_cdiv_r_ui
 
__gmpz_cdiv_r_ui


	)

741 
__GMP_DECLSPEC
 
mpz_cdiv_r_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

743 
	#mpz_cdiv_ui
 
__gmpz_cdiv_ui


	)

744 
__GMP_DECLSPEC
 
mpz_cdiv_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

746 
	#mpz_˛ór
 
__gmpz_˛ór


	)

747 
__GMP_DECLSPEC
 
mpz_˛ór
 
	`__GMP_PROTO
 ((
mpz_±r
));

749 
	#mpz_˛órs
 
__gmpz_˛órs


	)

750 
__GMP_DECLSPEC
 
mpz_˛órs
 
	`__GMP_PROTO
 ((
mpz_±r
, ...));

752 
	#mpz_˛rbô
 
__gmpz_˛rbô


	)

753 
__GMP_DECLSPEC
 
mpz_˛rbô
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_bô˙t_t
));

755 
	#mpz_cmp
 
__gmpz_cmp


	)

756 
__GMP_DECLSPEC
 
mpz_cmp
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

758 
	#mpz_cmp_d
 
__gmpz_cmp_d


	)

759 
__GMP_DECLSPEC
 
mpz_cmp_d
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

761 
	#_mpz_cmp_si
 
__gmpz_cmp_si


	)

762 
__GMP_DECLSPEC
 
_mpz_cmp_si
 
	`__GMP_PROTO
 ((
mpz_§˝å
, sig√d )Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

764 
	#_mpz_cmp_ui
 
__gmpz_cmp_ui


	)

765 
__GMP_DECLSPEC
 
_mpz_cmp_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

767 
	#mpz_cm∑bs
 
__gmpz_cm∑bs


	)

768 
__GMP_DECLSPEC
 
mpz_cm∑bs
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

770 
	#mpz_cm∑bs_d
 
__gmpz_cm∑bs_d


	)

771 
__GMP_DECLSPEC
 
mpz_cm∑bs_d
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

773 
	#mpz_cm∑bs_ui
 
__gmpz_cm∑bs_ui


	)

774 
__GMP_DECLSPEC
 
mpz_cm∑bs_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

776 
	#mpz_com
 
__gmpz_com


	)

777 
__GMP_DECLSPEC
 
mpz_com
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

779 
	#mpz_combô
 
__gmpz_combô


	)

780 
__GMP_DECLSPEC
 
mpz_combô
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_bô˙t_t
));

782 
	#mpz_c⁄gruít_p
 
__gmpz_c⁄gruít_p


	)

783 
__GMP_DECLSPEC
 
mpz_c⁄gruít_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å, mpz_§˝å)Ë
__GMP_ATTRIBUTE_PURE
;

785 
	#mpz_c⁄gruít_2exp_p
 
__gmpz_c⁄gruít_2exp_p


	)

786 
__GMP_DECLSPEC
 
mpz_c⁄gruít_2exp_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å, 
mp_bô˙t_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

788 
	#mpz_c⁄gruít_ui_p
 
__gmpz_c⁄gruít_ui_p


	)

789 
__GMP_DECLSPEC
 
mpz_c⁄gruít_ui_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, , )Ë
__GMP_ATTRIBUTE_PURE
;

791 
	#mpz_divexa˘
 
__gmpz_divexa˘


	)

792 
__GMP_DECLSPEC
 
mpz_divexa˘
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

794 
	#mpz_divexa˘_ui
 
__gmpz_divexa˘_ui


	)

795 
__GMP_DECLSPEC
 
mpz_divexa˘_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

797 
	#mpz_divisibÀ_p
 
__gmpz_divisibÀ_p


	)

798 
__GMP_DECLSPEC
 
mpz_divisibÀ_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å)Ë
__GMP_ATTRIBUTE_PURE
;

800 
	#mpz_divisibÀ_ui_p
 
__gmpz_divisibÀ_ui_p


	)

801 
__GMP_DECLSPEC
 
mpz_divisibÀ_ui_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

803 
	#mpz_divisibÀ_2exp_p
 
__gmpz_divisibÀ_2exp_p


	)

804 
__GMP_DECLSPEC
 
mpz_divisibÀ_2exp_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, 
mp_bô˙t_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

806 
	#mpz_dump
 
__gmpz_dump


	)

807 
__GMP_DECLSPEC
 
mpz_dump
 
	`__GMP_PROTO
 ((
mpz_§˝å
));

809 
	#mpz_exp‹t
 
__gmpz_exp‹t


	)

810 
__GMP_DECLSPEC
 *
mpz_exp‹t
 
	`__GMP_PROTO
 ((*, 
size_t
 *, , size_t, , size_t, 
mpz_§˝å
));

812 
	#mpz_Ác_ui
 
__gmpz_Ác_ui


	)

813 
__GMP_DECLSPEC
 
mpz_Ác_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

815 
	#mpz_fdiv_q
 
__gmpz_fdiv_q


	)

816 
__GMP_DECLSPEC
 
mpz_fdiv_q
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

818 
	#mpz_fdiv_q_2exp
 
__gmpz_fdiv_q_2exp


	)

819 
__GMP_DECLSPEC
 
mpz_fdiv_q_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

821 
	#mpz_fdiv_q_ui
 
__gmpz_fdiv_q_ui


	)

822 
__GMP_DECLSPEC
 
mpz_fdiv_q_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

824 
	#mpz_fdiv_qr
 
__gmpz_fdiv_qr


	)

825 
__GMP_DECLSPEC
 
mpz_fdiv_qr
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
, mpz_srcptr));

827 
	#mpz_fdiv_qr_ui
 
__gmpz_fdiv_qr_ui


	)

828 
__GMP_DECLSPEC
 
mpz_fdiv_qr_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
, ));

830 
	#mpz_fdiv_r
 
__gmpz_fdiv_r


	)

831 
__GMP_DECLSPEC
 
mpz_fdiv_r
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

833 
	#mpz_fdiv_r_2exp
 
__gmpz_fdiv_r_2exp


	)

834 
__GMP_DECLSPEC
 
mpz_fdiv_r_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

836 
	#mpz_fdiv_r_ui
 
__gmpz_fdiv_r_ui


	)

837 
__GMP_DECLSPEC
 
mpz_fdiv_r_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

839 
	#mpz_fdiv_ui
 
__gmpz_fdiv_ui


	)

840 
__GMP_DECLSPEC
 
mpz_fdiv_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

842 
	#mpz_fib_ui
 
__gmpz_fib_ui


	)

843 
__GMP_DECLSPEC
 
mpz_fib_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

845 
	#mpz_fib2_ui
 
__gmpz_fib2_ui


	)

846 
__GMP_DECLSPEC
 
mpz_fib2_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_ptr, ));

848 
	#mpz_fôs_söt_p
 
__gmpz_fôs_söt_p


	)

849 
__GMP_DECLSPEC
 
mpz_fôs_söt_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

851 
	#mpz_fôs_¶⁄g_p
 
__gmpz_fôs_¶⁄g_p


	)

852 
__GMP_DECLSPEC
 
mpz_fôs_¶⁄g_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

854 
	#mpz_fôs_ssh‹t_p
 
__gmpz_fôs_ssh‹t_p


	)

855 
__GMP_DECLSPEC
 
mpz_fôs_ssh‹t_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

857 
	#mpz_fôs_uöt_p
 
__gmpz_fôs_uöt_p


	)

858 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_fôs_uöt_p
)

859 
__GMP_DECLSPEC
 
mpz_fôs_uöt_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

862 
	#mpz_fôs_ul⁄g_p
 
__gmpz_fôs_ul⁄g_p


	)

863 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_fôs_ul⁄g_p
)

864 
__GMP_DECLSPEC
 
mpz_fôs_ul⁄g_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

867 
	#mpz_fôs_ush‹t_p
 
__gmpz_fôs_ush‹t_p


	)

868 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_fôs_ush‹t_p
)

869 
__GMP_DECLSPEC
 
mpz_fôs_ush‹t_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

872 
	#mpz_gcd
 
__gmpz_gcd


	)

873 
__GMP_DECLSPEC
 
mpz_gcd
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

875 
	#mpz_gcd_ui
 
__gmpz_gcd_ui


	)

876 
__GMP_DECLSPEC
 
mpz_gcd_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

878 
	#mpz_gcdext
 
__gmpz_gcdext


	)

879 
__GMP_DECLSPEC
 
mpz_gcdext
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, mpz_±r, 
mpz_§˝å
, mpz_srcptr));

881 
	#mpz_gë_d
 
__gmpz_gë_d


	)

882 
__GMP_DECLSPEC
 
mpz_gë_d
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

884 
	#mpz_gë_d_2exp
 
__gmpz_gë_d_2exp


	)

885 
__GMP_DECLSPEC
 
mpz_gë_d_2exp
 
	`__GMP_PROTO
 ((sig√d *, 
mpz_§˝å
));

887 
	#mpz_gë_si
 
__gmpz_gë_si


	)

888 
__GMP_DECLSPEC
 
mpz_gë_si
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

890 
	#mpz_gë_°r
 
__gmpz_gë_°r


	)

891 
__GMP_DECLSPEC
 *
mpz_gë_°r
 
	`__GMP_PROTO
 ((*, , 
mpz_§˝å
));

893 
	#mpz_gë_ui
 
__gmpz_gë_ui


	)

894 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_gë_ui
)

895 
__GMP_DECLSPEC
 
mpz_gë_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

898 
	#mpz_gëlimbn
 
__gmpz_gëlimbn


	)

899 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_gëlimbn
)

900 
__GMP_DECLSPEC
 
mp_limb_t
 
mpz_gëlimbn
 
	`__GMP_PROTO
 ((
mpz_§˝å
, 
mp_size_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

903 
	#mpz_hamdi°
 
__gmpz_hamdi°


	)

904 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpz_hamdi°
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

906 
	#mpz_imp‹t
 
__gmpz_imp‹t


	)

907 
__GMP_DECLSPEC
 
mpz_imp‹t
 
	`__GMP_PROTO
 ((
mpz_±r
, 
size_t
, , size_t, , size_t, 
__gmp_c⁄°
 *));

909 
	#mpz_öô
 
__gmpz_öô


	)

910 
__GMP_DECLSPEC
 
mpz_öô
 
	`__GMP_PROTO
 ((
mpz_±r
));

912 
	#mpz_öô2
 
__gmpz_öô2


	)

913 
__GMP_DECLSPEC
 
mpz_öô2
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_bô˙t_t
));

915 
	#mpz_öôs
 
__gmpz_öôs


	)

916 
__GMP_DECLSPEC
 
mpz_öôs
 
	`__GMP_PROTO
 ((
mpz_±r
, ...));

918 
	#mpz_öô_£t
 
__gmpz_öô_£t


	)

919 
__GMP_DECLSPEC
 
mpz_öô_£t
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

921 
	#mpz_öô_£t_d
 
__gmpz_öô_£t_d


	)

922 
__GMP_DECLSPEC
 
mpz_öô_£t_d
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

924 
	#mpz_öô_£t_si
 
__gmpz_öô_£t_si


	)

925 
__GMP_DECLSPEC
 
mpz_öô_£t_si
 
	`__GMP_PROTO
 ((
mpz_±r
, signed ));

927 
	#mpz_öô_£t_°r
 
__gmpz_öô_£t_°r


	)

928 
__GMP_DECLSPEC
 
mpz_öô_£t_°r
 
	`__GMP_PROTO
 ((
mpz_±r
, 
__gmp_c⁄°
 *, ));

930 
	#mpz_öô_£t_ui
 
__gmpz_öô_£t_ui


	)

931 
__GMP_DECLSPEC
 
mpz_öô_£t_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

933 
	#mpz_öp_øw
 
__gmpz_öp_øw


	)

934 #ifde‡
_GMP_H_HAVE_FILE


935 
__GMP_DECLSPEC
 
size_t
 
mpz_öp_øw
 
	`__GMP_PROTO
 ((
mpz_±r
, 
FILE
 *));

938 
	#mpz_öp_°r
 
__gmpz_öp_°r


	)

939 #ifde‡
_GMP_H_HAVE_FILE


940 
__GMP_DECLSPEC
 
size_t
 
mpz_öp_°r
 
	`__GMP_PROTO
 ((
mpz_±r
, 
FILE
 *, ));

943 
	#mpz_övît
 
__gmpz_övît


	)

944 
__GMP_DECLSPEC
 
mpz_övît
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

946 
	#mpz_i‹
 
__gmpz_i‹


	)

947 
__GMP_DECLSPEC
 
mpz_i‹
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

949 
	#mpz_jacobi
 
__gmpz_jacobi


	)

950 
__GMP_DECLSPEC
 
mpz_jacobi
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mpz_§˝å)Ë
__GMP_ATTRIBUTE_PURE
;

952 
	#mpz_kr⁄eckî
 
mpz_jacobi


	)

954 
	#mpz_kr⁄eckî_si
 
__gmpz_kr⁄eckî_si


	)

955 
__GMP_DECLSPEC
 
mpz_kr⁄eckî_si
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

957 
	#mpz_kr⁄eckî_ui
 
__gmpz_kr⁄eckî_ui


	)

958 
__GMP_DECLSPEC
 
mpz_kr⁄eckî_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

960 
	#mpz_si_kr⁄eckî
 
__gmpz_si_kr⁄eckî


	)

961 
__GMP_DECLSPEC
 
mpz_si_kr⁄eckî
 
	`__GMP_PROTO
 ((, 
mpz_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

963 
	#mpz_ui_kr⁄eckî
 
__gmpz_ui_kr⁄eckî


	)

964 
__GMP_DECLSPEC
 
mpz_ui_kr⁄eckî
 
	`__GMP_PROTO
 ((, 
mpz_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

966 
	#mpz_lcm
 
__gmpz_lcm


	)

967 
__GMP_DECLSPEC
 
mpz_lcm
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

969 
	#mpz_lcm_ui
 
__gmpz_lcm_ui


	)

970 
__GMP_DECLSPEC
 
mpz_lcm_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

972 
	#mpz_Àgídª
 
mpz_jacobi


	)

974 
	#mpz_lu˙um_ui
 
__gmpz_lu˙um_ui


	)

975 
__GMP_DECLSPEC
 
mpz_lu˙um_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

977 
	#mpz_lu˙um2_ui
 
__gmpz_lu˙um2_ui


	)

978 
__GMP_DECLSPEC
 
mpz_lu˙um2_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_ptr, ));

980 
	#mpz_mûÀºabö
 
__gmpz_mûÀºabö


	)

981 
__GMP_DECLSPEC
 
mpz_mûÀºabö
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

983 
	#mpz_mod
 
__gmpz_mod


	)

984 
__GMP_DECLSPEC
 
mpz_mod
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

986 
	#mpz_mod_ui
 
mpz_fdiv_r_ui


	)

988 
	#mpz_mul
 
__gmpz_mul


	)

989 
__GMP_DECLSPEC
 
mpz_mul
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

991 
	#mpz_mul_2exp
 
__gmpz_mul_2exp


	)

992 
__GMP_DECLSPEC
 
mpz_mul_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

994 
	#mpz_mul_si
 
__gmpz_mul_si


	)

995 
__GMP_DECLSPEC
 
mpz_mul_si
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

997 
	#mpz_mul_ui
 
__gmpz_mul_ui


	)

998 
__GMP_DECLSPEC
 
mpz_mul_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1000 
	#mpz_√g
 
__gmpz_√g


	)

1001 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_√g
)

1002 
__GMP_DECLSPEC
 
mpz_√g
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

1005 
	#mpz_√xçrime
 
__gmpz_√xçrime


	)

1006 
__GMP_DECLSPEC
 
mpz_√xçrime
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

1008 
	#mpz_out_øw
 
__gmpz_out_øw


	)

1009 #ifde‡
_GMP_H_HAVE_FILE


1010 
__GMP_DECLSPEC
 
size_t
 
mpz_out_øw
 
	`__GMP_PROTO
 ((
FILE
 *, 
mpz_§˝å
));

1013 
	#mpz_out_°r
 
__gmpz_out_°r


	)

1014 #ifde‡
_GMP_H_HAVE_FILE


1015 
__GMP_DECLSPEC
 
size_t
 
mpz_out_°r
 
	`__GMP_PROTO
 ((
FILE
 *, , 
mpz_§˝å
));

1018 
	#mpz_≥r„˘_powî_p
 
__gmpz_≥r„˘_powî_p


	)

1019 
__GMP_DECLSPEC
 
mpz_≥r„˘_powî_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

1021 
	#mpz_≥r„˘_squ¨e_p
 
__gmpz_≥r„˘_squ¨e_p


	)

1022 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_≥r„˘_squ¨e_p
)

1023 
__GMP_DECLSPEC
 
mpz_≥r„˘_squ¨e_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

1026 
	#mpz_p›cou¡
 
__gmpz_p›cou¡


	)

1027 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_p›cou¡
)

1028 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpz_p›cou¡
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1031 
	#mpz_pow_ui
 
__gmpz_pow_ui


	)

1032 
__GMP_DECLSPEC
 
mpz_pow_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1034 
	#mpz_powm
 
__gmpz_powm


	)

1035 
__GMP_DECLSPEC
 
mpz_powm
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr, mpz_srcptr));

1037 
	#mpz_powm_£c
 
__gmpz_powm_£c


	)

1038 
__GMP_DECLSPEC
 
mpz_powm_£c
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr, mpz_srcptr));

1040 
	#mpz_powm_ui
 
__gmpz_powm_ui


	)

1041 
__GMP_DECLSPEC
 
mpz_powm_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, , mpz_srcptr));

1043 
	#mpz_¥obab_¥ime_p
 
__gmpz_¥obab_¥ime_p


	)

1044 
__GMP_DECLSPEC
 
mpz_¥obab_¥ime_p
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

1046 
	#mpz_øndom
 
__gmpz_øndom


	)

1047 
__GMP_DECLSPEC
 
mpz_øndom
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_size_t
));

1049 
	#mpz_øndom2
 
__gmpz_øndom2


	)

1050 
__GMP_DECLSPEC
 
mpz_øndom2
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_size_t
));

1052 
	#mpz_ªÆloc2
 
__gmpz_ªÆloc2


	)

1053 
__GMP_DECLSPEC
 
mpz_ªÆloc2
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_bô˙t_t
));

1055 
	#mpz_ªmove
 
__gmpz_ªmove


	)

1056 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpz_ªmove
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

1058 
	#mpz_roŸ
 
__gmpz_roŸ


	)

1059 
__GMP_DECLSPEC
 
mpz_roŸ
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1061 
	#mpz_roŸªm
 
__gmpz_roŸªm


	)

1062 
__GMP_DECLSPEC
 
mpz_roŸªm
 
	`__GMP_PROTO
 ((
mpz_±r
,mpz_±r, 
mpz_§˝å
, ));

1064 
	#mpz_º™domb
 
__gmpz_º™domb


	)

1065 
__GMP_DECLSPEC
 
mpz_º™domb
 
	`__GMP_PROTO
 ((
mpz_±r
, 
gmp_ønd°©e_t
, 
mp_bô˙t_t
));

1067 
	#mpz_sˇn0
 
__gmpz_sˇn0


	)

1068 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpz_sˇn0
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mp_bô˙t_t)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1070 
	#mpz_sˇn1
 
__gmpz_sˇn1


	)

1071 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpz_sˇn1
 
	`__GMP_PROTO
 ((
mpz_§˝å
, mp_bô˙t_t)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1073 
	#mpz_£t
 
__gmpz_£t


	)

1074 
__GMP_DECLSPEC
 
mpz_£t
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

1076 
	#mpz_£t_d
 
__gmpz_£t_d


	)

1077 
__GMP_DECLSPEC
 
mpz_£t_d
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

1079 
	#mpz_£t_f
 
__gmpz_£t_f


	)

1080 
__GMP_DECLSPEC
 
mpz_£t_f
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpf_§˝å
));

1082 
	#mpz_£t_q
 
__gmpz_£t_q


	)

1083 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_£t_q
)

1084 
__GMP_DECLSPEC
 
mpz_£t_q
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpq_§˝å
));

1087 
	#mpz_£t_si
 
__gmpz_£t_si


	)

1088 
__GMP_DECLSPEC
 
mpz_£t_si
 
	`__GMP_PROTO
 ((
mpz_±r
, signed ));

1090 
	#mpz_£t_°r
 
__gmpz_£t_°r


	)

1091 
__GMP_DECLSPEC
 
mpz_£t_°r
 
	`__GMP_PROTO
 ((
mpz_±r
, 
__gmp_c⁄°
 *, ));

1093 
	#mpz_£t_ui
 
__gmpz_£t_ui


	)

1094 
__GMP_DECLSPEC
 
mpz_£t_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, ));

1096 
	#mpz_£tbô
 
__gmpz_£tbô


	)

1097 
__GMP_DECLSPEC
 
mpz_£tbô
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mp_bô˙t_t
));

1099 
	#mpz_size
 
__gmpz_size


	)

1100 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpz_size
)

1101 
__GMP_DECLSPEC
 
size_t
 
mpz_size
 
	`__GMP_PROTO
 ((
mpz_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1104 
	#mpz_sizeöba£
 
__gmpz_sizeöba£


	)

1105 
__GMP_DECLSPEC
 
size_t
 
mpz_sizeöba£
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1107 
	#mpz_sqπ
 
__gmpz_sqπ


	)

1108 
__GMP_DECLSPEC
 
mpz_sqπ
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
));

1110 
	#mpz_sqπªm
 
__gmpz_sqπªm


	)

1111 
__GMP_DECLSPEC
 
mpz_sqπªm
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
));

1113 
	#mpz_sub
 
__gmpz_sub


	)

1114 
__GMP_DECLSPEC
 
mpz_sub
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

1116 
	#mpz_sub_ui
 
__gmpz_sub_ui


	)

1117 
__GMP_DECLSPEC
 
mpz_sub_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1119 
	#mpz_ui_sub
 
__gmpz_ui_sub


	)

1120 
__GMP_DECLSPEC
 
mpz_ui_sub
 
	`__GMP_PROTO
 ((
mpz_±r
, , 
mpz_§˝å
));

1122 
	#mpz_submul
 
__gmpz_submul


	)

1123 
__GMP_DECLSPEC
 
mpz_submul
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

1125 
	#mpz_submul_ui
 
__gmpz_submul_ui


	)

1126 
__GMP_DECLSPEC
 
mpz_submul_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1128 
	#mpz_sw≠
 
__gmpz_sw≠


	)

1129 
__GMP_DECLSPEC
 
mpz_sw≠
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r)Ë
__GMP_NOTHROW
;

1131 
	#mpz_tdiv_ui
 
__gmpz_tdiv_ui


	)

1132 
__GMP_DECLSPEC
 
mpz_tdiv_ui
 
	`__GMP_PROTO
 ((
mpz_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

1134 
	#mpz_tdiv_q
 
__gmpz_tdiv_q


	)

1135 
__GMP_DECLSPEC
 
mpz_tdiv_q
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

1137 
	#mpz_tdiv_q_2exp
 
__gmpz_tdiv_q_2exp


	)

1138 
__GMP_DECLSPEC
 
mpz_tdiv_q_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

1140 
	#mpz_tdiv_q_ui
 
__gmpz_tdiv_q_ui


	)

1141 
__GMP_DECLSPEC
 
mpz_tdiv_q_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1143 
	#mpz_tdiv_qr
 
__gmpz_tdiv_qr


	)

1144 
__GMP_DECLSPEC
 
mpz_tdiv_qr
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
, mpz_srcptr));

1146 
	#mpz_tdiv_qr_ui
 
__gmpz_tdiv_qr_ui


	)

1147 
__GMP_DECLSPEC
 
mpz_tdiv_qr_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, mpz_±r, 
mpz_§˝å
, ));

1149 
	#mpz_tdiv_r
 
__gmpz_tdiv_r


	)

1150 
__GMP_DECLSPEC
 
mpz_tdiv_r
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

1152 
	#mpz_tdiv_r_2exp
 
__gmpz_tdiv_r_2exp


	)

1153 
__GMP_DECLSPEC
 
mpz_tdiv_r_2exp
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, 
mp_bô˙t_t
));

1155 
	#mpz_tdiv_r_ui
 
__gmpz_tdiv_r_ui


	)

1156 
__GMP_DECLSPEC
 
mpz_tdiv_r_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, ));

1158 
	#mpz_t°bô
 
__gmpz_t°bô


	)

1159 
__GMP_DECLSPEC
 
mpz_t°bô
 
	`__GMP_PROTO
 ((
mpz_§˝å
, 
mp_bô˙t_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1161 
	#mpz_ui_pow_ui
 
__gmpz_ui_pow_ui


	)

1162 
__GMP_DECLSPEC
 
mpz_ui_pow_ui
 
	`__GMP_PROTO
 ((
mpz_±r
, , ));

1164 
	#mpz_uøndomb
 
__gmpz_uøndomb


	)

1165 
__GMP_DECLSPEC
 
mpz_uøndomb
 
	`__GMP_PROTO
 ((
mpz_±r
, 
gmp_ønd°©e_t
, 
mp_bô˙t_t
));

1167 
	#mpz_uøndomm
 
__gmpz_uøndomm


	)

1168 
__GMP_DECLSPEC
 
mpz_uøndomm
 
	`__GMP_PROTO
 ((
mpz_±r
, 
gmp_ønd°©e_t
, 
mpz_§˝å
));

1170 
	#mpz_x‹
 
__gmpz_x‹


	)

1171 
	#mpz_e‹
 
__gmpz_x‹


	)

1172 
__GMP_DECLSPEC
 
mpz_x‹
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpz_§˝å
, mpz_srcptr));

1177 
	#mpq_abs
 
__gmpq_abs


	)

1178 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpq_abs
)

1179 
__GMP_DECLSPEC
 
mpq_abs
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
));

1182 
	#mpq_add
 
__gmpq_add


	)

1183 
__GMP_DECLSPEC
 
mpq_add
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
, mpq_srcptr));

1185 
	#mpq_ˇn⁄iˇlize
 
__gmpq_ˇn⁄iˇlize


	)

1186 
__GMP_DECLSPEC
 
mpq_ˇn⁄iˇlize
 
	`__GMP_PROTO
 ((
mpq_±r
));

1188 
	#mpq_˛ór
 
__gmpq_˛ór


	)

1189 
__GMP_DECLSPEC
 
mpq_˛ór
 
	`__GMP_PROTO
 ((
mpq_±r
));

1191 
	#mpq_˛órs
 
__gmpq_˛órs


	)

1192 
__GMP_DECLSPEC
 
mpq_˛órs
 
	`__GMP_PROTO
 ((
mpq_±r
, ...));

1194 
	#mpq_cmp
 
__gmpq_cmp


	)

1195 
__GMP_DECLSPEC
 
mpq_cmp
 
	`__GMP_PROTO
 ((
mpq_§˝å
, mpq_§˝å)Ë
__GMP_ATTRIBUTE_PURE
;

1197 
	#_mpq_cmp_si
 
__gmpq_cmp_si


	)

1198 
__GMP_DECLSPEC
 
_mpq_cmp_si
 
	`__GMP_PROTO
 ((
mpq_§˝å
, , )Ë
__GMP_ATTRIBUTE_PURE
;

1200 
	#_mpq_cmp_ui
 
__gmpq_cmp_ui


	)

1201 
__GMP_DECLSPEC
 
_mpq_cmp_ui
 
	`__GMP_PROTO
 ((
mpq_§˝å
, , )Ë
__GMP_ATTRIBUTE_PURE
;

1203 
	#mpq_div
 
__gmpq_div


	)

1204 
__GMP_DECLSPEC
 
mpq_div
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
, mpq_srcptr));

1206 
	#mpq_div_2exp
 
__gmpq_div_2exp


	)

1207 
__GMP_DECLSPEC
 
mpq_div_2exp
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
, 
mp_bô˙t_t
));

1209 
	#mpq_equÆ
 
__gmpq_equÆ


	)

1210 
__GMP_DECLSPEC
 
mpq_equÆ
 
	`__GMP_PROTO
 ((
mpq_§˝å
, mpq_§˝å)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1212 
	#mpq_gë_num
 
__gmpq_gë_num


	)

1213 
__GMP_DECLSPEC
 
mpq_gë_num
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpq_§˝å
));

1215 
	#mpq_gë_dí
 
__gmpq_gë_dí


	)

1216 
__GMP_DECLSPEC
 
mpq_gë_dí
 
	`__GMP_PROTO
 ((
mpz_±r
, 
mpq_§˝å
));

1218 
	#mpq_gë_d
 
__gmpq_gë_d


	)

1219 
__GMP_DECLSPEC
 
mpq_gë_d
 
	`__GMP_PROTO
 ((
mpq_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

1221 
	#mpq_gë_°r
 
__gmpq_gë_°r


	)

1222 
__GMP_DECLSPEC
 *
mpq_gë_°r
 
	`__GMP_PROTO
 ((*, , 
mpq_§˝å
));

1224 
	#mpq_öô
 
__gmpq_öô


	)

1225 
__GMP_DECLSPEC
 
mpq_öô
 
	`__GMP_PROTO
 ((
mpq_±r
));

1227 
	#mpq_öôs
 
__gmpq_öôs


	)

1228 
__GMP_DECLSPEC
 
mpq_öôs
 
	`__GMP_PROTO
 ((
mpq_±r
, ...));

1230 
	#mpq_öp_°r
 
__gmpq_öp_°r


	)

1231 #ifde‡
_GMP_H_HAVE_FILE


1232 
__GMP_DECLSPEC
 
size_t
 
mpq_öp_°r
 
	`__GMP_PROTO
 ((
mpq_±r
, 
FILE
 *, ));

1235 
	#mpq_öv
 
__gmpq_öv


	)

1236 
__GMP_DECLSPEC
 
mpq_öv
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
));

1238 
	#mpq_mul
 
__gmpq_mul


	)

1239 
__GMP_DECLSPEC
 
mpq_mul
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
, mpq_srcptr));

1241 
	#mpq_mul_2exp
 
__gmpq_mul_2exp


	)

1242 
__GMP_DECLSPEC
 
mpq_mul_2exp
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
, 
mp_bô˙t_t
));

1244 
	#mpq_√g
 
__gmpq_√g


	)

1245 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_mpq_√g
)

1246 
__GMP_DECLSPEC
 
mpq_√g
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
));

1249 
	#mpq_out_°r
 
__gmpq_out_°r


	)

1250 #ifde‡
_GMP_H_HAVE_FILE


1251 
__GMP_DECLSPEC
 
size_t
 
mpq_out_°r
 
	`__GMP_PROTO
 ((
FILE
 *, , 
mpq_§˝å
));

1254 
	#mpq_£t
 
__gmpq_£t


	)

1255 
__GMP_DECLSPEC
 
mpq_£t
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
));

1257 
	#mpq_£t_d
 
__gmpq_£t_d


	)

1258 
__GMP_DECLSPEC
 
mpq_£t_d
 
	`__GMP_PROTO
 ((
mpq_±r
, ));

1260 
	#mpq_£t_dí
 
__gmpq_£t_dí


	)

1261 
__GMP_DECLSPEC
 
mpq_£t_dí
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpz_§˝å
));

1263 
	#mpq_£t_f
 
__gmpq_£t_f


	)

1264 
__GMP_DECLSPEC
 
mpq_£t_f
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpf_§˝å
));

1266 
	#mpq_£t_num
 
__gmpq_£t_num


	)

1267 
__GMP_DECLSPEC
 
mpq_£t_num
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpz_§˝å
));

1269 
	#mpq_£t_si
 
__gmpq_£t_si


	)

1270 
__GMP_DECLSPEC
 
mpq_£t_si
 
	`__GMP_PROTO
 ((
mpq_±r
, signed , ));

1272 
	#mpq_£t_°r
 
__gmpq_£t_°r


	)

1273 
__GMP_DECLSPEC
 
mpq_£t_°r
 
	`__GMP_PROTO
 ((
mpq_±r
, 
__gmp_c⁄°
 *, ));

1275 
	#mpq_£t_ui
 
__gmpq_£t_ui


	)

1276 
__GMP_DECLSPEC
 
mpq_£t_ui
 
	`__GMP_PROTO
 ((
mpq_±r
, , ));

1278 
	#mpq_£t_z
 
__gmpq_£t_z


	)

1279 
__GMP_DECLSPEC
 
mpq_£t_z
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpz_§˝å
));

1281 
	#mpq_sub
 
__gmpq_sub


	)

1282 
__GMP_DECLSPEC
 
mpq_sub
 
	`__GMP_PROTO
 ((
mpq_±r
, 
mpq_§˝å
, mpq_srcptr));

1284 
	#mpq_sw≠
 
__gmpq_sw≠


	)

1285 
__GMP_DECLSPEC
 
mpq_sw≠
 
	`__GMP_PROTO
 ((
mpq_±r
, mpq_±r)Ë
__GMP_NOTHROW
;

1290 
	#mpf_abs
 
__gmpf_abs


	)

1291 
__GMP_DECLSPEC
 
mpf_abs
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1293 
	#mpf_add
 
__gmpf_add


	)

1294 
__GMP_DECLSPEC
 
mpf_add
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, mpf_srcptr));

1296 
	#mpf_add_ui
 
__gmpf_add_ui


	)

1297 
__GMP_DECLSPEC
 
mpf_add_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, ));

1298 
	#mpf_˚û
 
__gmpf_˚û


	)

1299 
__GMP_DECLSPEC
 
mpf_˚û
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1301 
	#mpf_˛ór
 
__gmpf_˛ór


	)

1302 
__GMP_DECLSPEC
 
mpf_˛ór
 
	`__GMP_PROTO
 ((
mpf_±r
));

1304 
	#mpf_˛órs
 
__gmpf_˛órs


	)

1305 
__GMP_DECLSPEC
 
mpf_˛órs
 
	`__GMP_PROTO
 ((
mpf_±r
, ...));

1307 
	#mpf_cmp
 
__gmpf_cmp


	)

1308 
__GMP_DECLSPEC
 
mpf_cmp
 
	`__GMP_PROTO
 ((
mpf_§˝å
, mpf_§˝å)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1310 
	#mpf_cmp_d
 
__gmpf_cmp_d


	)

1311 
__GMP_DECLSPEC
 
mpf_cmp_d
 
	`__GMP_PROTO
 ((
mpf_§˝å
, )Ë
__GMP_ATTRIBUTE_PURE
;

1313 
	#mpf_cmp_si
 
__gmpf_cmp_si


	)

1314 
__GMP_DECLSPEC
 
mpf_cmp_si
 
	`__GMP_PROTO
 ((
mpf_§˝å
, sig√d )Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1316 
	#mpf_cmp_ui
 
__gmpf_cmp_ui


	)

1317 
__GMP_DECLSPEC
 
mpf_cmp_ui
 
	`__GMP_PROTO
 ((
mpf_§˝å
, )Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1319 
	#mpf_div
 
__gmpf_div


	)

1320 
__GMP_DECLSPEC
 
mpf_div
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, mpf_srcptr));

1322 
	#mpf_div_2exp
 
__gmpf_div_2exp


	)

1323 
__GMP_DECLSPEC
 
mpf_div_2exp
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, 
mp_bô˙t_t
));

1325 
	#mpf_div_ui
 
__gmpf_div_ui


	)

1326 
__GMP_DECLSPEC
 
mpf_div_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, ));

1328 
	#mpf_dump
 
__gmpf_dump


	)

1329 
__GMP_DECLSPEC
 
mpf_dump
 
	`__GMP_PROTO
 ((
mpf_§˝å
));

1331 
	#mpf_eq
 
__gmpf_eq


	)

1332 
__GMP_DECLSPEC
 
mpf_eq
 
	`__GMP_PROTO
 ((
mpf_§˝å
, mpf_§˝å, 
mp_bô˙t_t
)Ë
__GMP_ATTRIBUTE_PURE
;

1334 
	#mpf_fôs_söt_p
 
__gmpf_fôs_söt_p


	)

1335 
__GMP_DECLSPEC
 
mpf_fôs_söt_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1337 
	#mpf_fôs_¶⁄g_p
 
__gmpf_fôs_¶⁄g_p


	)

1338 
__GMP_DECLSPEC
 
mpf_fôs_¶⁄g_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1340 
	#mpf_fôs_ssh‹t_p
 
__gmpf_fôs_ssh‹t_p


	)

1341 
__GMP_DECLSPEC
 
mpf_fôs_ssh‹t_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1343 
	#mpf_fôs_uöt_p
 
__gmpf_fôs_uöt_p


	)

1344 
__GMP_DECLSPEC
 
mpf_fôs_uöt_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1346 
	#mpf_fôs_ul⁄g_p
 
__gmpf_fôs_ul⁄g_p


	)

1347 
__GMP_DECLSPEC
 
mpf_fôs_ul⁄g_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1349 
	#mpf_fôs_ush‹t_p
 
__gmpf_fôs_ush‹t_p


	)

1350 
__GMP_DECLSPEC
 
mpf_fôs_ush‹t_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1352 
	#mpf_Êo‹
 
__gmpf_Êo‹


	)

1353 
__GMP_DECLSPEC
 
mpf_Êo‹
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1355 
	#mpf_gë_d
 
__gmpf_gë_d


	)

1356 
__GMP_DECLSPEC
 
mpf_gë_d
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_ATTRIBUTE_PURE
;

1358 
	#mpf_gë_d_2exp
 
__gmpf_gë_d_2exp


	)

1359 
__GMP_DECLSPEC
 
mpf_gë_d_2exp
 
	`__GMP_PROTO
 ((sig√d *, 
mpf_§˝å
));

1361 
	#mpf_gë_deÁu…_¥ec
 
__gmpf_gë_deÁu…_¥ec


	)

1362 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpf_gë_deÁu…_¥ec
 
	`__GMP_PROTO
 (()Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1364 
	#mpf_gë_¥ec
 
__gmpf_gë_¥ec


	)

1365 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
mpf_gë_¥ec
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1367 
	#mpf_gë_si
 
__gmpf_gë_si


	)

1368 
__GMP_DECLSPEC
 
mpf_gë_si
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1370 
	#mpf_gë_°r
 
__gmpf_gë_°r


	)

1371 
__GMP_DECLSPEC
 *
mpf_gë_°r
 
	`__GMP_PROTO
 ((*, 
mp_exp_t
 *, , 
size_t
, 
mpf_§˝å
));

1373 
	#mpf_gë_ui
 
__gmpf_gë_ui


	)

1374 
__GMP_DECLSPEC
 
mpf_gë_ui
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1376 
	#mpf_öô
 
__gmpf_öô


	)

1377 
__GMP_DECLSPEC
 
mpf_öô
 
	`__GMP_PROTO
 ((
mpf_±r
));

1379 
	#mpf_öô2
 
__gmpf_öô2


	)

1380 
__GMP_DECLSPEC
 
mpf_öô2
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mp_bô˙t_t
));

1382 
	#mpf_öôs
 
__gmpf_öôs


	)

1383 
__GMP_DECLSPEC
 
mpf_öôs
 
	`__GMP_PROTO
 ((
mpf_±r
, ...));

1385 
	#mpf_öô_£t
 
__gmpf_öô_£t


	)

1386 
__GMP_DECLSPEC
 
mpf_öô_£t
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1388 
	#mpf_öô_£t_d
 
__gmpf_öô_£t_d


	)

1389 
__GMP_DECLSPEC
 
mpf_öô_£t_d
 
	`__GMP_PROTO
 ((
mpf_±r
, ));

1391 
	#mpf_öô_£t_si
 
__gmpf_öô_£t_si


	)

1392 
__GMP_DECLSPEC
 
mpf_öô_£t_si
 
	`__GMP_PROTO
 ((
mpf_±r
, signed ));

1394 
	#mpf_öô_£t_°r
 
__gmpf_öô_£t_°r


	)

1395 
__GMP_DECLSPEC
 
mpf_öô_£t_°r
 
	`__GMP_PROTO
 ((
mpf_±r
, 
__gmp_c⁄°
 *, ));

1397 
	#mpf_öô_£t_ui
 
__gmpf_öô_£t_ui


	)

1398 
__GMP_DECLSPEC
 
mpf_öô_£t_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, ));

1400 
	#mpf_öp_°r
 
__gmpf_öp_°r


	)

1401 #ifde‡
_GMP_H_HAVE_FILE


1402 
__GMP_DECLSPEC
 
size_t
 
mpf_öp_°r
 
	`__GMP_PROTO
 ((
mpf_±r
, 
FILE
 *, ));

1405 
	#mpf_öãgî_p
 
__gmpf_öãgî_p


	)

1406 
__GMP_DECLSPEC
 
mpf_öãgî_p
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1408 
	#mpf_mul
 
__gmpf_mul


	)

1409 
__GMP_DECLSPEC
 
mpf_mul
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, mpf_srcptr));

1411 
	#mpf_mul_2exp
 
__gmpf_mul_2exp


	)

1412 
__GMP_DECLSPEC
 
mpf_mul_2exp
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, 
mp_bô˙t_t
));

1414 
	#mpf_mul_ui
 
__gmpf_mul_ui


	)

1415 
__GMP_DECLSPEC
 
mpf_mul_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, ));

1417 
	#mpf_√g
 
__gmpf_√g


	)

1418 
__GMP_DECLSPEC
 
mpf_√g
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1420 
	#mpf_out_°r
 
__gmpf_out_°r


	)

1421 #ifde‡
_GMP_H_HAVE_FILE


1422 
__GMP_DECLSPEC
 
size_t
 
mpf_out_°r
 
	`__GMP_PROTO
 ((
FILE
 *, , size_t, 
mpf_§˝å
));

1425 
	#mpf_pow_ui
 
__gmpf_pow_ui


	)

1426 
__GMP_DECLSPEC
 
mpf_pow_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, ));

1428 
	#mpf_øndom2
 
__gmpf_øndom2


	)

1429 
__GMP_DECLSPEC
 
mpf_øndom2
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mp_size_t
, 
mp_exp_t
));

1431 
	#mpf_ªldiff
 
__gmpf_ªldiff


	)

1432 
__GMP_DECLSPEC
 
mpf_ªldiff
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, mpf_srcptr));

1434 
	#mpf_£t
 
__gmpf_£t


	)

1435 
__GMP_DECLSPEC
 
mpf_£t
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1437 
	#mpf_£t_d
 
__gmpf_£t_d


	)

1438 
__GMP_DECLSPEC
 
mpf_£t_d
 
	`__GMP_PROTO
 ((
mpf_±r
, ));

1440 
	#mpf_£t_deÁu…_¥ec
 
__gmpf_£t_deÁu…_¥ec


	)

1441 
__GMP_DECLSPEC
 
mpf_£t_deÁu…_¥ec
 
	`__GMP_PROTO
 ((
mp_bô˙t_t
)Ë
__GMP_NOTHROW
;

1443 
	#mpf_£t_¥ec
 
__gmpf_£t_¥ec


	)

1444 
__GMP_DECLSPEC
 
mpf_£t_¥ec
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mp_bô˙t_t
));

1446 
	#mpf_£t_¥ec_øw
 
__gmpf_£t_¥ec_øw


	)

1447 
__GMP_DECLSPEC
 
mpf_£t_¥ec_øw
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mp_bô˙t_t
)Ë
__GMP_NOTHROW
;

1449 
	#mpf_£t_q
 
__gmpf_£t_q


	)

1450 
__GMP_DECLSPEC
 
mpf_£t_q
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpq_§˝å
));

1452 
	#mpf_£t_si
 
__gmpf_£t_si


	)

1453 
__GMP_DECLSPEC
 
mpf_£t_si
 
	`__GMP_PROTO
 ((
mpf_±r
, signed ));

1455 
	#mpf_£t_°r
 
__gmpf_£t_°r


	)

1456 
__GMP_DECLSPEC
 
mpf_£t_°r
 
	`__GMP_PROTO
 ((
mpf_±r
, 
__gmp_c⁄°
 *, ));

1458 
	#mpf_£t_ui
 
__gmpf_£t_ui


	)

1459 
__GMP_DECLSPEC
 
mpf_£t_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, ));

1461 
	#mpf_£t_z
 
__gmpf_£t_z


	)

1462 
__GMP_DECLSPEC
 
mpf_£t_z
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpz_§˝å
));

1464 
	#mpf_size
 
__gmpf_size


	)

1465 
__GMP_DECLSPEC
 
size_t
 
mpf_size
 
	`__GMP_PROTO
 ((
mpf_§˝å
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1467 
	#mpf_sqπ
 
__gmpf_sqπ


	)

1468 
__GMP_DECLSPEC
 
mpf_sqπ
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1470 
	#mpf_sqπ_ui
 
__gmpf_sqπ_ui


	)

1471 
__GMP_DECLSPEC
 
mpf_sqπ_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, ));

1473 
	#mpf_sub
 
__gmpf_sub


	)

1474 
__GMP_DECLSPEC
 
mpf_sub
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, mpf_srcptr));

1476 
	#mpf_sub_ui
 
__gmpf_sub_ui


	)

1477 
__GMP_DECLSPEC
 
mpf_sub_ui
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
, ));

1479 
	#mpf_sw≠
 
__gmpf_sw≠


	)

1480 
__GMP_DECLSPEC
 
mpf_sw≠
 
	`__GMP_PROTO
 ((
mpf_±r
, mpf_±r)Ë
__GMP_NOTHROW
;

1482 
	#mpf_åunc
 
__gmpf_åunc


	)

1483 
__GMP_DECLSPEC
 
mpf_åunc
 
	`__GMP_PROTO
 ((
mpf_±r
, 
mpf_§˝å
));

1485 
	#mpf_ui_div
 
__gmpf_ui_div


	)

1486 
__GMP_DECLSPEC
 
mpf_ui_div
 
	`__GMP_PROTO
 ((
mpf_±r
, , 
mpf_§˝å
));

1488 
	#mpf_ui_sub
 
__gmpf_ui_sub


	)

1489 
__GMP_DECLSPEC
 
mpf_ui_sub
 
	`__GMP_PROTO
 ((
mpf_±r
, , 
mpf_§˝å
));

1491 
	#mpf_uøndomb
 
__gmpf_uøndomb


	)

1492 
__GMP_DECLSPEC
 
mpf_uøndomb
 
	`__GMP_PROTO
 ((
mpf_t
, 
gmp_ønd°©e_t
, 
mp_bô˙t_t
));

1499 
	#m≤_add
 
	`__MPN
(
add
)

	)

1500 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_add
)

1501 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_add
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_srcptr,mp_size_t));

1504 
	#m≤_add_1
 
	`__MPN
(
add_1
)

	)

1505 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_add_1
)

1506 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_add_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_limb_t)Ë
__GMP_NOTHROW
;

1509 
	#m≤_add_n
 
	`__MPN
(
add_n
)

	)

1510 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_add_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1512 
	#m≤_addmul_1
 
	`__MPN
(
addmul_1
)

	)

1513 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_addmul_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_limb_t));

1515 
	#m≤_cmp
 
	`__MPN
(
cmp
)

	)

1516 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_cmp
)

1517 
__GMP_DECLSPEC
 
m≤_cmp
 
	`__GMP_PROTO
 ((
mp_§˝å
, mp_§˝å, 
mp_size_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1520 
	#m≤_divexa˘_by3
(
d°
,
§c
,
size
) \

1521 
	`m≤_divexa˘_by3c
 (
d°
, 
§c
, 
size
, 
	`__GMP_CAST
 (
mp_limb_t
, 0))

	)

1523 
	#m≤_divexa˘_by3c
 
	`__MPN
(
divexa˘_by3c
)

	)

1524 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_divexa˘_by3c
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_limb_t));

1526 
	#m≤_divmod_1
(
qp
,
≈
,
nsize
,
dlimb
) \

1527 
	`m≤_divªm_1
 (
qp
, 
	`__GMP_CAST
 (
mp_size_t
, 0), 
≈
, 
nsize
, 
dlimb
)

	)

1529 
	#m≤_divªm
 
	`__MPN
(
divªm
)

	)

1530 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_divªm
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_size_t
, mp_±r, mp_size_t, 
mp_§˝å
, mp_size_t));

1532 
	#m≤_divªm_1
 
	`__MPN
(
divªm_1
)

	)

1533 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_divªm_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_size_t
, 
mp_§˝å
, mp_size_t, mp_limb_t));

1535 
	#m≤_divªm_2
 
	`__MPN
(
divªm_2
)

	)

1536 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_divªm_2
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_size_t
, mp_±r, mp_size_t, 
mp_§˝å
));

1538 
	#m≤_gcd
 
	`__MPN
(
gcd
)

	)

1539 
__GMP_DECLSPEC
 
mp_size_t
 
m≤_gcd
 
	`__GMP_PROTO
 ((
mp_±r
, mp_ptr, mp_size_t, mp_ptr, mp_size_t));

1541 
	#m≤_gcd_1
 
	`__MPN
(
gcd_1
)

	)

1542 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_gcd_1
 
	`__GMP_PROTO
 ((
mp_§˝å
, 
mp_size_t
, mp_limb_t)Ë
__GMP_ATTRIBUTE_PURE
;

1544 
	#m≤_gcdext_1
 
	`__MPN
(
gcdext_1
)

	)

1545 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_gcdext_1
 
	`__GMP_PROTO
 ((
mp_limb_sig√d_t
 *, mp_limb_signed_t *, mp_limb_t, mp_limb_t));

1547 
	#m≤_gcdext
 
	`__MPN
(
gcdext
)

	)

1548 
__GMP_DECLSPEC
 
mp_size_t
 
m≤_gcdext
 
	`__GMP_PROTO
 ((
mp_±r
, mp_ptr, mp_size_t *, mp_ptr, mp_size_t, mp_ptr, mp_size_t));

1550 
	#m≤_gë_°r
 
	`__MPN
(
gë_°r
)

	)

1551 
__GMP_DECLSPEC
 
size_t
 
m≤_gë_°r
 
	`__GMP_PROTO
 ((*, , 
mp_±r
, 
mp_size_t
));

1553 
	#m≤_hamdi°
 
	`__MPN
(
hamdi°
)

	)

1554 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
m≤_hamdi°
 
	`__GMP_PROTO
 ((
mp_§˝å
, mp_§˝å, 
mp_size_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1556 
	#m≤_lshi·
 
	`__MPN
(
lshi·
)

	)

1557 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_lshi·
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, ));

1559 
	#m≤_mod_1
 
	`__MPN
(
mod_1
)

	)

1560 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_mod_1
 
	`__GMP_PROTO
 ((
mp_§˝å
, 
mp_size_t
, mp_limb_t)Ë
__GMP_ATTRIBUTE_PURE
;

1562 
	#m≤_mul
 
	`__MPN
(
mul
)

	)

1563 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_mul
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_srcptr, mp_size_t));

1565 
	#m≤_mul_1
 
	`__MPN
(
mul_1
)

	)

1566 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_mul_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_limb_t));

1568 
	#m≤_mul_n
 
	`__MPN
(
mul_n
)

	)

1569 
__GMP_DECLSPEC
 
m≤_mul_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1571 
	#m≤_sqr
 
	`__MPN
(
sqr
)

	)

1572 
__GMP_DECLSPEC
 
m≤_sqr
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
));

1574 
	#m≤_√g
 
	`__MPN
(
√g
)

	)

1575 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_√g
)

1576 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_√g
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
));

1579 
	#m≤_com
 
	`__MPN
(
com
)

	)

1580 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_com
)

1581 
__GMP_DECLSPEC
 
m≤_com
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
));

1584 
	#m≤_≥r„˘_squ¨e_p
 
	`__MPN
(
≥r„˘_squ¨e_p
)

	)

1585 
__GMP_DECLSPEC
 
m≤_≥r„˘_squ¨e_p
 
	`__GMP_PROTO
 ((
mp_§˝å
, 
mp_size_t
)Ë
__GMP_ATTRIBUTE_PURE
;

1587 
	#m≤_≥r„˘_powî_p
 
	`__MPN
(
≥r„˘_powî_p
)

	)

1588 
__GMP_DECLSPEC
 
m≤_≥r„˘_powî_p
 
	`__GMP_PROTO
 ((
mp_§˝å
, 
mp_size_t
)Ë
__GMP_ATTRIBUTE_PURE
;

1590 
	#m≤_p›cou¡
 
	`__MPN
(
p›cou¡
)

	)

1591 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
m≤_p›cou¡
 
	`__GMP_PROTO
 ((
mp_§˝å
, 
mp_size_t
)Ë
__GMP_NOTHROW
 
__GMP_ATTRIBUTE_PURE
;

1593 
	#m≤_pow_1
 
	`__MPN
(
pow_1
)

	)

1594 
__GMP_DECLSPEC
 
mp_size_t
 
m≤_pow_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_size_t, 
mp_limb_t
, mp_ptr));

1597 
	#m≤_¥eöv_mod_1
 
	`__MPN
(
¥eöv_mod_1
)

	)

1598 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_¥eöv_mod_1
 
	`__GMP_PROTO
 ((
mp_§˝å
, 
mp_size_t
, mp_limb_t, mp_limb_t)Ë
__GMP_ATTRIBUTE_PURE
;

1600 
	#m≤_øndom
 
	`__MPN
(
øndom
)

	)

1601 
__GMP_DECLSPEC
 
m≤_øndom
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_size_t
));

1603 
	#m≤_øndom2
 
	`__MPN
(
øndom2
)

	)

1604 
__GMP_DECLSPEC
 
m≤_øndom2
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_size_t
));

1606 
	#m≤_rshi·
 
	`__MPN
(
rshi·
)

	)

1607 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_rshi·
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, ));

1609 
	#m≤_sˇn0
 
	`__MPN
(
sˇn0
)

	)

1610 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
m≤_sˇn0
 
	`__GMP_PROTO
 ((
mp_§˝å
, mp_bô˙t_t)Ë
__GMP_ATTRIBUTE_PURE
;

1612 
	#m≤_sˇn1
 
	`__MPN
(
sˇn1
)

	)

1613 
__GMP_DECLSPEC
 
mp_bô˙t_t
 
m≤_sˇn1
 
	`__GMP_PROTO
 ((
mp_§˝å
, mp_bô˙t_t)Ë
__GMP_ATTRIBUTE_PURE
;

1615 
	#m≤_£t_°r
 
	`__MPN
(
£t_°r
)

	)

1616 
__GMP_DECLSPEC
 
mp_size_t
 
m≤_£t_°r
 
	`__GMP_PROTO
 ((
mp_±r
, 
__gmp_c⁄°
 *, 
size_t
, ));

1618 
	#m≤_sqπªm
 
	`__MPN
(
sqπªm
)

	)

1619 
__GMP_DECLSPEC
 
mp_size_t
 
m≤_sqπªm
 
	`__GMP_PROTO
 ((
mp_±r
, mp_±r, 
mp_§˝å
, mp_size_t));

1621 
	#m≤_sub
 
	`__MPN
(
sub
)

	)

1622 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_sub
)

1623 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_sub
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_srcptr,mp_size_t));

1626 
	#m≤_sub_1
 
	`__MPN
(
sub_1
)

	)

1627 #i‡
__GMP_INLINE_PROTOTYPES
 || 
	`deföed
 (
__GMP_FORCE_m≤_sub_1
)

1628 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_sub_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_limb_t)Ë
__GMP_NOTHROW
;

1631 
	#m≤_sub_n
 
	`__MPN
(
sub_n
)

	)

1632 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_sub_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1634 
	#m≤_submul_1
 
	`__MPN
(
submul_1
)

	)

1635 
__GMP_DECLSPEC
 
mp_limb_t
 
m≤_submul_1
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
, mp_limb_t));

1637 
	#m≤_tdiv_qr
 
	`__MPN
(
tdiv_qr
)

	)

1638 
__GMP_DECLSPEC
 
m≤_tdiv_qr
 
	`__GMP_PROTO
 ((
mp_±r
, mp_±r, 
mp_size_t
, 
mp_§˝å
, mp_size_t, mp_srcptr, mp_size_t));

1640 
	#m≤_™d_n
 
	`__MPN
(
™d_n
)

	)

1641 
__GMP_DECLSPEC
 
m≤_™d_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1642 
	#m≤_™dn_n
 
	`__MPN
(
™dn_n
)

	)

1643 
__GMP_DECLSPEC
 
m≤_™dn_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1644 
	#m≤_«nd_n
 
	`__MPN
(
«nd_n
)

	)

1645 
__GMP_DECLSPEC
 
m≤_«nd_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1646 
	#m≤_i‹_n
 
	`__MPN
(
i‹_n
)

	)

1647 
__GMP_DECLSPEC
 
m≤_i‹_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1648 
	#m≤_i‹n_n
 
	`__MPN
(
i‹n_n
)

	)

1649 
__GMP_DECLSPEC
 
m≤_i‹n_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1650 
	#m≤_ni‹_n
 
	`__MPN
(
ni‹_n
)

	)

1651 
__GMP_DECLSPEC
 
m≤_ni‹_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1652 
	#m≤_x‹_n
 
	`__MPN
(
x‹_n
)

	)

1653 
__GMP_DECLSPEC
 
m≤_x‹_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1654 
	#m≤_xn‹_n
 
	`__MPN
(
xn‹_n
)

	)

1655 
__GMP_DECLSPEC
 
m≤_xn‹_n
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, mp_§˝å, 
mp_size_t
));

1657 
	#m≤_c›yi
 
	`__MPN
(
c›yi
)

	)

1658 
__GMP_DECLSPEC
 
m≤_c›yi
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
));

1659 
	#m≤_c›yd
 
	`__MPN
(
c›yd
)

	)

1660 
__GMP_DECLSPEC
 
m≤_c›yd
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_§˝å
, 
mp_size_t
));

1661 
	#m≤_zîo
 
	`__MPN
(
zîo
)

	)

1662 
__GMP_DECLSPEC
 
m≤_zîo
 
	`__GMP_PROTO
 ((
mp_±r
, 
mp_size_t
));

1680 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë&& ! deföed (
__GMP_FORCE_mpz_abs
)

1681 
__GMP_EXTERN_INLINE
 

1682 
	`mpz_abs
 (
mpz_±r
 
__gmp_w
, 
mpz_§˝å
 
__gmp_u
)

1684 i‡(
__gmp_w
 !
__gmp_u
)

1685 
	`mpz_£t
 (
__gmp_w
, 
__gmp_u
);

1686 
__gmp_w
->
_mp_size
 = 
	`__GMP_ABS
 (__gmp_w->_mp_size);

1690 #i‡
GMP_NAIL_BITS
 == 0

1691 
	#__GMPZ_FITS_UTYPE_P
(
z
,
maxvÆ
) \

1692 
mp_size_t
 
__gmp_n
 = 
z
->
_mp_size
; \

1693 
mp_±r
 
__gmp_p
 = 
z
->
_mp_d
; \

1694  (
__gmp_n
 =0 || (__gmp_¿=1 && 
__gmp_p
[0] <
maxvÆ
));

	)

1696 
	#__GMPZ_FITS_UTYPE_P
(
z
,
maxvÆ
) \

1697 
mp_size_t
 
__gmp_n
 = 
z
->
_mp_size
; \

1698 
mp_±r
 
__gmp_p
 = 
z
->
_mp_d
; \

1699  (
__gmp_n
 =0 || (__gmp_¿=1 && 
__gmp_p
[0] <
maxvÆ
) \

1700 || (
__gmp_n
 =2 && 
__gmp_p
[1] <((
mp_limb_t
Ë
maxvÆ
 >> 
GMP_NUMB_BITS
)));

	)

1703 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_fôs_uöt_p
)

1704 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_fôs_uöt_p
)

1705 
__GMP_EXTERN_INLINE


1708 
	`mpz_fôs_uöt_p
 (
mpz_§˝å
 
__gmp_z
Ë
__GMP_NOTHROW


1710 
	`__GMPZ_FITS_UTYPE_P
 (
__gmp_z
, 
__GMP_UINT_MAX
);

1714 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_fôs_ul⁄g_p
)

1715 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_fôs_ul⁄g_p
)

1716 
__GMP_EXTERN_INLINE


1719 
	`mpz_fôs_ul⁄g_p
 (
mpz_§˝å
 
__gmp_z
Ë
__GMP_NOTHROW


1721 
	`__GMPZ_FITS_UTYPE_P
 (
__gmp_z
, 
__GMP_ULONG_MAX
);

1725 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_fôs_ush‹t_p
)

1726 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_fôs_ush‹t_p
)

1727 
__GMP_EXTERN_INLINE


1730 
	`mpz_fôs_ush‹t_p
 (
mpz_§˝å
 
__gmp_z
Ë
__GMP_NOTHROW


1732 
	`__GMPZ_FITS_UTYPE_P
 (
__gmp_z
, 
__GMP_USHRT_MAX
);

1736 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_gë_ui
)

1737 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_gë_ui
)

1738 
__GMP_EXTERN_INLINE


1741 
	`mpz_gë_ui
 (
mpz_§˝å
 
__gmp_z
Ë
__GMP_NOTHROW


1743 
mp_±r
 
__gmp_p
 = 
__gmp_z
->
_mp_d
;

1744 
mp_size_t
 
__gmp_n
 = 
__gmp_z
->
_mp_size
;

1745 
mp_limb_t
 
__gmp_l
 = 
__gmp_p
[0];

1750 #i‡
GMP_NAIL_BITS
 =0 || 
	`deföed
 (
_LONG_LONG_LIMB
)

1752  (
__gmp_n
 !0 ? 
__gmp_l
 : 0);

1755 
__gmp_n
 = 
	`__GMP_ABS
 (__gmp_n);

1756 i‡(
__gmp_n
 <= 1)

1757  (
__gmp_n
 !0 ? 
__gmp_l
 : 0);

1759  
__gmp_l
 + (
__gmp_p
[1] << 
GMP_NUMB_BITS
);

1764 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_gëlimbn
)

1765 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_gëlimbn
)

1766 
__GMP_EXTERN_INLINE


1768 
mp_limb_t


1769 
	`mpz_gëlimbn
 (
mpz_§˝å
 
__gmp_z
, 
mp_size_t
 
__gmp_n
Ë
__GMP_NOTHROW


1771 
mp_limb_t
 
__gmp_ªsu…
 = 0;

1772 i‡(
	`__GMP_LIKELY
 (
__gmp_n
 >0 && __gmp_¿< 
	`__GMP_ABS
 (
__gmp_z
->
_mp_size
)))

1773 
__gmp_ªsu…
 = 
__gmp_z
->
_mp_d
[
__gmp_n
];

1774  
__gmp_ªsu…
;

1778 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë&& ! deföed (
__GMP_FORCE_mpz_√g
)

1779 
__GMP_EXTERN_INLINE
 

1780 
	`mpz_√g
 (
mpz_±r
 
__gmp_w
, 
mpz_§˝å
 
__gmp_u
)

1782 i‡(
__gmp_w
 !
__gmp_u
)

1783 
	`mpz_£t
 (
__gmp_w
, 
__gmp_u
);

1784 
__gmp_w
->
_mp_size
 = - __gmp_w->_mp_size;

1788 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_≥r„˘_squ¨e_p
)

1789 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_≥r„˘_squ¨e_p
)

1790 
__GMP_EXTERN_INLINE


1793 
	`mpz_≥r„˘_squ¨e_p
 (
mpz_§˝å
 
__gmp_a
)

1795 
mp_size_t
 
__gmp_asize
;

1796 
__gmp_ªsu…
;

1798 
__gmp_asize
 = 
__gmp_a
->
_mp_size
;

1799 
__gmp_ªsu…
 = (
__gmp_asize
 >= 0);

1800 i‡(
	`__GMP_LIKELY
 (
__gmp_asize
 > 0))

1801 
__gmp_ªsu…
 = 
	`m≤_≥r„˘_squ¨e_p
 (
__gmp_a
->
_mp_d
, 
__gmp_asize
);

1802  
__gmp_ªsu…
;

1806 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_p›cou¡
)

1807 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_p›cou¡
)

1808 
__GMP_EXTERN_INLINE


1810 
mp_bô˙t_t


1811 
	`mpz_p›cou¡
 (
mpz_§˝å
 
__gmp_u
Ë
__GMP_NOTHROW


1813 
mp_size_t
 
__gmp_usize
;

1814 
mp_bô˙t_t
 
__gmp_ªsu…
;

1816 
__gmp_usize
 = 
__gmp_u
->
_mp_size
;

1817 
__gmp_ªsu…
 = (
__gmp_usize
 < 0 ? 
__GMP_ULONG_MAX
 : 0);

1818 i‡(
	`__GMP_LIKELY
 (
__gmp_usize
 > 0))

1819 
__gmp_ªsu…
 = 
	`m≤_p›cou¡
 (
__gmp_u
->
_mp_d
, 
__gmp_usize
);

1820  
__gmp_ªsu…
;

1824 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_£t_q
)

1825 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_£t_q
)

1826 
__GMP_EXTERN_INLINE


1829 
	`mpz_£t_q
 (
mpz_±r
 
__gmp_w
, 
mpq_§˝å
 
__gmp_u
)

1831 
	`mpz_tdiv_q
 (
__gmp_w
, 
	`mpq_numªf
 (
__gmp_u
), 
	`mpq_díªf
 (__gmp_u));

1835 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_mpz_size
)

1836 #i‡! 
	`deföed
 (
__GMP_FORCE_mpz_size
)

1837 
__GMP_EXTERN_INLINE


1839 
size_t


1840 
	`mpz_size
 (
mpz_§˝å
 
__gmp_z
Ë
__GMP_NOTHROW


1842  
	`__GMP_ABS
 (
__gmp_z
->
_mp_size
);

1849 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë&& ! deföed (
__GMP_FORCE_mpq_abs
)

1850 
__GMP_EXTERN_INLINE
 

1851 
	`mpq_abs
 (
mpq_±r
 
__gmp_w
, 
mpq_§˝å
 
__gmp_u
)

1853 i‡(
__gmp_w
 !
__gmp_u
)

1854 
	`mpq_£t
 (
__gmp_w
, 
__gmp_u
);

1855 
__gmp_w
->
_mp_num
.
_mp_size
 = 
	`__GMP_ABS
 (__gmp_w->_mp_num._mp_size);

1859 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë&& ! deföed (
__GMP_FORCE_mpq_√g
)

1860 
__GMP_EXTERN_INLINE
 

1861 
	`mpq_√g
 (
mpq_±r
 
__gmp_w
, 
mpq_§˝å
 
__gmp_u
)

1863 i‡(
__gmp_w
 !
__gmp_u
)

1864 
	`mpq_£t
 (
__gmp_w
, 
__gmp_u
);

1865 
__gmp_w
->
_mp_num
.
_mp_size
 = - __gmp_w->_mp_num._mp_size;

1887 
	#__GMPN_AORS
(
cout
, 
wp
, 
xp
, 
xsize
, 
yp
, 
ysize
, 
FUNCTION
, 
TEST
) \

1889 
mp_size_t
 
__gmp_i
; \

1890 
mp_limb_t
 
__gmp_x
; \

1897 
__gmp_i
 = (
ysize
); \

1898 i‡(
__gmp_i
 != 0) \

1900 i‡(
	`FUNCTION
 (
wp
, 
xp
, 
yp
, 
__gmp_i
)) \

1904 i‡(
__gmp_i
 >(
xsize
)) \

1906 (
cout
) = 1; \

1907 
__gmp_d⁄e
; \

1909 
__gmp_x
 = (
xp
)[
__gmp_i
]; \

1911 
TEST
); \

1914 i‡((
wp
Ë!(
xp
)) \

1915 
	`__GMPN_COPY_REST
 (
wp
, 
xp
, 
xsize
, 
__gmp_i
); \

1916 (
cout
) = 0; \

1917 
__gmp_d⁄e
: \

1919 } 0)

	)

1921 
	#__GMPN_ADD
(
cout
, 
wp
, 
xp
, 
xsize
, 
yp
, 
ysize
) \

1922 
	`__GMPN_AORS
 (
cout
, 
wp
, 
xp
, 
xsize
, 
yp
, 
ysize
, 
m≤_add_n
, \

1923 (((
wp
)[
__gmp_i
++] = (
__gmp_x
 + 1Ë& 
GMP_NUMB_MASK
Ë=0))

	)

1924 
	#__GMPN_SUB
(
cout
, 
wp
, 
xp
, 
xsize
, 
yp
, 
ysize
) \

1925 
	`__GMPN_AORS
 (
cout
, 
wp
, 
xp
, 
xsize
, 
yp
, 
ysize
, 
m≤_sub_n
, \

1926 (((
wp
)[
__gmp_i
++] = (
__gmp_x
 - 1Ë& 
GMP_NUMB_MASK
), __gmp_x =0))

	)

1953 #i‡
GMP_NAIL_BITS
 == 0

1954 
	#__GMPN_AORS_1
(
cout
, 
d°
, 
§c
, 
n
, 
v
, 
OP
, 
CB
) \

1956 
mp_size_t
 
__gmp_i
; \

1957 
mp_limb_t
 
__gmp_x
, 
__gmp_r
; \

1962 
__gmp_x
 = (
§c
)[0]; \

1963 
__gmp_r
 = 
__gmp_x
 
	`OP
 (
v
); \

1964 (
d°
)[0] = 
__gmp_r
; \

1965 i‡(
	`CB
 (
__gmp_r
, 
__gmp_x
, (
v
))) \

1967 (
cout
) = 1; \

1968 
__gmp_i
 = 1; __gmp_ò< (
n
);) \

1970 
__gmp_x
 = (
§c
)[
__gmp_i
]; \

1971 
__gmp_r
 = 
__gmp_x
 
OP
 1; \

1972 (
d°
)[
__gmp_i
] = 
__gmp_r
; \

1973 ++
__gmp_i
; \

1974 i‡(!
	`CB
 (
__gmp_r
, 
__gmp_x
, 1)) \

1976 i‡((
§c
Ë!(
d°
)) \

1977 
	`__GMPN_COPY_REST
 (
d°
, 
§c
, 
n
, 
__gmp_i
); \

1978 (
cout
) = 0; \

1985 i‡((
§c
Ë!(
d°
)) \

1986 
	`__GMPN_COPY_REST
 (
d°
, 
§c
, 
n
, 1); \

1987 (
cout
) = 0; \

1989 } 0)

	)

1992 #i‡
GMP_NAIL_BITS
 >= 1

1993 
	#__GMPN_AORS_1
(
cout
, 
d°
, 
§c
, 
n
, 
v
, 
OP
, 
CB
) \

1995 
mp_size_t
 
__gmp_i
; \

1996 
mp_limb_t
 
__gmp_x
, 
__gmp_r
; \

2001 
__gmp_x
 = (
§c
)[0]; \

2002 
__gmp_r
 = 
__gmp_x
 
	`OP
 (
v
); \

2003 (
d°
)[0] = 
__gmp_r
 & 
GMP_NUMB_MASK
; \

2004 i‡(
__gmp_r
 >> 
GMP_NUMB_BITS
 != 0) \

2006 (
cout
) = 1; \

2007 
__gmp_i
 = 1; __gmp_ò< (
n
);) \

2009 
__gmp_x
 = (
§c
)[
__gmp_i
]; \

2010 
__gmp_r
 = 
__gmp_x
 
OP
 1; \

2011 (
d°
)[
__gmp_i
] = 
__gmp_r
 & 
GMP_NUMB_MASK
; \

2012 ++
__gmp_i
; \

2013 i‡(
__gmp_r
 >> 
GMP_NUMB_BITS
 == 0) \

2015 i‡((
§c
Ë!(
d°
)) \

2016 
	`__GMPN_COPY_REST
 (
d°
, 
§c
, 
n
, 
__gmp_i
); \

2017 (
cout
) = 0; \

2024 i‡((
§c
Ë!(
d°
)) \

2025 
	`__GMPN_COPY_REST
 (
d°
, 
§c
, 
n
, 1); \

2026 (
cout
) = 0; \

2028 } 0)

	)

2031 
	#__GMPN_ADDCB
(
r
,
x
,
y
Ë(‘Ë< (y))

	)

2032 
	#__GMPN_SUBCB
(
r
,
x
,
y
Ë((xË< (y))

	)

2034 
	#__GMPN_ADD_1
(
cout
, 
d°
, 
§c
, 
n
, 
v
) \

2035 
	`__GMPN_AORS_1
(
cout
, 
d°
, 
§c
, 
n
, 
v
, +, 
__GMPN_ADDCB
)

	)

2036 
	#__GMPN_SUB_1
(
cout
, 
d°
, 
§c
, 
n
, 
v
) \

2037 
	`__GMPN_AORS_1
(
cout
, 
d°
, 
§c
, 
n
, 
v
, -, 
__GMPN_SUBCB
)

	)

2043 
	#__GMPN_CMP
(
ªsu…
, 
xp
, 
yp
, 
size
) \

2045 
mp_size_t
 
__gmp_i
; \

2046 
mp_limb_t
 
__gmp_x
, 
__gmp_y
; \

2050 (
ªsu…
) = 0; \

2051 
__gmp_i
 = (
size
); \

2052 --
__gmp_i
 >= 0) \

2054 
__gmp_x
 = (
xp
)[
__gmp_i
]; \

2055 
__gmp_y
 = (
yp
)[
__gmp_i
]; \

2056 i‡(
__gmp_x
 !
__gmp_y
) \

2059 (
ªsu…
Ë(
__gmp_x
 > 
__gmp_y
 ? 1 : -1); \

2063 } 0)

	)

2066 #i‡
	`deföed
 (
__GMPN_COPY
Ë&& ! deföed (
__GMPN_COPY_REST
)

2067 
	#__GMPN_COPY_REST
(
d°
, 
§c
, 
size
, 
°¨t
) \

2071 
	`__GMPN_COPY
 ((
d°
)+(
°¨t
), (
§c
)+(°¨t), (
size
)-(start)); \

2072 } 0)

	)

2078 #i‡! 
	`deföed
 (
__GMPN_COPY_REST
)

2079 
	#__GMPN_COPY_REST
(
d°
, 
§c
, 
size
, 
°¨t
) \

2081 
mp_size_t
 
__gmp_j
; \

2086 
	`__GMP_CRAY_Pøgma
 ("_CRI ivdep"); \

2087 
__gmp_j
 = (
°¨t
); __gmp_j < (
size
); __gmp_j++) \

2088 (
d°
)[
__gmp_j
] = (
§c
)[__gmp_j]; \

2089 } 0)

	)

2096 #i‡! 
	`deföed
 (
__GMPN_COPY
)

2097 
	#__GMPN_COPY
(
d°
, 
§c
, 
size
Ë
	`__GMPN_COPY_REST
 (d°, src, size, 0)

	)

2101 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_m≤_add
)

2102 #i‡! 
	`deföed
 (
__GMP_FORCE_m≤_add
)

2103 
__GMP_EXTERN_INLINE


2105 
mp_limb_t


2106 
	`m≤_add
 (
mp_±r
 
__gmp_wp
, 
mp_§˝å
 
__gmp_xp
, 
mp_size_t
 
__gmp_xsize
, mp_§˝å 
__gmp_yp
, mp_size_à
__gmp_ysize
)

2108 
mp_limb_t
 
__gmp_c
;

2109 
	`__GMPN_ADD
 (
__gmp_c
, 
__gmp_wp
, 
__gmp_xp
, 
__gmp_xsize
, 
__gmp_yp
, 
__gmp_ysize
);

2110  
__gmp_c
;

2114 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_m≤_add_1
)

2115 #i‡! 
	`deföed
 (
__GMP_FORCE_m≤_add_1
)

2116 
__GMP_EXTERN_INLINE


2118 
mp_limb_t


2119 
	`m≤_add_1
 (
mp_±r
 
__gmp_d°
, 
mp_§˝å
 
__gmp_§c
, 
mp_size_t
 
__gmp_size
, 
mp_limb_t
 
__gmp_n
Ë
__GMP_NOTHROW


2121 
mp_limb_t
 
__gmp_c
;

2122 
	`__GMPN_ADD_1
 (
__gmp_c
, 
__gmp_d°
, 
__gmp_§c
, 
__gmp_size
, 
__gmp_n
);

2123  
__gmp_c
;

2127 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_m≤_cmp
)

2128 #i‡! 
	`deföed
 (
__GMP_FORCE_m≤_cmp
)

2129 
__GMP_EXTERN_INLINE


2132 
	`m≤_cmp
 (
mp_§˝å
 
__gmp_xp
, mp_§˝å 
__gmp_yp
, 
mp_size_t
 
__gmp_size
Ë
__GMP_NOTHROW


2134 
__gmp_ªsu…
;

2135 
	`__GMPN_CMP
 (
__gmp_ªsu…
, 
__gmp_xp
, 
__gmp_yp
, 
__gmp_size
);

2136  
__gmp_ªsu…
;

2140 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_m≤_sub
)

2141 #i‡! 
	`deföed
 (
__GMP_FORCE_m≤_sub
)

2142 
__GMP_EXTERN_INLINE


2144 
mp_limb_t


2145 
	`m≤_sub
 (
mp_±r
 
__gmp_wp
, 
mp_§˝å
 
__gmp_xp
, 
mp_size_t
 
__gmp_xsize
, mp_§˝å 
__gmp_yp
, mp_size_à
__gmp_ysize
)

2147 
mp_limb_t
 
__gmp_c
;

2148 
	`__GMPN_SUB
 (
__gmp_c
, 
__gmp_wp
, 
__gmp_xp
, 
__gmp_xsize
, 
__gmp_yp
, 
__gmp_ysize
);

2149  
__gmp_c
;

2153 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_m≤_sub_1
)

2154 #i‡! 
	`deföed
 (
__GMP_FORCE_m≤_sub_1
)

2155 
__GMP_EXTERN_INLINE


2157 
mp_limb_t


2158 
	`m≤_sub_1
 (
mp_±r
 
__gmp_d°
, 
mp_§˝å
 
__gmp_§c
, 
mp_size_t
 
__gmp_size
, 
mp_limb_t
 
__gmp_n
Ë
__GMP_NOTHROW


2160 
mp_limb_t
 
__gmp_c
;

2161 
	`__GMPN_SUB_1
 (
__gmp_c
, 
__gmp_d°
, 
__gmp_§c
, 
__gmp_size
, 
__gmp_n
);

2162  
__gmp_c
;

2166 #i‡
	`deföed
 (
__GMP_EXTERN_INLINE
Ë|| deföed (
__GMP_FORCE_m≤_√g
)

2167 #i‡! 
	`deföed
 (
__GMP_FORCE_m≤_√g
)

2168 
__GMP_EXTERN_INLINE


2170 
mp_limb_t


2171 
	`m≤_√g
 (
mp_±r
 
__gmp_Ω
, 
mp_§˝å
 
__gmp_up
, 
mp_size_t
 
__gmp_n
)

2173 
mp_limb_t
 
__gmp_ul
, 
__gmp_cy
;

2174 
__gmp_cy
 = 0;

2176 
__gmp_ul
 = *
__gmp_up
++;

2177 *
__gmp_Ω
++ = -
__gmp_ul
 - 
__gmp_cy
;

2178 
__gmp_cy
 |
__gmp_ul
 != 0;

2179 } --
__gmp_n
 != 0);

2180  
__gmp_cy
;

2184 #i‡
	`deföed
 (
__˝lu•lus
)

2185 
	}
}

2190 
	#mpz_sgn
(
Z
Ë((Z)->
_mp_size
 < 0 ? -1 : (Z)->_mp_sizê> 0)

	)

2191 
	#mpf_sgn
(
F
Ë((F)->
_mp_size
 < 0 ? -1 : (F)->_mp_sizê> 0)

	)

2192 
	#mpq_sgn
(
Q
Ë((Q)->
_mp_num
.
_mp_size
 < 0 ? -1 : (Q)->_mp_num._mp_sizê> 0)

	)

2195 #i‡
deföed
 (
__GNUC__
) && __GNUC__ >= 2

2196 
	#mpz_cmp_ui
(
Z
,
UI
) \

2197 (
	`__buûtö_c⁄°™t_p
 (
UI
) && (UI) == 0 \

2198 ? 
	`mpz_sgn
 (
Z
Ë: 
	`_mpz_cmp_ui
 (Z,
UI
))

	)

2199 
	#mpz_cmp_si
(
Z
,
SI
) \

2200 (
	`__buûtö_c⁄°™t_p
 (
SI
Ë&& (SIË=0 ? 
	`mpz_sgn
 (
Z
) \

2201 : 
	`__buûtö_c⁄°™t_p
 (
SI
) && (SI) > 0 \

2202 ? 
	`_mpz_cmp_ui
 (
Z
, 
	`__GMP_CAST
 (, 
SI
)) \

2203 : 
	`_mpz_cmp_si
 (
Z
,
SI
))

	)

2204 
	#mpq_cmp_ui
(
Q
,
NUI
,
DUI
) \

2205 (
	`__buûtö_c⁄°™t_p
 (
NUI
) && (NUI) == 0 \

2206 ? 
	`mpq_sgn
 (
Q
Ë: 
	`_mpq_cmp_ui
 (Q,
NUI
,
DUI
))

	)

2207 
	#mpq_cmp_si
(
q
,
n
,
d
) \

2208 (
	`__buûtö_c⁄°™t_p
 ((
n
) >= 0) && (n) >= 0 \

2209 ? 
	`mpq_cmp_ui
 (
q
, 
	`__GMP_CAST
 (, 
n
), 
d
) \

2210 : 
	`_mpq_cmp_si
 (
q
, 
n
, 
d
))

	)

2212 
	#mpz_cmp_ui
(
Z
,
UI
Ë
	`_mpz_cmp_ui
 (Z,UI)

	)

2213 
	#mpz_cmp_si
(
Z
,
UI
Ë
	`_mpz_cmp_si
 (Z,UI)

	)

2214 
	#mpq_cmp_ui
(
Q
,
NUI
,
DUI
Ë
	`_mpq_cmp_ui
 (Q,NUI,DUI)

	)

2215 
	#mpq_cmp_si
(
q
,
n
,
d
Ë
	`_mpq_cmp_si
(q,n,d)

	)

2222 
	#mpz_odd_p
(
z
Ë(((z)->
_mp_size
 !0Ë& 
	`__GMP_CAST
 (, (z)->
_mp_d
[0]))

	)

2223 
	#mpz_eví_p
(
z
Ë(! 
	`mpz_odd_p
 (z))

	)

2228 #ifde‡
__˝lu•lus


2229 
__GMP_DECLSPEC_XX
 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &, 
	gmpz_§˝å
);

2230 
__GMP_DECLSPEC_XX
 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &, 
	gmpq_§˝å
);

2231 
__GMP_DECLSPEC_XX
 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &, 
	gmpf_§˝å
);

2232 
__GMP_DECLSPEC_XX
 
	g°d
::
i°ªam
& 
›î©‹
>> (
°d
::i°ªam &, 
	gmpz_±r
);

2233 
__GMP_DECLSPEC_XX
 
	g°d
::
i°ªam
& 
›î©‹
>> (
°d
::i°ªam &, 
	gmpq_±r
);

2234 
__GMP_DECLSPEC_XX
 
	g°d
::
i°ªam
& 
›î©‹
>> (
°d
::i°ªam &, 
	gmpf_±r
);

2239 
	#m≤_divmod
(
qp
,
≈
,
nsize
,
dp
,
dsize
) \

2240 
	`m≤_divªm
 (
qp
, 
	`__GMP_CAST
 (
mp_size_t
, 0), 
≈
, 
nsize
, 
dp
, 
dsize
)

	)

2243 
	#mpz_mdiv
 
mpz_fdiv_q


	)

2244 
	#mpz_mdivmod
 
mpz_fdiv_qr


	)

2245 
	#mpz_mmod
 
mpz_fdiv_r


	)

2246 
	#mpz_mdiv_ui
 
mpz_fdiv_q_ui


	)

2247 
	#mpz_mdivmod_ui
(
q
,
r
,
n
,
d
) \

2248 (((
r
Ë=0Ë? 
	`mpz_fdiv_q_ui
 (
q
,
n
,
d
Ë: 
	`mpz_fdiv_qr_ui
 (q,r,n,d))

	)

2249 
	#mpz_mmod_ui
(
r
,
n
,
d
) \

2250 (((
r
Ë=0Ë? 
	`mpz_fdiv_ui
 (
n
,
d
Ë: 
	`mpz_fdiv_r_ui
 (r,n,d))

	)

2253 
	#mpz_div
 
mpz_fdiv_q


	)

2254 
	#mpz_divmod
 
mpz_fdiv_qr


	)

2255 
	#mpz_div_ui
 
mpz_fdiv_q_ui


	)

2256 
	#mpz_divmod_ui
 
mpz_fdiv_qr_ui


	)

2257 
	#mpz_div_2exp
 
mpz_fdiv_q_2exp


	)

2258 
	#mpz_mod_2exp
 
mpz_fdiv_r_2exp


	)

2262 
	gGMP_ERROR_NONE
 = 0,

2263 
	gGMP_ERROR_UNSUPPORTED_ARGUMENT
 = 1,

2264 
	gGMP_ERROR_DIVISION_BY_ZERO
 = 2,

2265 
	gGMP_ERROR_SQRT_OF_NEGATIVE
 = 4,

2266 
	gGMP_ERROR_INVALID_ARGUMENT
 = 8

2270 
	#__GMP_CC
 "i686-löux-gnu-gc¯-°d=gnu99"

	)

2271 
	#__GMP_CFLAGS
 "-WÆ»-g -O3"

	)

2274 
	#__GNU_MP_VERSION
 5

	)

2275 
	#__GNU_MP_VERSION_MINOR
 0

	)

2276 
	#__GNU_MP_VERSION_PATCHLEVEL
 2

	)

2277 
	#__GMP_MP_RELEASE
 (
__GNU_MP_VERSION
 * 10000 + 
__GNU_MP_VERSION_MINOR
 * 100 + 
__GNU_MP_VERSION_PATCHLEVEL
)

	)

2279 
	#__GMP_H__


	)

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

29 
	#__bsw≠_c⁄°™t_16
(
x
) \

30 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

32 #ifde‡
__GNUC__


33 #i‡
__GNUC__
 >= 2

34 
	#__bsw≠_16
(
x
) \

35 (
__exãnsi⁄__
 \

36 ({ 
__v
, 
__x
 = (Ë(
x
); \

37 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

38 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

40 
	`__asm__
 ("rorw $8, %w0" \

41 : "Ù" (
__v
) \

42 : "0" (
__x
) \

44 
__v
; }))

	)

47 
	#__bsw≠_16
(
x
) \

48 (
__exãnsi⁄__
 \

49 ({ 
__x
 = (Ë(
x
); \

50 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

53 
__ölöe
 

54 
	$__bsw≠_16
 (
__bsx
)

56  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

57 
	}
}

61 
	#__bsw≠_c⁄°™t_32
(
x
) \

62 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

63 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

65 #ifde‡
__GNUC__


66 #i‡
__GNUC__
 >= 2

69 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

70 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

71 && !
deföed
 
	g__k6__
 && !deföed 
	g__noc⁄a__
 && !deföed 
	g__c‹e2__
 \

72 && !
deföed
 
	g__geode__
 && !deföed 
	g__amdÁm10__


73 
	#__bsw≠_32
(
x
) \

74 (
__exãnsi⁄__
 \

75 ({ 
__v
, 
__x
 = (
x
); \

76 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

77 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

79 
	`__asm__
 ("rorw $8, %w0;" \

82 : "Ù" (
__v
) \

83 : "0" (
__x
) \

85 
__v
; }))

	)

87 
	#__bsw≠_32
(
x
) \

88 (
__exãnsi⁄__
 \

89 ({ 
__v
, 
__x
 = (
x
); \

90 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

91 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

93 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

94 
__v
; }))

	)

97 
	#__bsw≠_32
(
x
) \

98 (
__exãnsi⁄__
 \

99 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

102 
__ölöe
 

103 
	$__bsw≠_32
 (
__bsx
)

105  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

106 
	}
}

110 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

112 
	#__bsw≠_c⁄°™t_64
(
x
) \

113 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

114 | (((
x
) & 0x00ff000000000000ull) >> 40) \

115 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

116 | (((
x
) & 0x000000ff00000000ull) >> 8) \

117 | (((
x
) & 0x00000000ff000000ull) << 8) \

118 | (((
x
) & 0x0000000000ff0000ull) << 24) \

119 | (((
x
) & 0x000000000000ff00ull) << 40) \

120 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

122 
	#__bsw≠_64
(
x
) \

123 (
__exãnsi⁄__
 \

124 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

125 
__l
[2]; } 
__w
, 
__r
; \

126 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

127 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

130 
__w
.
__Œ
 = (
x
); \

131 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

132 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

134 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__sh¨ed
;

133 
	m__∑d1
;

134 
	m__∑d2
;

135 
	m__wrôî
;

136 } 
	m__d©a
;

137 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

138 
	m__Æign
;

139 } 
	t±hªad_rwlock_t
;

143 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

144 
	m__Æign
;

145 } 
	t±hªad_rwlock©å_t
;

149 #ifde‡
__USE_XOPEN2K


151 vﬁ©ûê
	t±hªad_•ölock_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

159 
	m__Æign
;

160 } 
	t±hªad_b¨rõr_t
;

164 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

165 
	m__Æign
;

166 } 
	t±hªad_b¨rõøâr_t
;

171 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

25 
	#__FD_ZERO
(
fd•
) \

27 
__d0
, 
__d1
; \

28 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

29 : "=c" (
__d0
), "=D" (
__d1
) \

30 : "a" (0), "0" ( (
fd_£t
) \

31 /  (
__fd_mask
)), \

32 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

34 } 0)

	)

40 
	#__FD_ZERO
(
£t
) \

42 
__i
; \

43 
fd_£t
 *
__¨r
 = (
£t
); \

44 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

45 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

46 } 0)

	)

50 
	#__FD_SET
(
d
, 
£t
) \

51 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

52 
	#__FD_CLR
(
d
, 
£t
) \

53 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

54 
	#__FD_ISSET
(
d
, 
£t
) \

55 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
2
.
.
1
/usr/include
222
4077
config.h
installdir/include/mpc.h
src/abs.c
src/acos.c
src/acosh.c
src/add.c
src/add_fr.c
src/add_ui.c
src/arg.c
src/asin.c
src/asinh.c
src/atan.c
src/atanh.c
src/clear.c
src/cmp.c
src/cmp_si_si.c
src/conj.c
src/cos.c
src/cosh.c
src/div.c
src/div_2exp.c
src/div_fr.c
src/div_ui.c
src/exp.c
src/fr_div.c
src/fr_sub.c
src/get_prec.c
src/get_prec2.c
src/get_str.c
src/get_version.c
src/imag.c
src/init2.c
src/init3.c
src/inp_str.c
src/log.c
src/mem.c
src/mpc-impl.h
src/mpc.h
src/mul.c
src/mul_2exp.c
src/mul_fr.c
src/mul_i.c
src/mul_si.c
src/mul_ui.c
src/neg.c
src/norm.c
src/out_str.c
src/pow.c
src/pow_d.c
src/pow_fr.c
src/pow_ld.c
src/pow_si.c
src/pow_ui.c
src/pow_z.c
src/proj.c
src/real.c
src/set.c
src/set_prec.c
src/set_str.c
src/set_x.c
src/set_x_x.c
src/sin.c
src/sinh.c
src/sqr.c
src/sqrt.c
src/strtoc.c
src/sub.c
src/sub_fr.c
src/sub_ui.c
src/swap.c
src/tan.c
src/tanh.c
src/uceil_log2.c
src/ui_div.c
src/ui_ui_sub.c
src/urandom.c
tests/comparisons.c
tests/memory.c
tests/mpc-tests.h
tests/random.c
tests/read_data.c
tests/tabs.c
tests/tacos.c
tests/tacosh.c
tests/tadd.c
tests/tadd_fr.c
tests/tadd_ui.c
tests/targ.c
tests/tasin.c
tests/tasinh.c
tests/tatan.c
tests/tatanh.c
tests/tconj.c
tests/tcos.c
tests/tcosh.c
tests/tdiv.c
tests/tdiv_2exp.c
tests/tdiv_fr.c
tests/tdiv_ui.c
tests/texp.c
tests/tfr_div.c
tests/tfr_sub.c
tests/tgeneric.c
tests/tget_version.c
tests/timag.c
tests/tio_str.c
tests/tlog.c
tests/tmul.c
tests/tmul_2exp.c
tests/tmul_fr.c
tests/tmul_i.c
tests/tmul_si.c
tests/tmul_ui.c
tests/tneg.c
tests/tnorm.c
tests/tpow.c
tests/tpow_d.c
tests/tpow_fr.c
tests/tpow_ld.c
tests/tpow_si.c
tests/tpow_ui.c
tests/tpow_z.c
tests/tprec.c
tests/tproj.c
tests/treal.c
tests/treimref.c
tests/tset.c
tests/tsin.c
tests/tsinh.c
tests/tsqr.c
tests/tsqrt.c
tests/tstrtoc.c
tests/tsub.c
tests/tsub_fr.c
tests/tsub_ui.c
tests/ttan.c
tests/ttanh.c
tests/tui_div.c
tests/tui_ui_sub.c
/usr/include/ctype.h
/usr/include/gmp.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/mpc.h
/usr/include/mpfr.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/locale.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/gmp-i386.h
/usr/include/libio.h
/usr/include/sys/select.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/sysmacros.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
